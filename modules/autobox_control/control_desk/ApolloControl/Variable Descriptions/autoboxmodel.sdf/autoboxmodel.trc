-- ****************************************************************************
--
--  Trace file: AutoboxModel.trc
--
--  RTI1401 7.13 (02-Nov-2019)
--  Fri Mar 26 15:59:55 2021
--
--  Copyright 2021, dSPACE GmbH. All rights reserved.
--
-- ****************************************************************************
--
--  Used options:
--    TRCGenerateVirtualBlocks      = 1
--    TRCGenerateLabels             = 1
--    TRCGenerateStates             = 1
--    TRCGenerateDerivatives        = 1
--    TRCGenerateParamValues        = 1
--    TRCGenerateApplicationKeyword = 0
--    TRCOnlyGlobals                = 0
--    TRCIsOmitVdOn                 = 0
--
--  Trace file format: 3

-- ******** Keywords **********************************************************
-- _application "AutoboxModel.map"

_genname     "RTI"
_genversion  "7.13"
_gendate     "03/26/2021 16:00:00"
_description ""
_author      "RTI1401 7.13 (02-Nov-2019)"
_model       "AutoboxModel"

-- Default data type formats
_floating_point_type(64,IEEE)
_integer_type(32)

-- No Data Capture blocks within model: use base sample time as sampling period
sampling_period[0]
{
  value:       0.01
  alias:       "HostService"
  increment:   0.01
  unit:        "s"
}



-- Type definitions for structures

struct AutoboxModel_ControlCommands
{
  array-incr: 24        
}
    structField0 
    {
      alias:   "controller_active"
      type:    uint(8)
      offs:    0
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField1 
    {
      alias:   "acceleration"
      type:    flt(64,IEEE)
      offs:    8
    }
    structField2 
    {
      alias:   "steering_angle"
      type:    flt(64,IEEE)
      offs:    16
    }
endstruct

struct AutoboxModel_Assistance_1
{
  array-incr: 20        
}
    structField0 
    {
      alias:   "ABSstate"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "ACCmainSwitch"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "ACCrequest"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "ACCresumeButton"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "ACCsetButton"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "ACCstate"
      type:    int(8)
      offs:    5
    }
    structField6 
    {
      alias:   "ASRstate"
      type:    int(8)
      offs:    6
    }
    structField7 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    7
    }
    structField8 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    8
    }
    structField9 
    {
      alias:   "EPBstate"
      type:    int(8)
      offs:    9
    }
    structField10 
    {
      alias:   "ESCstate"
      type:    int(8)
      offs:    10
    }
    structField11 
    {
      alias:   "FDstate"
      type:    int(8)
      offs:    11
    }
    structField12 
    {
      alias:   "FrontAssistIntervention"
      type:    int(8)
      offs:    12
    }
    structField13 
    {
      alias:   "LCAstateLeft"
      type:    int(8)
      offs:    13
    }
    structField14 
    {
      alias:   "LCAstateRight"
      type:    int(8)
      offs:    14
    }
    structField15 
    {
      alias:   "LDWdistanceToLine"
      type:    int(8)
      offs:    15
    }
    structField16 
    {
      alias:   "LDWselection"
      type:    int(8)
      offs:    16
    }
    structField17 
    {
      alias:   "LDWstate"
      type:    int(8)
      offs:    17
    }
    structField18 
    {
      alias:   "LDWtimeToLine"
      type:    int(8)
      offs:    18
    }
    structField19 
    {
      alias:   "LKAstate"
      type:    int(8)
      offs:    19
    }
endstruct

struct AutoboxModel_Assistance_2
{
  array-incr: 8         
}
    structField0 
    {
      alias:   "AirbagLamp"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "BrakeJerk"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "BrakeLamp"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "BrakePrefill"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "BrakePressure"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    5
    }
    structField6 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    6
    }
    structField7 
    {
      alias:   "EBIntervention"
      type:    int(8)
      offs:    7
    }
endstruct

struct AutoboxModel_FrontObject_1
{
  array-incr: 7         
}
    structField0 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "FusedState"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "ID"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "RelPosX"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "RelPosY"
      type:    int(8)
      offs:    5
    }
    structField6 
    {
      alias:   "RelVelocityX"
      type:    int(8)
      offs:    6
    }
endstruct

struct AutoboxModel_FrontObject_2
{
  array-incr: 7         
}
    structField0 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "FusedState"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "ID"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "RelPosX"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "RelPosY"
      type:    int(8)
      offs:    5
    }
    structField6 
    {
      alias:   "RelVelocityX"
      type:    int(8)
      offs:    6
    }
endstruct

struct AutoboxModel_FrontObject_3
{
  array-incr: 7         
}
    structField0 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "FusedState"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "ID"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "RelPosX"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "RelPosY"
      type:    int(8)
      offs:    5
    }
    structField6 
    {
      alias:   "RelVelocityX"
      type:    int(8)
      offs:    6
    }
endstruct

struct AutoboxModel_FrontObject_4
{
  array-incr: 7         
}
    structField0 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "FusedState"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "ID"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "RelPosX"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "RelPosY"
      type:    int(8)
      offs:    5
    }
    structField6 
    {
      alias:   "RelVelocityX"
      type:    int(8)
      offs:    6
    }
endstruct

struct AutoboxModel_GPSData_1
{
  array-incr: 4         
}
    structField0 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "LongDegree"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "LongDirection"
      type:    int(8)
      offs:    3
    }
endstruct

struct AutoboxModel_GPSData_2
{
  array-incr: 5         
}
    structField0 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "HeadingDirection"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "LatDegree"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "LatDirection"
      type:    int(8)
      offs:    4
    }
endstruct

struct AutoboxModel_GPSData_3
{
  array-incr: 4         
}
    structField0 
    {
      alias:   "Altitude"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "UTC"
      type:    int(8)
      offs:    3
    }
endstruct

struct AutoboxModel_Lane_LeftLeft_1
{
  array-incr: 6         
}
    structField0 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "Curvature"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "CurvatureRate"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "OffsetLateral"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "YawAngle"
      type:    int(8)
      offs:    5
    }
endstruct

struct AutoboxModel_Lane_LeftLeft_2
{
  array-incr: 6         
}
    structField0 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Color"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "MaxDistanceLongitudinal"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "OffsetLongitudinal"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "Type"
      type:    int(8)
      offs:    5
    }
endstruct

struct AutoboxModel_Lane_Left_1
{
  array-incr: 6         
}
    structField0 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "Curvature"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "CurvatureRate"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "OffsetLateral"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "YawAngle"
      type:    int(8)
      offs:    5
    }
endstruct

struct AutoboxModel_Lane_Left_2
{
  array-incr: 8         
}
    structField0 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Camera_x_Position"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "Camera_y_Position"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "Color"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "MaxDistanceLongitudinal"
      type:    int(8)
      offs:    5
    }
    structField6 
    {
      alias:   "OffsetLongitudinal"
      type:    int(8)
      offs:    6
    }
    structField7 
    {
      alias:   "Type"
      type:    int(8)
      offs:    7
    }
endstruct

struct AutoboxModel_Lane_RightRight_1
{
  array-incr: 6         
}
    structField0 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "Curvature"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "CurvatureRate"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "OffsetLateral"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "YawAngle"
      type:    int(8)
      offs:    5
    }
endstruct

struct AutoboxModel_Lane_RightRight_2
{
  array-incr: 6         
}
    structField0 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Color"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "MaxDistanceLongitudinal"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "OffsetLongitudinal"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "Type"
      type:    int(8)
      offs:    5
    }
endstruct

struct AutoboxModel_Lane_Right_1
{
  array-incr: 6         
}
    structField0 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "Curvature"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "CurvatureRate"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "OffsetLateral"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "YawAngle"
      type:    int(8)
      offs:    5
    }
endstruct

struct AutoboxModel_Lane_Right_2
{
  array-incr: 6         
}
    structField0 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Color"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "MaxDistanceLongitudinal"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "OffsetLongitudinal"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "Type"
      type:    int(8)
      offs:    5
    }
endstruct

struct AutoboxModel_Misc_1
{
  array-incr: 16        
}
    structField0 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "DimmedHeadlights"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "DriverBraking"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "ExteriorLightSensor"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "ExteriorRainSensor"
      type:    int(8)
      offs:    5
    }
    structField6 
    {
      alias:   "ExteriorTemperature"
      type:    int(8)
      offs:    6
    }
    structField7 
    {
      alias:   "FogLightFront"
      type:    int(8)
      offs:    7
    }
    structField8 
    {
      alias:   "FogLightRear"
      type:    int(8)
      offs:    8
    }
    structField9 
    {
      alias:   "HighBeam"
      type:    int(8)
      offs:    9
    }
    structField10 
    {
      alias:   "Horn"
      type:    int(8)
      offs:    10
    }
    structField11 
    {
      alias:   "Odometer"
      type:    int(8)
      offs:    11
    }
    structField12 
    {
      alias:   "TurnIndicatorsLeft"
      type:    int(8)
      offs:    12
    }
    structField13 
    {
      alias:   "TurnIndicatorsRight"
      type:    int(8)
      offs:    13
    }
    structField14 
    {
      alias:   "WheelPressureState"
      type:    int(8)
      offs:    14
    }
    structField15 
    {
      alias:   "Wipers"
      type:    int(8)
      offs:    15
    }
endstruct

struct AutoboxModel_Misc_2
{
  array-incr: 9         
}
    structField0 
    {
      alias:   "ACPowerLoad"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "EPBswitch"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "RoadGrade"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "StateClamp15"
      type:    int(8)
      offs:    5
    }
    structField6 
    {
      alias:   "TireCircumference"
      type:    int(8)
      offs:    6
    }
    structField7 
    {
      alias:   "VehicleMass"
      type:    int(8)
      offs:    7
    }
    structField8 
    {
      alias:   "WiperSpeed"
      type:    int(8)
      offs:    8
    }
endstruct

struct AutoboxModel_Misc_3
{
  array-incr: 3         
}
    structField0 
    {
      alias:   "BackupBatteryVoltage"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    2
    }
endstruct

struct AutoboxModel_Motion
{
  array-incr: 48        
}
    structField0 
    {
      alias:   "CRC"
      type:    uint(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Counter"
      type:    uint(8)
      offs:    1
    }
    structField2 
    {
      alias:   "LateralAcceleration"
      type:    flt(64,IEEE)
      offs:    8
    }
    structField3 
    {
      alias:   "LongitudinalAcceleration"
      type:    flt(64,IEEE)
      offs:    16
    }
    structField4 
    {
      alias:   "VehicleVelocity"
      type:    flt(64,IEEE)
      offs:    24
    }
    structField5 
    {
      alias:   "YawRate"
      type:    flt(64,IEEE)
      offs:    32
    }
    structField6 
    {
      alias:   "YawRateSign"
      type:    uint(8)
      offs:    40
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
endstruct

struct AutoboxModel_PassengerPresence
{
  array-incr: 11        
}
    structField0 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "DriverDoor"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "DriverSeatbelt"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "PassengerDoor"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "PassengerSeatbelt"
      type:    int(8)
      offs:    5
    }
    structField6 
    {
      alias:   "RearDriverDoor"
      type:    int(8)
      offs:    6
    }
    structField7 
    {
      alias:   "RearDriverSeatbelt"
      type:    int(8)
      offs:    7
    }
    structField8 
    {
      alias:   "RearMiddleSeatbelt"
      type:    int(8)
      offs:    8
    }
    structField9 
    {
      alias:   "RearPassengerDoor"
      type:    int(8)
      offs:    9
    }
    structField10 
    {
      alias:   "RearPassengerSeatbelt"
      type:    int(8)
      offs:    10
    }
endstruct

struct AutoboxModel_Powertrain_1
{
  array-incr: 8         
}
    structField0 
    {
      alias:   "ActualTorqueEngine"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "EngineRunning"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "EngineSpeed"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "Gear"
      type:    int(8)
      offs:    5
    }
    structField6 
    {
      alias:   "RequestedTorqueEngine"
      type:    int(8)
      offs:    6
    }
    structField7 
    {
      alias:   "ThrottlePedalPos"
      type:    int(8)
      offs:    7
    }
endstruct

struct AutoboxModel_Powertrain_2
{
  array-incr: 7         
}
    structField0 
    {
      alias:   "ActualTorqueElectricDrive"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "ActualTorquePowertrain"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "GearShiftState"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "HybridState"
      type:    int(8)
      offs:    5
    }
    structField6 
    {
      alias:   "RequestedTorqueElectricDrive"
      type:    int(8)
      offs:    6
    }
endstruct

struct AutoboxModel_Powertrain_3
{
  array-incr: 4         
}
    structField0 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "HVBatterySOC"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "HVBatteryVoltage"
      type:    int(8)
      offs:    3
    }
endstruct

struct AutoboxModel_RearObject_1
{
  array-incr: 7         
}
    structField0 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "RearID"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "RearPosX"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "RearPosY"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "RearRelVelocityX"
      type:    int(8)
      offs:    5
    }
    structField6 
    {
      alias:   "RearTracked"
      type:    int(8)
      offs:    6
    }
endstruct

struct AutoboxModel_RearObject_2
{
  array-incr: 7         
}
    structField0 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "RearID"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "RearPosX"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "RearPosY"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "RearRelVelocityX"
      type:    int(8)
      offs:    5
    }
    structField6 
    {
      alias:   "RearTracked"
      type:    int(8)
      offs:    6
    }
endstruct

struct AutoboxModel_RearObject_3
{
  array-incr: 7         
}
    structField0 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "RearID"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "RearPosX"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "RearPosY"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "RearRelVelocityX"
      type:    int(8)
      offs:    5
    }
    structField6 
    {
      alias:   "RearTracked"
      type:    int(8)
      offs:    6
    }
endstruct

struct AutoboxModel_RearObject_4
{
  array-incr: 7         
}
    structField0 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "RearID"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "RearPosX"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "RearPosY"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "RearRelVelocityX"
      type:    int(8)
      offs:    5
    }
    structField6 
    {
      alias:   "RearTracked"
      type:    int(8)
      offs:    6
    }
endstruct

struct AutoboxModel_RearObject_5
{
  array-incr: 7         
}
    structField0 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "RearID"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "RearPosX"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "RearPosY"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "RearRelVelocityX"
      type:    int(8)
      offs:    5
    }
    structField6 
    {
      alias:   "RearTracked"
      type:    int(8)
      offs:    6
    }
endstruct

struct AutoboxModel_RearObject_6
{
  array-incr: 7         
}
    structField0 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "RearID"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "RearPosX"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "RearPosY"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "RearRelVelocityX"
      type:    int(8)
      offs:    5
    }
    structField6 
    {
      alias:   "RearTracked"
      type:    int(8)
      offs:    6
    }
endstruct

struct AutoboxModel_Steering
{
  array-incr: 40        
}
    structField0 
    {
      alias:   "CRC"
      type:    uint(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Counter"
      type:    uint(8)
      offs:    1
    }
    structField2 
    {
      alias:   "SteeringWheelAngle"
      type:    flt(64,IEEE)
      offs:    8
    }
    structField3 
    {
      alias:   "SteeringWheelAngleSign"
      type:    uint(8)
      offs:    16
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField4 
    {
      alias:   "SteeringWheelSpeed"
      type:    uint(16)
      offs:    18
    }
    structField5 
    {
      alias:   "SteeringWheelSpeedSign"
      type:    uint(8)
      offs:    20
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField6 
    {
      alias:   "SteeringWheelTorque"
      type:    flt(64,IEEE)
      offs:    24
    }
    structField7 
    {
      alias:   "SteeringWheelTorqueSign"
      type:    uint(8)
      offs:    32
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
endstruct

struct AutoboxModel_SteeringWheelButtons
{
  array-incr: 13        
}
    structField0 
    {
      alias:   "ACCMainSwitch_Phys"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "ACCMode_Phys"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "ACCResumeButton_Phys"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "ACCSetButton_Phys"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "ACCTimegap_Phys"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "ACCTipDown_Phys"
      type:    int(8)
      offs:    5
    }
    structField6 
    {
      alias:   "ACCTipUp_Phys"
      type:    int(8)
      offs:    6
    }
    structField7 
    {
      alias:   "ButtonFirstPressed_Phys"
      type:    int(8)
      offs:    7
    }
    structField8 
    {
      alias:   "ButtonSecondPressed_Phys"
      type:    int(8)
      offs:    8
    }
    structField9 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    9
    }
    structField10 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    10
    }
    structField11 
    {
      alias:   "TipDown_Phys"
      type:    int(8)
      offs:    11
    }
    structField12 
    {
      alias:   "TipUp_Phys"
      type:    int(8)
      offs:    12
    }
endstruct

struct AutoboxModel_TrafficSigns_1
{
  array-incr: 11        
}
    structField0 
    {
      alias:   "AdditionalSign1"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "AdditionalSign2"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "AdditionalSign3"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "SourceSign1"
      type:    int(8)
      offs:    5
    }
    structField6 
    {
      alias:   "SourceSign2"
      type:    int(8)
      offs:    6
    }
    structField7 
    {
      alias:   "SourceSign3"
      type:    int(8)
      offs:    7
    }
    structField8 
    {
      alias:   "TrafficSign1"
      type:    int(8)
      offs:    8
    }
    structField9 
    {
      alias:   "TrafficSign2"
      type:    int(8)
      offs:    9
    }
    structField10 
    {
      alias:   "TrafficSign3"
      type:    int(8)
      offs:    10
    }
endstruct

struct AutoboxModel_TrafficSigns_2
{
  array-incr: 8         
}
    structField0 
    {
      alias:   "AdditionalSign4"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "AdditionalSign5"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "SourceSign4"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "SourceSign5"
      type:    int(8)
      offs:    5
    }
    structField6 
    {
      alias:   "TrafficSign4"
      type:    int(8)
      offs:    6
    }
    structField7 
    {
      alias:   "TrafficSign5"
      type:    int(8)
      offs:    7
    }
endstruct

struct AutoboxModel_USS_front
{
  array-incr: 6         
}
    structField0 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "USSFrontLeft"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "USSFrontLeftMiddle"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "USSFrontRight"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "USSFrontRightMiddle"
      type:    int(8)
      offs:    5
    }
endstruct

struct AutoboxModel_USS_rear
{
  array-incr: 6         
}
    structField0 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "USSRearLeft"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "USSRearLeftMiddle"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "USSRearRight"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "USSRearRightMiddle"
      type:    int(8)
      offs:    5
    }
endstruct

struct AutoboxModel_USS_side
{
  array-incr: 6         
}
    structField0 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "USSFrontLeftSide"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "USSFrontRightSide"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "USSRearLeftSide"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "USSRearRightSide"
      type:    int(8)
      offs:    5
    }
endstruct

struct AutoboxModel_Wheel_1
{
  array-incr: 6         
}
    structField0 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "FLDirection"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "FRDirection"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "RLDirection"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "RRDirection"
      type:    int(8)
      offs:    5
    }
endstruct

struct AutoboxModel_Wheel_2
{
  array-incr: 4         
}
    structField0 
    {
      alias:   "FLWheelSpeed"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "FRWheelSpeed"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "RLWheelSpeed"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "RRWheelSpeed"
      type:    int(8)
      offs:    3
    }
endstruct

struct AutoboxModel_vehicle_data_can_bus
{
  array-incr: 376       
}
    structField0 
    {
      alias:   "Assistance_1"
      type:    struct AutoboxModel_Assistance_1
      offs:    0
    }
    structField1 
    {
      alias:   "Assistance_2"
      type:    struct AutoboxModel_Assistance_2
      offs:    20
    }
    structField2 
    {
      alias:   "FrontObject_1"
      type:    struct AutoboxModel_FrontObject_1
      offs:    28
    }
    structField3 
    {
      alias:   "FrontObject_2"
      type:    struct AutoboxModel_FrontObject_2
      offs:    35
    }
    structField4 
    {
      alias:   "FrontObject_3"
      type:    struct AutoboxModel_FrontObject_3
      offs:    42
    }
    structField5 
    {
      alias:   "FrontObject_4"
      type:    struct AutoboxModel_FrontObject_4
      offs:    49
    }
    structField6 
    {
      alias:   "GPSData_1"
      type:    struct AutoboxModel_GPSData_1
      offs:    56
    }
    structField7 
    {
      alias:   "GPSData_2"
      type:    struct AutoboxModel_GPSData_2
      offs:    60
    }
    structField8 
    {
      alias:   "GPSData_3"
      type:    struct AutoboxModel_GPSData_3
      offs:    65
    }
    structField9 
    {
      alias:   "Lane_LeftLeft_1"
      type:    struct AutoboxModel_Lane_LeftLeft_1
      offs:    69
    }
    structField10 
    {
      alias:   "Lane_LeftLeft_2"
      type:    struct AutoboxModel_Lane_LeftLeft_2
      offs:    75
    }
    structField11 
    {
      alias:   "Lane_Left_1"
      type:    struct AutoboxModel_Lane_Left_1
      offs:    81
    }
    structField12 
    {
      alias:   "Lane_Left_2"
      type:    struct AutoboxModel_Lane_Left_2
      offs:    87
    }
    structField13 
    {
      alias:   "Lane_RightRight_1"
      type:    struct AutoboxModel_Lane_RightRight_1
      offs:    95
    }
    structField14 
    {
      alias:   "Lane_RightRight_2"
      type:    struct AutoboxModel_Lane_RightRight_2
      offs:    101
    }
    structField15 
    {
      alias:   "Lane_Right_1"
      type:    struct AutoboxModel_Lane_Right_1
      offs:    107
    }
    structField16 
    {
      alias:   "Lane_Right_2"
      type:    struct AutoboxModel_Lane_Right_2
      offs:    113
    }
    structField17 
    {
      alias:   "Misc_1"
      type:    struct AutoboxModel_Misc_1
      offs:    119
    }
    structField18 
    {
      alias:   "Misc_2"
      type:    struct AutoboxModel_Misc_2
      offs:    135
    }
    structField19 
    {
      alias:   "Misc_3"
      type:    struct AutoboxModel_Misc_3
      offs:    144
    }
    structField20 
    {
      alias:   "Motion"
      type:    struct AutoboxModel_Motion
      offs:    152
    }
    structField21 
    {
      alias:   "PassengerPresence"
      type:    struct AutoboxModel_PassengerPresence
      offs:    200
    }
    structField22 
    {
      alias:   "Powertrain_1"
      type:    struct AutoboxModel_Powertrain_1
      offs:    211
    }
    structField23 
    {
      alias:   "Powertrain_2"
      type:    struct AutoboxModel_Powertrain_2
      offs:    219
    }
    structField24 
    {
      alias:   "Powertrain_3"
      type:    struct AutoboxModel_Powertrain_3
      offs:    226
    }
    structField25 
    {
      alias:   "RearObject_1"
      type:    struct AutoboxModel_RearObject_1
      offs:    230
    }
    structField26 
    {
      alias:   "RearObject_2"
      type:    struct AutoboxModel_RearObject_2
      offs:    237
    }
    structField27 
    {
      alias:   "RearObject_3"
      type:    struct AutoboxModel_RearObject_3
      offs:    244
    }
    structField28 
    {
      alias:   "RearObject_4"
      type:    struct AutoboxModel_RearObject_4
      offs:    251
    }
    structField29 
    {
      alias:   "RearObject_5"
      type:    struct AutoboxModel_RearObject_5
      offs:    258
    }
    structField30 
    {
      alias:   "RearObject_6"
      type:    struct AutoboxModel_RearObject_6
      offs:    265
    }
    structField31 
    {
      alias:   "Steering"
      type:    struct AutoboxModel_Steering
      offs:    272
    }
    structField32 
    {
      alias:   "SteeringWheelButtons"
      type:    struct AutoboxModel_SteeringWheelButtons
      offs:    312
    }
    structField33 
    {
      alias:   "TrafficSigns_1"
      type:    struct AutoboxModel_TrafficSigns_1
      offs:    325
    }
    structField34 
    {
      alias:   "TrafficSigns_2"
      type:    struct AutoboxModel_TrafficSigns_2
      offs:    336
    }
    structField35 
    {
      alias:   "USS_front"
      type:    struct AutoboxModel_USS_front
      offs:    344
    }
    structField36 
    {
      alias:   "USS_rear"
      type:    struct AutoboxModel_USS_rear
      offs:    350
    }
    structField37 
    {
      alias:   "USS_side"
      type:    struct AutoboxModel_USS_side
      offs:    356
    }
    structField38 
    {
      alias:   "Wheel_1"
      type:    struct AutoboxModel_Wheel_1
      offs:    362
    }
    structField39 
    {
      alias:   "Wheel_2"
      type:    struct AutoboxModel_Wheel_2
      offs:    368
    }
endstruct

typedef AutoboxModel_ControlTrajectory_x_1 flt(64,IEEE)[1000]

struct AutoboxModel_ControlTrajectory
{
  array-incr: 88016     
}
    structField0 
    {
      alias:   "n_trajectory_point"
      type:    uint(32)
      offs:    0
    }
    structField1 
    {
      alias:   "x"
      type:    AutoboxModel_ControlTrajectory_x_1
      offs:    8
      unit:    "m"
    }
    structField2 
    {
      alias:   "y"
      type:    AutoboxModel_ControlTrajectory_x_1
      offs:    8008
      unit:    "m"
    }
    structField3 
    {
      alias:   "z"
      type:    AutoboxModel_ControlTrajectory_x_1
      offs:    16008
      unit:    "m"
    }
    structField4 
    {
      alias:   "theta"
      type:    AutoboxModel_ControlTrajectory_x_1
      offs:    24008
    }
    structField5 
    {
      alias:   "kappa"
      type:    AutoboxModel_ControlTrajectory_x_1
      offs:    32008
      desc:    "curvature on the x-y planning"
    }
    structField6 
    {
      alias:   "dkappa"
      type:    AutoboxModel_ControlTrajectory_x_1
      offs:    40008
      desc:    "derivative of kappa"
    }
    structField7 
    {
      alias:   "ddkappa"
      type:    AutoboxModel_ControlTrajectory_x_1
      offs:    48008
      desc:    "derivative of derivative of kappa"
    }
    structField8 
    {
      alias:   "s"
      type:    AutoboxModel_ControlTrajectory_x_1
      offs:    56008
      desc:    "accumulated distance from beginning of the path"
    }
    structField9 
    {
      alias:   "v"
      type:    AutoboxModel_ControlTrajectory_x_1
      offs:    64008
      unit:    "m/s"
    }
    structField10 
    {
      alias:   "a"
      type:    AutoboxModel_ControlTrajectory_x_1
      offs:    72008
      unit:    "m/s/s"
    }
    structField11 
    {
      alias:   "relative_time"
      type:    AutoboxModel_ControlTrajectory_x_1
      offs:    80008
      unit:    "s"
      desc:    "relative time from beginning of the trajectory"
    }
    structField12 
    {
      alias:   "timestamp_sec"
      type:    flt(64,IEEE)
      offs:    88008
      unit:    "s"
      desc:    "Message publishing time in seconds."
    }
endstruct

struct AutoboxModel_PointENU
{
  array-incr: 24        
}
    structField0 
    {
      alias:   "x"
      type:    flt(64,IEEE)
      offs:    0
    }
    structField1 
    {
      alias:   "y"
      type:    flt(64,IEEE)
      offs:    8
    }
    structField2 
    {
      alias:   "z"
      type:    flt(64,IEEE)
      offs:    16
    }
endstruct

struct AutoboxModel_Quaternion
{
  array-incr: 32        
}
    structField0 
    {
      alias:   "qx"
      type:    flt(64,IEEE)
      offs:    0
    }
    structField1 
    {
      alias:   "qy"
      type:    flt(64,IEEE)
      offs:    8
    }
    structField2 
    {
      alias:   "qz"
      type:    flt(64,IEEE)
      offs:    16
    }
    structField3 
    {
      alias:   "qw"
      type:    flt(64,IEEE)
      offs:    24
    }
endstruct

struct AutoboxModel_Point3D
{
  array-incr: 24        
}
    structField0 
    {
      alias:   "x"
      type:    flt(64,IEEE)
      offs:    0
    }
    structField1 
    {
      alias:   "y"
      type:    flt(64,IEEE)
      offs:    8
    }
    structField2 
    {
      alias:   "z"
      type:    flt(64,IEEE)
      offs:    16
    }
endstruct

struct AutoboxModel_Pose
{
  array-incr: 208       
}
    structField0 
    {
      alias:   "Position"
      type:    struct AutoboxModel_PointENU
      offs:    0
      desc:    "Position of the vehicle reference point (VRP) in the map reference frame.\nThe VRP is the center of rear axle."
    }
    structField1 
    {
      alias:   "Orientation"
      type:    struct AutoboxModel_Quaternion
      offs:    24
      desc:    "A quaternion that represents the rotation from the IMU coordinate\n(Right/Forward/Up) to the world coordinate (East/North/Up)."
    }
    structField2 
    {
      alias:   "LinearVelocity"
      type:    struct AutoboxModel_Point3D
      offs:    56
      desc:    "Linear velocity of the VRP in the map reference frame.\nEast/north/up in meters per second."
    }
    structField3 
    {
      alias:   "LinearAcceleration"
      type:    struct AutoboxModel_Point3D
      offs:    80
      desc:    "Linear acceleration of the VRP in the map reference frame.\nEast/north/up in meters per second."
    }
    structField4 
    {
      alias:   "AngularVelocity"
      type:    struct AutoboxModel_Point3D
      offs:    104
      desc:    "Angular velocity of the vehicle in the map reference frame.\nAround east/north/up axes in radians per second."
    }
    structField5 
    {
      alias:   "Heading"
      type:    flt(64,IEEE)
      offs:    128
      desc:    "The heading is zero when the car is facing East and positive when facing North."
    }
    structField6 
    {
      alias:   "LinearAccelerationVrf"
      type:    struct AutoboxModel_Point3D
      offs:    136
      desc:    "Linear acceleration of the VRP in the vehicle reference frame.\nRight/forward/up in meters per square second."
    }
    structField7 
    {
      alias:   "AngularVelocityVrf"
      type:    struct AutoboxModel_Point3D
      offs:    160
      desc:    "Angular velocity of the VRP in the vehicle reference frame.\nAround right/forward/up axes in radians per second."
    }
    structField8 
    {
      alias:   "EulerAngles"
      type:    struct AutoboxModel_Point3D
      offs:    184
      desc:    "Roll/pitch/yaw that represents a rotation with intrinsic sequence z-x-y.\nin world coordinate (East/North/Up)\nThe roll, in (-pi/2, pi/2), corresponds to a rotation around the y-axis.\nThe pitch, in [-pi, pi), corresponds to a rotation around the x-axis.\nThe yaw, in [-pi, pi), corresponds to a rotation around the z-axis.\nThe direction of rotation follows the right-hand rule."
    }
endstruct

struct AutoboxModel_Uncertainty
{
  array-incr: 120       
}
    structField0 
    {
      alias:   "PositionStdDev"
      type:    struct AutoboxModel_Point3D
      offs:    0
      desc:    "Standard deviation of position, east/north/up in meters."
    }
    structField1 
    {
      alias:   "OrientationStdDev"
      type:    struct AutoboxModel_Point3D
      offs:    24
      desc:    "Standard deviation of quaternion qx/qy/qz, unitless."
    }
    structField2 
    {
      alias:   "LinearVelocityStdDev"
      type:    struct AutoboxModel_Point3D
      offs:    48
      desc:    "Standard deviation of linear velocity, east/north/up in meters per second."
    }
    structField3 
    {
      alias:   "LinearAccelerationStdDev"
      type:    struct AutoboxModel_Point3D
      offs:    72
      desc:    "Standard deviation of linear acceleration, right/forward/up in meters per square second."
    }
    structField4 
    {
      alias:   "AngularVelocityStdDev"
      type:    struct AutoboxModel_Point3D
      offs:    96
      desc:    "Standard deviation of angular velocity, right/forward/up in radians per second."
    }
endstruct

struct AutoboxModel_LocalizationToAutobox
{
  array-incr: 336       
}
    structField0 
    {
      alias:   "Pose"
      type:    struct AutoboxModel_Pose
      offs:    0
    }
    structField1 
    {
      alias:   "MeasurementTime"
      type:    flt(64,IEEE)
      offs:    208
    }
    structField2 
    {
      alias:   "Uncertainty"
      type:    struct AutoboxModel_Uncertainty
      offs:    216
    }
endstruct

struct AutoboxModel_TrackingError
{
  array-incr: 64        
}
    structField0 
    {
      alias:   "e_v"
      type:    flt(64,IEEE)
      offs:    0
    }
    structField1 
    {
      alias:   "e_delta"
      type:    flt(64,IEEE)
      offs:    8
    }
    structField2 
    {
      alias:   "e_psi_dot"
      type:    flt(64,IEEE)
      offs:    16
    }
    structField3 
    {
      alias:   "e_n_dot"
      type:    flt(64,IEEE)
      offs:    24
    }
    structField4 
    {
      alias:   "e_t_dot"
      type:    flt(64,IEEE)
      offs:    32
    }
    structField5 
    {
      alias:   "e_psi"
      type:    flt(64,IEEE)
      offs:    40
    }
    structField6 
    {
      alias:   "e_n"
      type:    flt(64,IEEE)
      offs:    48
    }
    structField7 
    {
      alias:   "e_t"
      type:    flt(64,IEEE)
      offs:    56
    }
endstruct

struct AutoboxModel_ControllerParams
{
  array-incr: 64        
}
    structField0 
    {
      alias:   "k4"
      type:    flt(64,IEEE)
      offs:    0
    }
    structField1 
    {
      alias:   "k3"
      type:    flt(64,IEEE)
      offs:    8
    }
    structField2 
    {
      alias:   "k2"
      type:    flt(64,IEEE)
      offs:    16
    }
    structField3 
    {
      alias:   "k1"
      type:    flt(64,IEEE)
      offs:    24
    }
    structField4 
    {
      alias:   "J"
      type:    flt(64,IEEE)
      offs:    32
    }
    structField5 
    {
      alias:   "m"
      type:    flt(64,IEEE)
      offs:    40
    }
    structField6 
    {
      alias:   "l_v"
      type:    flt(64,IEEE)
      offs:    48
    }
    structField7 
    {
      alias:   "l_h"
      type:    flt(64,IEEE)
      offs:    56
    }
endstruct

struct AutoboxModel_TrajectoryPoint
{
  array-incr: 88        
}
    structField0 
    {
      alias:   "x"
      type:    flt(64,IEEE)
      offs:    0
      unit:    "m"
    }
    structField1 
    {
      alias:   "y"
      type:    flt(64,IEEE)
      offs:    8
      unit:    "m"
    }
    structField2 
    {
      alias:   "z"
      type:    flt(64,IEEE)
      offs:    16
      unit:    "m"
    }
    structField3 
    {
      alias:   "theta"
      type:    flt(64,IEEE)
      offs:    24
    }
    structField4 
    {
      alias:   "kappa"
      type:    flt(64,IEEE)
      offs:    32
      desc:    "curvature on the x-y planning"
    }
    structField5 
    {
      alias:   "dkappa"
      type:    flt(64,IEEE)
      offs:    40
      desc:    "derivative of kappa"
    }
    structField6 
    {
      alias:   "ddkappa"
      type:    flt(64,IEEE)
      offs:    48
      desc:    "derivative of derivative of kappa"
    }
    structField7 
    {
      alias:   "s"
      type:    flt(64,IEEE)
      offs:    56
      desc:    "accumulated distance from beginning of the path"
    }
    structField8 
    {
      alias:   "v"
      type:    flt(64,IEEE)
      offs:    64
      unit:    "m/s"
    }
    structField9 
    {
      alias:   "a"
      type:    flt(64,IEEE)
      offs:    72
      unit:    "m/s/s"
    }
    structField10 
    {
      alias:   "relative_time"
      type:    flt(64,IEEE)
      offs:    80
      unit:    "s"
      desc:    "relative time from beginning of the trajectory"
    }
endstruct

struct AutoboxModel_AccelerationInterfaceCommands
{
  array-incr: 3         
}
    structField0 
    {
      alias:   "Cancel"
      type:    uint(8)
      offs:    0
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField1 
    {
      alias:   "Activation"
      type:    uint(8)
      offs:    1
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField2 
    {
      alias:   "Clearance"
      type:    uint(8)
      offs:    2
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
endstruct

struct AutoboxModel_SteeringInterfaceCommands
{
  array-incr: 3         
}
    structField0 
    {
      alias:   "Cancel"
      type:    uint(8)
      offs:    0
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField1 
    {
      alias:   "Activation"
      type:    uint(8)
      offs:    1
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField2 
    {
      alias:   "Clearance"
      type:    uint(8)
      offs:    2
    }
endstruct

struct AutoboxModel_InterfaceCommands
{
  array-incr: 6         
}
    structField0 
    {
      alias:   "AccelerationInterfaceCommands"
      type:    struct AutoboxModel_AccelerationInterfaceCommands
      offs:    0
    }
    structField1 
    {
      alias:   "SteeringInterfaceCommands"
      type:    struct AutoboxModel_SteeringInterfaceCommands
      offs:    3
    }
endstruct

struct AutoboxModel_Acceleration_Interface
{
  array-incr: 24        
}
    structField0 
    {
      alias:   "AccelerationRequest"
      type:    flt(64,IEEE)
      offs:    0
    }
    structField1 
    {
      alias:   "AcousticDriverHint"
      type:    uint(8)
      offs:    8
    }
    structField2 
    {
      alias:   "ActivationRequest"
      type:    uint(8)
      offs:    9
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField3 
    {
      alias:   "CRC"
      type:    uint(8)
      offs:    10
    }
    structField4 
    {
      alias:   "CancelRequest"
      type:    uint(8)
      offs:    11
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField5 
    {
      alias:   "ClearanceAI"
      type:    uint(8)
      offs:    12
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField6 
    {
      alias:   "ClearanceStopDistance"
      type:    uint(8)
      offs:    13
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField7 
    {
      alias:   "Counter"
      type:    uint(8)
      offs:    14
    }
    structField8 
    {
      alias:   "OpticalDriverHint"
      type:    uint(8)
      offs:    15
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField9 
    {
      alias:   "StopDistanceRequest"
      type:    flt(64,IEEE)
      offs:    16
    }
endstruct

struct AutoboxModel_EmergencyBrake_Interface
{
  array-incr: 6         
}
    structField0 
    {
      alias:   "ActivationRequest"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "CancelRequest"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "ClearanceEBI"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "DecelerationRequest"
      type:    int(8)
      offs:    5
    }
endstruct

struct AutoboxModel_Gateway_Config
{
  array-incr: 11        
}
    structField0 
    {
      alias:   "Coding_AI"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Coding_EBI"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "Coding_GI"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "Coding_PDI"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "Coding_SI1"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "Coding_SI2"
      type:    int(8)
      offs:    5
    }
    structField6 
    {
      alias:   "Coding_THI"
      type:    int(8)
      offs:    6
    }
    structField7 
    {
      alias:   "Coding_VI"
      type:    int(8)
      offs:    7
    }
    structField8 
    {
      alias:   "SoftwareVersionMajor"
      type:    int(8)
      offs:    8
    }
    structField9 
    {
      alias:   "SoftwareVersionMinor"
      type:    int(8)
      offs:    9
    }
    structField10 
    {
      alias:   "SoftwareVersionRevision"
      type:    int(8)
      offs:    10
    }
endstruct

struct AutoboxModel_Gateway_States
{
  array-incr: 20        
}
    structField0 
    {
      alias:   "AIState"
      type:    uint(8)
      offs:    0
    }
    structField1 
    {
      alias:   "AngleDeviationLimitationSI"
      type:    uint(8)
      offs:    1
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField2 
    {
      alias:   "AngleGradientLimitationSI"
      type:    uint(8)
      offs:    2
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField3 
    {
      alias:   "AngleLimitationSI"
      type:    uint(8)
      offs:    3
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField4 
    {
      alias:   "AngleLimitationStatus"
      type:    uint(8)
      offs:    4
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField5 
    {
      alias:   "CRC"
      type:    uint(8)
      offs:    5
    }
    structField6 
    {
      alias:   "Counter"
      type:    uint(8)
      offs:    6
    }
    structField7 
    {
      alias:   "EBIState"
      type:    uint(8)
      offs:    7
    }
    structField8 
    {
      alias:   "GIState"
      type:    uint(8)
      offs:    8
    }
    structField9 
    {
      alias:   "GWState"
      type:    uint(8)
      offs:    9
    }
    structField10 
    {
      alias:   "GatewayClearanceAI"
      type:    uint(8)
      offs:    10
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField11 
    {
      alias:   "GatewayClearanceEBI"
      type:    uint(8)
      offs:    11
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField12 
    {
      alias:   "GatewayClearanceSI"
      type:    uint(8)
      offs:    12
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField13 
    {
      alias:   "LimitationsReceivedSI"
      type:    uint(8)
      offs:    13
    }
    structField14 
    {
      alias:   "MsgTimeoutDisplay"
      type:    uint(8)
      offs:    14
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField15 
    {
      alias:   "MsgTimeoutPwrMgnt"
      type:    uint(8)
      offs:    15
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField16 
    {
      alias:   "PDIState"
      type:    uint(8)
      offs:    16
    }
    structField17 
    {
      alias:   "SIState"
      type:    uint(8)
      offs:    17
    }
    structField18 
    {
      alias:   "THIState"
      type:    uint(8)
      offs:    18
    }
    structField19 
    {
      alias:   "VIState"
      type:    uint(8)
      offs:    19
    }
endstruct

struct AutoboxModel_Gear_Interface
{
  array-incr: 6         
}
    structField0 
    {
      alias:   "ActivationRequest"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "CancelRequest"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "ClearanceGI"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "GearSelection"
      type:    int(8)
      offs:    5
    }
endstruct

struct AutoboxModel_ParkDecel_Interface_1
{
  array-incr: 6         
}
    structField0 
    {
      alias:   "ActivationRequest"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "CancelRequest"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "ClearancePDI"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "TorqueRequest"
      type:    int(8)
      offs:    5
    }
endstruct

struct AutoboxModel_ParkDecel_Interface_2
{
  array-incr: 6         
}
    structField0 
    {
      alias:   "ActivationRequest"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "CancelRequest"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "ClearancePDI"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "DecelerationRequest"
      type:    int(8)
      offs:    5
    }
endstruct

struct AutoboxModel_Steering_Interface
{
  array-incr: 56        
}
    structField0 
    {
      alias:   "ActivationRequest"
      type:    uint(8)
      offs:    0
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField1 
    {
      alias:   "AdvancedSteeringAngleLimitation"
      type:    uint(8)
      offs:    1
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField2 
    {
      alias:   "Amplitude"
      type:    flt(64,IEEE)
      offs:    8
    }
    structField3 
    {
      alias:   "CRC"
      type:    uint(8)
      offs:    16
    }
    structField4 
    {
      alias:   "CancelRequest"
      type:    uint(8)
      offs:    17
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField5 
    {
      alias:   "ClearanceSI"
      type:    uint(8)
      offs:    18
    }
    structField6 
    {
      alias:   "Counter"
      type:    uint(8)
      offs:    19
    }
    structField7 
    {
      alias:   "Frequency"
      type:    uint(8)
      offs:    20
    }
    structField8 
    {
      alias:   "SteeringAngleRequest"
      type:    flt(64,IEEE)
      offs:    24
    }
    structField9 
    {
      alias:   "SteeringAngleRequestSign"
      type:    uint(8)
      offs:    32
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField10 
    {
      alias:   "SteeringTorqueRequest"
      type:    flt(64,IEEE)
      offs:    40
    }
    structField11 
    {
      alias:   "SteeringTorqueRequestSign"
      type:    uint(8)
      offs:    48
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
endstruct

struct AutoboxModel_Throttle_Interface
{
  array-incr: 6         
}
    structField0 
    {
      alias:   "ActivationRequest"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "CancelRequest"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "ClearanceTHI"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "ThrottleRequest"
      type:    int(8)
      offs:    5
    }
endstruct

struct AutoboxModel_VIN_Data
{
  array-incr: 18        
}
    structField0 
    {
      alias:   "VIN_01_MUX"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "VIN_1"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "VIN_10"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "VIN_11"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "VIN_12"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "VIN_13"
      type:    int(8)
      offs:    5
    }
    structField6 
    {
      alias:   "VIN_14"
      type:    int(8)
      offs:    6
    }
    structField7 
    {
      alias:   "VIN_15"
      type:    int(8)
      offs:    7
    }
    structField8 
    {
      alias:   "VIN_16"
      type:    int(8)
      offs:    8
    }
    structField9 
    {
      alias:   "VIN_17"
      type:    int(8)
      offs:    9
    }
    structField10 
    {
      alias:   "VIN_2"
      type:    int(8)
      offs:    10
    }
    structField11 
    {
      alias:   "VIN_3"
      type:    int(8)
      offs:    11
    }
    structField12 
    {
      alias:   "VIN_4"
      type:    int(8)
      offs:    12
    }
    structField13 
    {
      alias:   "VIN_5"
      type:    int(8)
      offs:    13
    }
    structField14 
    {
      alias:   "VIN_6"
      type:    int(8)
      offs:    14
    }
    structField15 
    {
      alias:   "VIN_7"
      type:    int(8)
      offs:    15
    }
    structField16 
    {
      alias:   "VIN_8"
      type:    int(8)
      offs:    16
    }
    structField17 
    {
      alias:   "VIN_9"
      type:    int(8)
      offs:    17
    }
endstruct

struct AutoboxModel_Vehicle_Data
{
  array-incr: 40        
}
    structField0 
    {
      alias:   "DriverBraking"
      type:    uint(8)
      offs:    0
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField1 
    {
      alias:   "GearLeverPos"
      type:    uint(8)
      offs:    1
    }
    structField2 
    {
      alias:   "SteeringAngle"
      type:    flt(64,IEEE)
      offs:    8
    }
    structField3 
    {
      alias:   "SteeringAngleSign"
      type:    uint(8)
      offs:    16
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField4 
    {
      alias:   "ThrottleSetpoint"
      type:    flt(64,IEEE)
      offs:    24
    }
    structField5 
    {
      alias:   "VehicleVelocity"
      type:    flt(64,IEEE)
      offs:    32
    }
endstruct

struct AutoboxModel_Vehicle_Interface
{
  array-incr: 15        
}
    structField0 
    {
      alias:   "ACCButton"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "ActivationRequest"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "CancelRequest"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "ClearanceVI"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    5
    }
    structField6 
    {
      alias:   "FPKSwitch"
      type:    int(8)
      offs:    6
    }
    structField7 
    {
      alias:   "HMISwitch"
      type:    int(8)
      offs:    7
    }
    structField8 
    {
      alias:   "HUDSwitch"
      type:    int(8)
      offs:    8
    }
    structField9 
    {
      alias:   "MFSButtonFirstPressed"
      type:    int(8)
      offs:    9
    }
    structField10 
    {
      alias:   "MFSButtonSecondPressed"
      type:    int(8)
      offs:    10
    }
    structField11 
    {
      alias:   "MFSTipDown"
      type:    int(8)
      offs:    11
    }
    structField12 
    {
      alias:   "MFSTipUp"
      type:    int(8)
      offs:    12
    }
    structField13 
    {
      alias:   "TransmissionVehicleDataMessage"
      type:    int(8)
      offs:    13
    }
    structField14 
    {
      alias:   "TurnIndicatorRequest"
      type:    int(8)
      offs:    14
    }
endstruct

struct AutoboxModel_customer_can_bus
{
  array-incr: 216       
}
    structField0 
    {
      alias:   "Acceleration_Interface"
      type:    struct AutoboxModel_Acceleration_Interface
      offs:    0
    }
    structField1 
    {
      alias:   "EmergencyBrake_Interface"
      type:    struct AutoboxModel_EmergencyBrake_Interface
      offs:    24
    }
    structField2 
    {
      alias:   "Gateway_Config"
      type:    struct AutoboxModel_Gateway_Config
      offs:    30
    }
    structField3 
    {
      alias:   "Gateway_States"
      type:    struct AutoboxModel_Gateway_States
      offs:    41
    }
    structField4 
    {
      alias:   "Gear_Interface"
      type:    struct AutoboxModel_Gear_Interface
      offs:    61
    }
    structField5 
    {
      alias:   "ParkDecel_Interface_1"
      type:    struct AutoboxModel_ParkDecel_Interface_1
      offs:    67
    }
    structField6 
    {
      alias:   "ParkDecel_Interface_2"
      type:    struct AutoboxModel_ParkDecel_Interface_2
      offs:    73
    }
    structField7 
    {
      alias:   "Steering_Interface"
      type:    struct AutoboxModel_Steering_Interface
      offs:    80
    }
    structField8 
    {
      alias:   "Throttle_Interface"
      type:    struct AutoboxModel_Throttle_Interface
      offs:    136
    }
    structField9 
    {
      alias:   "VIN_Data"
      type:    struct AutoboxModel_VIN_Data
      offs:    142
    }
    structField10 
    {
      alias:   "Vehicle_Data"
      type:    struct AutoboxModel_Vehicle_Data
      offs:    160
    }
    structField11 
    {
      alias:   "Vehicle_Interface"
      type:    struct AutoboxModel_Vehicle_Interface
      offs:    200
    }
endstruct

struct AutoboxModel_ControlCommandToAutobox
{
  array-incr: 56        
}
    structField0 
    {
      alias:   "sequence_num"
      type:    flt(64,IEEE)
      offs:    0
    }
    structField1 
    {
      alias:   "timestamp_sec"
      type:    flt(64,IEEE)
      offs:    8
    }
    structField2 
    {
      alias:   "throttle"
      type:    flt(64,IEEE)
      offs:    16
    }
    structField3 
    {
      alias:   "brake"
      type:    flt(64,IEEE)
      offs:    24
    }
    structField4 
    {
      alias:   "steering_rate"
      type:    flt(64,IEEE)
      offs:    32
    }
    structField5 
    {
      alias:   "steering_target"
      type:    flt(64,IEEE)
      offs:    40
    }
    structField6 
    {
      alias:   "acceleration"
      type:    flt(64,IEEE)
      offs:    48
    }
endstruct

struct AutoboxModel_struct_7eBtNf2MNfAOmQdxVEKvQH
{
  array-incr: 64        
}
    structField0 
    {
      alias:   "k4"
      type:    flt(64,IEEE)
      offs:    0
    }
    structField1 
    {
      alias:   "k3"
      type:    flt(64,IEEE)
      offs:    8
    }
    structField2 
    {
      alias:   "k2"
      type:    flt(64,IEEE)
      offs:    16
    }
    structField3 
    {
      alias:   "k1"
      type:    flt(64,IEEE)
      offs:    24
    }
    structField4 
    {
      alias:   "J"
      type:    flt(64,IEEE)
      offs:    32
    }
    structField5 
    {
      alias:   "m"
      type:    flt(64,IEEE)
      offs:    40
    }
    structField6 
    {
      alias:   "l_v"
      type:    flt(64,IEEE)
      offs:    48
    }
    structField7 
    {
      alias:   "l_h"
      type:    flt(64,IEEE)
      offs:    56
    }
endstruct

struct AutoboxModel_struct_w76Ud0TorSikjOrYIA3RVB
{
  array-incr: 24        
}
    structField0 
    {
      alias:   "AccelerationRequest"
      type:    flt(64,IEEE)
      offs:    0
    }
    structField1 
    {
      alias:   "AcousticDriverHint"
      type:    uint(8)
      offs:    8
    }
    structField2 
    {
      alias:   "ActivationRequest"
      type:    uint(8)
      offs:    9
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField3 
    {
      alias:   "CRC"
      type:    uint(8)
      offs:    10
    }
    structField4 
    {
      alias:   "CancelRequest"
      type:    uint(8)
      offs:    11
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField5 
    {
      alias:   "ClearanceAI"
      type:    uint(8)
      offs:    12
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField6 
    {
      alias:   "ClearanceStopDistance"
      type:    uint(8)
      offs:    13
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField7 
    {
      alias:   "Counter"
      type:    uint(8)
      offs:    14
    }
    structField8 
    {
      alias:   "OpticalDriverHint"
      type:    uint(8)
      offs:    15
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField9 
    {
      alias:   "StopDistanceRequest"
      type:    flt(64,IEEE)
      offs:    16
    }
endstruct

struct AutoboxModel_struct_S8IRSnU1YY7b6VaWrm1SqB
{
  array-incr: 6         
}
    structField0 
    {
      alias:   "ActivationRequest"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "CancelRequest"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "ClearanceEBI"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "DecelerationRequest"
      type:    int(8)
      offs:    5
    }
endstruct

struct AutoboxModel_struct_7eF7Qi5inTGHAvGJAauupH
{
  array-incr: 11        
}
    structField0 
    {
      alias:   "Coding_AI"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Coding_EBI"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "Coding_GI"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "Coding_PDI"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "Coding_SI1"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "Coding_SI2"
      type:    int(8)
      offs:    5
    }
    structField6 
    {
      alias:   "Coding_THI"
      type:    int(8)
      offs:    6
    }
    structField7 
    {
      alias:   "Coding_VI"
      type:    int(8)
      offs:    7
    }
    structField8 
    {
      alias:   "SoftwareVersionMajor"
      type:    int(8)
      offs:    8
    }
    structField9 
    {
      alias:   "SoftwareVersionMinor"
      type:    int(8)
      offs:    9
    }
    structField10 
    {
      alias:   "SoftwareVersionRevision"
      type:    int(8)
      offs:    10
    }
endstruct

struct AutoboxModel_struct_8ovs2Eh2RmOd4V60y8R4DG
{
  array-incr: 20        
}
    structField0 
    {
      alias:   "AIState"
      type:    uint(8)
      offs:    0
    }
    structField1 
    {
      alias:   "AngleDeviationLimitationSI"
      type:    uint(8)
      offs:    1
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField2 
    {
      alias:   "AngleGradientLimitationSI"
      type:    uint(8)
      offs:    2
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField3 
    {
      alias:   "AngleLimitationSI"
      type:    uint(8)
      offs:    3
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField4 
    {
      alias:   "AngleLimitationStatus"
      type:    uint(8)
      offs:    4
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField5 
    {
      alias:   "CRC"
      type:    uint(8)
      offs:    5
    }
    structField6 
    {
      alias:   "Counter"
      type:    uint(8)
      offs:    6
    }
    structField7 
    {
      alias:   "EBIState"
      type:    uint(8)
      offs:    7
    }
    structField8 
    {
      alias:   "GIState"
      type:    uint(8)
      offs:    8
    }
    structField9 
    {
      alias:   "GWState"
      type:    uint(8)
      offs:    9
    }
    structField10 
    {
      alias:   "GatewayClearanceAI"
      type:    uint(8)
      offs:    10
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField11 
    {
      alias:   "GatewayClearanceEBI"
      type:    uint(8)
      offs:    11
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField12 
    {
      alias:   "GatewayClearanceSI"
      type:    uint(8)
      offs:    12
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField13 
    {
      alias:   "LimitationsReceivedSI"
      type:    uint(8)
      offs:    13
    }
    structField14 
    {
      alias:   "MsgTimeoutDisplay"
      type:    uint(8)
      offs:    14
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField15 
    {
      alias:   "MsgTimeoutPwrMgnt"
      type:    uint(8)
      offs:    15
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField16 
    {
      alias:   "PDIState"
      type:    uint(8)
      offs:    16
    }
    structField17 
    {
      alias:   "SIState"
      type:    uint(8)
      offs:    17
    }
    structField18 
    {
      alias:   "THIState"
      type:    uint(8)
      offs:    18
    }
    structField19 
    {
      alias:   "VIState"
      type:    uint(8)
      offs:    19
    }
endstruct

struct AutoboxModel_struct_bpKYjF3i8GgMwbCHaX6Ox
{
  array-incr: 6         
}
    structField0 
    {
      alias:   "ActivationRequest"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "CancelRequest"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "ClearanceGI"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "GearSelection"
      type:    int(8)
      offs:    5
    }
endstruct

struct AutoboxModel_struct_dk6kIy97NZQsv4l9CKrwLD
{
  array-incr: 6         
}
    structField0 
    {
      alias:   "ActivationRequest"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "CancelRequest"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "ClearancePDI"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "TorqueRequest"
      type:    int(8)
      offs:    5
    }
endstruct

struct AutoboxModel_struct_N32B3URQpZyrMWhmQkekWH
{
  array-incr: 6         
}
    structField0 
    {
      alias:   "ActivationRequest"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "CancelRequest"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "ClearancePDI"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "DecelerationRequest"
      type:    int(8)
      offs:    5
    }
endstruct

struct AutoboxModel_struct_tZ3atrMZmgbf32ZGPhxnEH
{
  array-incr: 56        
}
    structField0 
    {
      alias:   "ActivationRequest"
      type:    uint(8)
      offs:    0
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField1 
    {
      alias:   "AdvancedSteeringAngleLimitation"
      type:    uint(8)
      offs:    1
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField2 
    {
      alias:   "Amplitude"
      type:    flt(64,IEEE)
      offs:    8
    }
    structField3 
    {
      alias:   "CRC"
      type:    uint(8)
      offs:    16
    }
    structField4 
    {
      alias:   "CancelRequest"
      type:    uint(8)
      offs:    17
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField5 
    {
      alias:   "ClearanceSI"
      type:    uint(8)
      offs:    18
    }
    structField6 
    {
      alias:   "Counter"
      type:    uint(8)
      offs:    19
    }
    structField7 
    {
      alias:   "Frequency"
      type:    uint(8)
      offs:    20
    }
    structField8 
    {
      alias:   "SteeringAngleRequest"
      type:    flt(64,IEEE)
      offs:    24
    }
    structField9 
    {
      alias:   "SteeringAngleRequestSign"
      type:    uint(8)
      offs:    32
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField10 
    {
      alias:   "SteeringTorqueRequest"
      type:    flt(64,IEEE)
      offs:    40
    }
    structField11 
    {
      alias:   "SteeringTorqueRequestSign"
      type:    uint(8)
      offs:    48
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
endstruct

struct AutoboxModel_struct_2ZVAbBvCEJfOjUYfjt3EBB
{
  array-incr: 6         
}
    structField0 
    {
      alias:   "ActivationRequest"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "CancelRequest"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "ClearanceTHI"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "ThrottleRequest"
      type:    int(8)
      offs:    5
    }
endstruct

struct AutoboxModel_struct_iGPkZ7wP6xgnnWFdvpI6WE
{
  array-incr: 18        
}
    structField0 
    {
      alias:   "VIN_01_MUX"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "VIN_1"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "VIN_10"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "VIN_11"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "VIN_12"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "VIN_13"
      type:    int(8)
      offs:    5
    }
    structField6 
    {
      alias:   "VIN_14"
      type:    int(8)
      offs:    6
    }
    structField7 
    {
      alias:   "VIN_15"
      type:    int(8)
      offs:    7
    }
    structField8 
    {
      alias:   "VIN_16"
      type:    int(8)
      offs:    8
    }
    structField9 
    {
      alias:   "VIN_17"
      type:    int(8)
      offs:    9
    }
    structField10 
    {
      alias:   "VIN_2"
      type:    int(8)
      offs:    10
    }
    structField11 
    {
      alias:   "VIN_3"
      type:    int(8)
      offs:    11
    }
    structField12 
    {
      alias:   "VIN_4"
      type:    int(8)
      offs:    12
    }
    structField13 
    {
      alias:   "VIN_5"
      type:    int(8)
      offs:    13
    }
    structField14 
    {
      alias:   "VIN_6"
      type:    int(8)
      offs:    14
    }
    structField15 
    {
      alias:   "VIN_7"
      type:    int(8)
      offs:    15
    }
    structField16 
    {
      alias:   "VIN_8"
      type:    int(8)
      offs:    16
    }
    structField17 
    {
      alias:   "VIN_9"
      type:    int(8)
      offs:    17
    }
endstruct

struct AutoboxModel_struct_UMutGVcRkPOKSdh6cTyPmF
{
  array-incr: 40        
}
    structField0 
    {
      alias:   "DriverBraking"
      type:    uint(8)
      offs:    0
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField1 
    {
      alias:   "GearLeverPos"
      type:    uint(8)
      offs:    1
    }
    structField2 
    {
      alias:   "SteeringAngle"
      type:    flt(64,IEEE)
      offs:    8
    }
    structField3 
    {
      alias:   "SteeringAngleSign"
      type:    uint(8)
      offs:    16
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField4 
    {
      alias:   "ThrottleSetpoint"
      type:    flt(64,IEEE)
      offs:    24
    }
    structField5 
    {
      alias:   "VehicleVelocity"
      type:    flt(64,IEEE)
      offs:    32
    }
endstruct

struct AutoboxModel_struct_yZVJw3H4IJtlRLTrzm1dIH
{
  array-incr: 15        
}
    structField0 
    {
      alias:   "ACCButton"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "ActivationRequest"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "CancelRequest"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "ClearanceVI"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    5
    }
    structField6 
    {
      alias:   "FPKSwitch"
      type:    int(8)
      offs:    6
    }
    structField7 
    {
      alias:   "HMISwitch"
      type:    int(8)
      offs:    7
    }
    structField8 
    {
      alias:   "HUDSwitch"
      type:    int(8)
      offs:    8
    }
    structField9 
    {
      alias:   "MFSButtonFirstPressed"
      type:    int(8)
      offs:    9
    }
    structField10 
    {
      alias:   "MFSButtonSecondPressed"
      type:    int(8)
      offs:    10
    }
    structField11 
    {
      alias:   "MFSTipDown"
      type:    int(8)
      offs:    11
    }
    structField12 
    {
      alias:   "MFSTipUp"
      type:    int(8)
      offs:    12
    }
    structField13 
    {
      alias:   "TransmissionVehicleDataMessage"
      type:    int(8)
      offs:    13
    }
    structField14 
    {
      alias:   "TurnIndicatorRequest"
      type:    int(8)
      offs:    14
    }
endstruct

struct AutoboxModel_struct_kCd6uPkHNVtDqoTOxr47kC
{
  array-incr: 216       
}
    structField0 
    {
      alias:   "Acceleration_Interface"
      type:    struct AutoboxModel_Acceleration_Interface
      offs:    0
    }
    structField1 
    {
      alias:   "EmergencyBrake_Interface"
      type:    struct AutoboxModel_EmergencyBrake_Interface
      offs:    24
    }
    structField2 
    {
      alias:   "Gateway_Config"
      type:    struct AutoboxModel_Gateway_Config
      offs:    30
    }
    structField3 
    {
      alias:   "Gateway_States"
      type:    struct AutoboxModel_Gateway_States
      offs:    41
    }
    structField4 
    {
      alias:   "Gear_Interface"
      type:    struct AutoboxModel_Gear_Interface
      offs:    61
    }
    structField5 
    {
      alias:   "ParkDecel_Interface_1"
      type:    struct AutoboxModel_ParkDecel_Interface_1
      offs:    67
    }
    structField6 
    {
      alias:   "ParkDecel_Interface_2"
      type:    struct AutoboxModel_ParkDecel_Interface_2
      offs:    73
    }
    structField7 
    {
      alias:   "Steering_Interface"
      type:    struct AutoboxModel_Steering_Interface
      offs:    80
    }
    structField8 
    {
      alias:   "Throttle_Interface"
      type:    struct AutoboxModel_Throttle_Interface
      offs:    136
    }
    structField9 
    {
      alias:   "VIN_Data"
      type:    struct AutoboxModel_VIN_Data
      offs:    142
    }
    structField10 
    {
      alias:   "Vehicle_Data"
      type:    struct AutoboxModel_Vehicle_Data
      offs:    160
    }
    structField11 
    {
      alias:   "Vehicle_Interface"
      type:    struct AutoboxModel_Vehicle_Interface
      offs:    200
    }
endstruct

struct AutoboxModel_struct_nDDB7WEgKecdN947Aae6vE
{
  array-incr: 20        
}
    structField0 
    {
      alias:   "ABSstate"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "ACCmainSwitch"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "ACCrequest"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "ACCresumeButton"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "ACCsetButton"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "ACCstate"
      type:    int(8)
      offs:    5
    }
    structField6 
    {
      alias:   "ASRstate"
      type:    int(8)
      offs:    6
    }
    structField7 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    7
    }
    structField8 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    8
    }
    structField9 
    {
      alias:   "EPBstate"
      type:    int(8)
      offs:    9
    }
    structField10 
    {
      alias:   "ESCstate"
      type:    int(8)
      offs:    10
    }
    structField11 
    {
      alias:   "FDstate"
      type:    int(8)
      offs:    11
    }
    structField12 
    {
      alias:   "FrontAssistIntervention"
      type:    int(8)
      offs:    12
    }
    structField13 
    {
      alias:   "LCAstateLeft"
      type:    int(8)
      offs:    13
    }
    structField14 
    {
      alias:   "LCAstateRight"
      type:    int(8)
      offs:    14
    }
    structField15 
    {
      alias:   "LDWdistanceToLine"
      type:    int(8)
      offs:    15
    }
    structField16 
    {
      alias:   "LDWselection"
      type:    int(8)
      offs:    16
    }
    structField17 
    {
      alias:   "LDWstate"
      type:    int(8)
      offs:    17
    }
    structField18 
    {
      alias:   "LDWtimeToLine"
      type:    int(8)
      offs:    18
    }
    structField19 
    {
      alias:   "LKAstate"
      type:    int(8)
      offs:    19
    }
endstruct

struct AutoboxModel_struct_ysL6K8WqHDcJ636tQzRnDC
{
  array-incr: 8         
}
    structField0 
    {
      alias:   "AirbagLamp"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "BrakeJerk"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "BrakeLamp"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "BrakePrefill"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "BrakePressure"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    5
    }
    structField6 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    6
    }
    structField7 
    {
      alias:   "EBIntervention"
      type:    int(8)
      offs:    7
    }
endstruct

struct AutoboxModel_struct_EgGFJK2V5lrsZKprGIxfaE
{
  array-incr: 7         
}
    structField0 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "FusedState"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "ID"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "RelPosX"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "RelPosY"
      type:    int(8)
      offs:    5
    }
    structField6 
    {
      alias:   "RelVelocityX"
      type:    int(8)
      offs:    6
    }
endstruct

struct AutoboxModel_struct_rCWM9gvU0vwFP3f2QTGr3B
{
  array-incr: 4         
}
    structField0 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "LongDegree"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "LongDirection"
      type:    int(8)
      offs:    3
    }
endstruct

struct AutoboxModel_struct_Mv6gI7qggTrpfR4n3wKBiD
{
  array-incr: 5         
}
    structField0 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "HeadingDirection"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "LatDegree"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "LatDirection"
      type:    int(8)
      offs:    4
    }
endstruct

struct AutoboxModel_struct_AkGqqe5twx1ktlzlcAAL9D
{
  array-incr: 4         
}
    structField0 
    {
      alias:   "Altitude"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "UTC"
      type:    int(8)
      offs:    3
    }
endstruct

struct AutoboxModel_struct_biewla4uZUsILCKt9RVas
{
  array-incr: 6         
}
    structField0 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "Curvature"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "CurvatureRate"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "OffsetLateral"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "YawAngle"
      type:    int(8)
      offs:    5
    }
endstruct

struct AutoboxModel_struct_0p586uONdhID4Pc4I44W4B
{
  array-incr: 6         
}
    structField0 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Color"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "MaxDistanceLongitudinal"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "OffsetLongitudinal"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "Type"
      type:    int(8)
      offs:    5
    }
endstruct

struct AutoboxModel_struct_4NvJM7cHbmeaEJBfBtQ1yC
{
  array-incr: 8         
}
    structField0 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Camera_x_Position"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "Camera_y_Position"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "Color"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "MaxDistanceLongitudinal"
      type:    int(8)
      offs:    5
    }
    structField6 
    {
      alias:   "OffsetLongitudinal"
      type:    int(8)
      offs:    6
    }
    structField7 
    {
      alias:   "Type"
      type:    int(8)
      offs:    7
    }
endstruct

struct AutoboxModel_struct_XqwANB6Be0SvFIf7tnThVD
{
  array-incr: 16        
}
    structField0 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "DimmedHeadlights"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "DriverBraking"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "ExteriorLightSensor"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "ExteriorRainSensor"
      type:    int(8)
      offs:    5
    }
    structField6 
    {
      alias:   "ExteriorTemperature"
      type:    int(8)
      offs:    6
    }
    structField7 
    {
      alias:   "FogLightFront"
      type:    int(8)
      offs:    7
    }
    structField8 
    {
      alias:   "FogLightRear"
      type:    int(8)
      offs:    8
    }
    structField9 
    {
      alias:   "HighBeam"
      type:    int(8)
      offs:    9
    }
    structField10 
    {
      alias:   "Horn"
      type:    int(8)
      offs:    10
    }
    structField11 
    {
      alias:   "Odometer"
      type:    int(8)
      offs:    11
    }
    structField12 
    {
      alias:   "TurnIndicatorsLeft"
      type:    int(8)
      offs:    12
    }
    structField13 
    {
      alias:   "TurnIndicatorsRight"
      type:    int(8)
      offs:    13
    }
    structField14 
    {
      alias:   "WheelPressureState"
      type:    int(8)
      offs:    14
    }
    structField15 
    {
      alias:   "Wipers"
      type:    int(8)
      offs:    15
    }
endstruct

struct AutoboxModel_struct_Nr7RPaDRuTTW9PAsMBTQBD
{
  array-incr: 9         
}
    structField0 
    {
      alias:   "ACPowerLoad"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "EPBswitch"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "RoadGrade"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "StateClamp15"
      type:    int(8)
      offs:    5
    }
    structField6 
    {
      alias:   "TireCircumference"
      type:    int(8)
      offs:    6
    }
    structField7 
    {
      alias:   "VehicleMass"
      type:    int(8)
      offs:    7
    }
    structField8 
    {
      alias:   "WiperSpeed"
      type:    int(8)
      offs:    8
    }
endstruct

struct AutoboxModel_struct_e2xyoMdC5t7M7yF8KLIFbB
{
  array-incr: 3         
}
    structField0 
    {
      alias:   "BackupBatteryVoltage"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    2
    }
endstruct

struct AutoboxModel_struct_p694a51IlXGmxv59Gp0FgH
{
  array-incr: 48        
}
    structField0 
    {
      alias:   "CRC"
      type:    uint(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Counter"
      type:    uint(8)
      offs:    1
    }
    structField2 
    {
      alias:   "LateralAcceleration"
      type:    flt(64,IEEE)
      offs:    8
    }
    structField3 
    {
      alias:   "LongitudinalAcceleration"
      type:    flt(64,IEEE)
      offs:    16
    }
    structField4 
    {
      alias:   "VehicleVelocity"
      type:    flt(64,IEEE)
      offs:    24
    }
    structField5 
    {
      alias:   "YawRate"
      type:    flt(64,IEEE)
      offs:    32
    }
    structField6 
    {
      alias:   "YawRateSign"
      type:    uint(8)
      offs:    40
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
endstruct

struct AutoboxModel_struct_XKfrUkLSNTsm81458qejqD
{
  array-incr: 11        
}
    structField0 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "DriverDoor"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "DriverSeatbelt"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "PassengerDoor"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "PassengerSeatbelt"
      type:    int(8)
      offs:    5
    }
    structField6 
    {
      alias:   "RearDriverDoor"
      type:    int(8)
      offs:    6
    }
    structField7 
    {
      alias:   "RearDriverSeatbelt"
      type:    int(8)
      offs:    7
    }
    structField8 
    {
      alias:   "RearMiddleSeatbelt"
      type:    int(8)
      offs:    8
    }
    structField9 
    {
      alias:   "RearPassengerDoor"
      type:    int(8)
      offs:    9
    }
    structField10 
    {
      alias:   "RearPassengerSeatbelt"
      type:    int(8)
      offs:    10
    }
endstruct

struct AutoboxModel_struct_WV8N2Im18oorEWlHUDphqC
{
  array-incr: 8         
}
    structField0 
    {
      alias:   "ActualTorqueEngine"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "EngineRunning"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "EngineSpeed"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "Gear"
      type:    int(8)
      offs:    5
    }
    structField6 
    {
      alias:   "RequestedTorqueEngine"
      type:    int(8)
      offs:    6
    }
    structField7 
    {
      alias:   "ThrottlePedalPos"
      type:    int(8)
      offs:    7
    }
endstruct

struct AutoboxModel_struct_gUSaivcmjcwOg5ZPRcsJHG
{
  array-incr: 7         
}
    structField0 
    {
      alias:   "ActualTorqueElectricDrive"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "ActualTorquePowertrain"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "GearShiftState"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "HybridState"
      type:    int(8)
      offs:    5
    }
    structField6 
    {
      alias:   "RequestedTorqueElectricDrive"
      type:    int(8)
      offs:    6
    }
endstruct

struct AutoboxModel_struct_LkLNHQKnLz63XAS24g3cE
{
  array-incr: 4         
}
    structField0 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "HVBatterySOC"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "HVBatteryVoltage"
      type:    int(8)
      offs:    3
    }
endstruct

struct AutoboxModel_struct_n3PKvVvLRGHaULd2QzeiNF
{
  array-incr: 7         
}
    structField0 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "RearID"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "RearPosX"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "RearPosY"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "RearRelVelocityX"
      type:    int(8)
      offs:    5
    }
    structField6 
    {
      alias:   "RearTracked"
      type:    int(8)
      offs:    6
    }
endstruct

struct AutoboxModel_struct_cTyak6TqITFRHCTJJ26kkG
{
  array-incr: 40        
}
    structField0 
    {
      alias:   "CRC"
      type:    uint(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Counter"
      type:    uint(8)
      offs:    1
    }
    structField2 
    {
      alias:   "SteeringWheelAngle"
      type:    flt(64,IEEE)
      offs:    8
    }
    structField3 
    {
      alias:   "SteeringWheelAngleSign"
      type:    uint(8)
      offs:    16
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField4 
    {
      alias:   "SteeringWheelSpeed"
      type:    uint(16)
      offs:    18
    }
    structField5 
    {
      alias:   "SteeringWheelSpeedSign"
      type:    uint(8)
      offs:    20
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
    structField6 
    {
      alias:   "SteeringWheelTorque"
      type:    flt(64,IEEE)
      offs:    24
    }
    structField7 
    {
      alias:   "SteeringWheelTorqueSign"
      type:    uint(8)
      offs:    32
      range:   < 0 ; 1 >
      bitmask: 0x01
    }
endstruct

struct AutoboxModel_struct_RAopE3nz1j7PcSNt0ydiXB
{
  array-incr: 13        
}
    structField0 
    {
      alias:   "ACCMainSwitch_Phys"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "ACCMode_Phys"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "ACCResumeButton_Phys"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "ACCSetButton_Phys"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "ACCTimegap_Phys"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "ACCTipDown_Phys"
      type:    int(8)
      offs:    5
    }
    structField6 
    {
      alias:   "ACCTipUp_Phys"
      type:    int(8)
      offs:    6
    }
    structField7 
    {
      alias:   "ButtonFirstPressed_Phys"
      type:    int(8)
      offs:    7
    }
    structField8 
    {
      alias:   "ButtonSecondPressed_Phys"
      type:    int(8)
      offs:    8
    }
    structField9 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    9
    }
    structField10 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    10
    }
    structField11 
    {
      alias:   "TipDown_Phys"
      type:    int(8)
      offs:    11
    }
    structField12 
    {
      alias:   "TipUp_Phys"
      type:    int(8)
      offs:    12
    }
endstruct

struct AutoboxModel_struct_nAY9m4tQQFlSyiXtS6zeLG
{
  array-incr: 11        
}
    structField0 
    {
      alias:   "AdditionalSign1"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "AdditionalSign2"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "AdditionalSign3"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "SourceSign1"
      type:    int(8)
      offs:    5
    }
    structField6 
    {
      alias:   "SourceSign2"
      type:    int(8)
      offs:    6
    }
    structField7 
    {
      alias:   "SourceSign3"
      type:    int(8)
      offs:    7
    }
    structField8 
    {
      alias:   "TrafficSign1"
      type:    int(8)
      offs:    8
    }
    structField9 
    {
      alias:   "TrafficSign2"
      type:    int(8)
      offs:    9
    }
    structField10 
    {
      alias:   "TrafficSign3"
      type:    int(8)
      offs:    10
    }
endstruct

struct AutoboxModel_struct_EhBHEqffeBOfogjVH5o3eC
{
  array-incr: 8         
}
    structField0 
    {
      alias:   "AdditionalSign4"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "AdditionalSign5"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "SourceSign4"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "SourceSign5"
      type:    int(8)
      offs:    5
    }
    structField6 
    {
      alias:   "TrafficSign4"
      type:    int(8)
      offs:    6
    }
    structField7 
    {
      alias:   "TrafficSign5"
      type:    int(8)
      offs:    7
    }
endstruct

struct AutoboxModel_struct_fY35opMuO5e0Wd24Q6Gbr
{
  array-incr: 6         
}
    structField0 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "USSFrontLeft"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "USSFrontLeftMiddle"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "USSFrontRight"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "USSFrontRightMiddle"
      type:    int(8)
      offs:    5
    }
endstruct

struct AutoboxModel_struct_x2DlZmq4ZUnQtlADgwNFYG
{
  array-incr: 6         
}
    structField0 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "USSRearLeft"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "USSRearLeftMiddle"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "USSRearRight"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "USSRearRightMiddle"
      type:    int(8)
      offs:    5
    }
endstruct

struct AutoboxModel_struct_BVvl4cTSnidm6W4NCoxi6
{
  array-incr: 6         
}
    structField0 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "USSFrontLeftSide"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "USSFrontRightSide"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "USSRearLeftSide"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "USSRearRightSide"
      type:    int(8)
      offs:    5
    }
endstruct

struct AutoboxModel_struct_Yys2dh2GZsQ6a2abvrH50B
{
  array-incr: 6         
}
    structField0 
    {
      alias:   "CRC"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "Counter"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "FLDirection"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "FRDirection"
      type:    int(8)
      offs:    3
    }
    structField4 
    {
      alias:   "RLDirection"
      type:    int(8)
      offs:    4
    }
    structField5 
    {
      alias:   "RRDirection"
      type:    int(8)
      offs:    5
    }
endstruct

struct AutoboxModel_struct_4vtDgTh1oYkzNqn7kw9pAC
{
  array-incr: 4         
}
    structField0 
    {
      alias:   "FLWheelSpeed"
      type:    int(8)
      offs:    0
    }
    structField1 
    {
      alias:   "FRWheelSpeed"
      type:    int(8)
      offs:    1
    }
    structField2 
    {
      alias:   "RLWheelSpeed"
      type:    int(8)
      offs:    2
    }
    structField3 
    {
      alias:   "RRWheelSpeed"
      type:    int(8)
      offs:    3
    }
endstruct

struct AutoboxModel_struct_41Thi7LbaYMkzWAHOtwbqE
{
  array-incr: 376       
}
    structField0 
    {
      alias:   "Assistance_1"
      type:    struct AutoboxModel_Assistance_1
      offs:    0
    }
    structField1 
    {
      alias:   "Assistance_2"
      type:    struct AutoboxModel_Assistance_2
      offs:    20
    }
    structField2 
    {
      alias:   "FrontObject_1"
      type:    struct AutoboxModel_FrontObject_1
      offs:    28
    }
    structField3 
    {
      alias:   "FrontObject_2"
      type:    struct AutoboxModel_FrontObject_1
      offs:    35
    }
    structField4 
    {
      alias:   "FrontObject_3"
      type:    struct AutoboxModel_FrontObject_1
      offs:    42
    }
    structField5 
    {
      alias:   "FrontObject_4"
      type:    struct AutoboxModel_FrontObject_1
      offs:    49
    }
    structField6 
    {
      alias:   "GPSData_1"
      type:    struct AutoboxModel_GPSData_1
      offs:    56
    }
    structField7 
    {
      alias:   "GPSData_2"
      type:    struct AutoboxModel_GPSData_2
      offs:    60
    }
    structField8 
    {
      alias:   "GPSData_3"
      type:    struct AutoboxModel_GPSData_3
      offs:    65
    }
    structField9 
    {
      alias:   "Lane_LeftLeft_1"
      type:    struct AutoboxModel_Lane_LeftLeft_1
      offs:    69
    }
    structField10 
    {
      alias:   "Lane_LeftLeft_2"
      type:    struct AutoboxModel_Lane_LeftLeft_2
      offs:    75
    }
    structField11 
    {
      alias:   "Lane_Left_1"
      type:    struct AutoboxModel_Lane_LeftLeft_1
      offs:    81
    }
    structField12 
    {
      alias:   "Lane_Left_2"
      type:    struct AutoboxModel_Lane_Left_2
      offs:    87
    }
    structField13 
    {
      alias:   "Lane_RightRight_1"
      type:    struct AutoboxModel_Lane_LeftLeft_1
      offs:    95
    }
    structField14 
    {
      alias:   "Lane_RightRight_2"
      type:    struct AutoboxModel_Lane_LeftLeft_2
      offs:    101
    }
    structField15 
    {
      alias:   "Lane_Right_1"
      type:    struct AutoboxModel_Lane_LeftLeft_1
      offs:    107
    }
    structField16 
    {
      alias:   "Lane_Right_2"
      type:    struct AutoboxModel_Lane_LeftLeft_2
      offs:    113
    }
    structField17 
    {
      alias:   "Misc_1"
      type:    struct AutoboxModel_Misc_1
      offs:    119
    }
    structField18 
    {
      alias:   "Misc_2"
      type:    struct AutoboxModel_Misc_2
      offs:    135
    }
    structField19 
    {
      alias:   "Misc_3"
      type:    struct AutoboxModel_Misc_3
      offs:    144
    }
    structField20 
    {
      alias:   "Motion"
      type:    struct AutoboxModel_Motion
      offs:    152
    }
    structField21 
    {
      alias:   "PassengerPresence"
      type:    struct AutoboxModel_PassengerPresence
      offs:    200
    }
    structField22 
    {
      alias:   "Powertrain_1"
      type:    struct AutoboxModel_Powertrain_1
      offs:    211
    }
    structField23 
    {
      alias:   "Powertrain_2"
      type:    struct AutoboxModel_Powertrain_2
      offs:    219
    }
    structField24 
    {
      alias:   "Powertrain_3"
      type:    struct AutoboxModel_Powertrain_3
      offs:    226
    }
    structField25 
    {
      alias:   "RearObject_1"
      type:    struct AutoboxModel_RearObject_1
      offs:    230
    }
    structField26 
    {
      alias:   "RearObject_2"
      type:    struct AutoboxModel_RearObject_1
      offs:    237
    }
    structField27 
    {
      alias:   "RearObject_3"
      type:    struct AutoboxModel_RearObject_1
      offs:    244
    }
    structField28 
    {
      alias:   "RearObject_4"
      type:    struct AutoboxModel_RearObject_1
      offs:    251
    }
    structField29 
    {
      alias:   "RearObject_5"
      type:    struct AutoboxModel_RearObject_1
      offs:    258
    }
    structField30 
    {
      alias:   "RearObject_6"
      type:    struct AutoboxModel_RearObject_1
      offs:    265
    }
    structField31 
    {
      alias:   "Steering"
      type:    struct AutoboxModel_Steering
      offs:    272
    }
    structField32 
    {
      alias:   "SteeringWheelButtons"
      type:    struct AutoboxModel_SteeringWheelButtons
      offs:    312
    }
    structField33 
    {
      alias:   "TrafficSigns_1"
      type:    struct AutoboxModel_TrafficSigns_1
      offs:    325
    }
    structField34 
    {
      alias:   "TrafficSigns_2"
      type:    struct AutoboxModel_TrafficSigns_2
      offs:    336
    }
    structField35 
    {
      alias:   "USS_front"
      type:    struct AutoboxModel_USS_front
      offs:    344
    }
    structField36 
    {
      alias:   "USS_rear"
      type:    struct AutoboxModel_USS_rear
      offs:    350
    }
    structField37 
    {
      alias:   "USS_side"
      type:    struct AutoboxModel_USS_side
      offs:    356
    }
    structField38 
    {
      alias:   "Wheel_1"
      type:    struct AutoboxModel_Wheel_1
      offs:    362
    }
    structField39 
    {
      alias:   "Wheel_2"
      type:    struct AutoboxModel_Wheel_2
      offs:    368
    }
endstruct

struct AutoboxModel_struct_gJawgnHoipcgHaaDA1UzoF
{
  array-incr: 56        
}
    structField0 
    {
      alias:   "sequence_num"
      type:    flt(64,IEEE)
      offs:    0
    }
    structField1 
    {
      alias:   "timestamp_sec"
      type:    flt(64,IEEE)
      offs:    8
    }
    structField2 
    {
      alias:   "throttle"
      type:    flt(64,IEEE)
      offs:    16
    }
    structField3 
    {
      alias:   "brake"
      type:    flt(64,IEEE)
      offs:    24
    }
    structField4 
    {
      alias:   "steering_rate"
      type:    flt(64,IEEE)
      offs:    32
    }
    structField5 
    {
      alias:   "steering_target"
      type:    flt(64,IEEE)
      offs:    40
    }
    structField6 
    {
      alias:   "acceleration"
      type:    flt(64,IEEE)
      offs:    48
    }
endstruct

struct AutoboxModel_struct_kskDyotS523t4kXE8GJRSG
{
  array-incr: 24        
}
    structField0 
    {
      alias:   "x"
      type:    flt(64,IEEE)
      offs:    0
    }
    structField1 
    {
      alias:   "y"
      type:    flt(64,IEEE)
      offs:    8
    }
    structField2 
    {
      alias:   "z"
      type:    flt(64,IEEE)
      offs:    16
    }
endstruct

struct AutoboxModel_struct_9GRs2NCO7osDAiJrMlq9iH
{
  array-incr: 32        
}
    structField0 
    {
      alias:   "qx"
      type:    flt(64,IEEE)
      offs:    0
    }
    structField1 
    {
      alias:   "qy"
      type:    flt(64,IEEE)
      offs:    8
    }
    structField2 
    {
      alias:   "qz"
      type:    flt(64,IEEE)
      offs:    16
    }
    structField3 
    {
      alias:   "qw"
      type:    flt(64,IEEE)
      offs:    24
    }
endstruct

struct AutoboxModel_struct_L48N1ZDSQkeoU8ZdTyAQC
{
  array-incr: 208       
}
    structField0 
    {
      alias:   "Position"
      type:    struct AutoboxModel_PointENU
      offs:    0
    }
    structField1 
    {
      alias:   "Orientation"
      type:    struct AutoboxModel_Quaternion
      offs:    24
    }
    structField2 
    {
      alias:   "LinearVelocity"
      type:    struct AutoboxModel_PointENU
      offs:    56
    }
    structField3 
    {
      alias:   "LinearAcceleration"
      type:    struct AutoboxModel_PointENU
      offs:    80
    }
    structField4 
    {
      alias:   "AngularVelocity"
      type:    struct AutoboxModel_PointENU
      offs:    104
    }
    structField5 
    {
      alias:   "Heading"
      type:    flt(64,IEEE)
      offs:    128
    }
    structField6 
    {
      alias:   "LinearAccelerationVrf"
      type:    struct AutoboxModel_PointENU
      offs:    136
    }
    structField7 
    {
      alias:   "AngularVelocityVrf"
      type:    struct AutoboxModel_PointENU
      offs:    160
    }
    structField8 
    {
      alias:   "EulerAngles"
      type:    struct AutoboxModel_PointENU
      offs:    184
    }
endstruct

struct AutoboxModel_struct_YW2uzW0n12GBZETaoLQTvB
{
  array-incr: 120       
}
    structField0 
    {
      alias:   "PositionStdDev"
      type:    struct AutoboxModel_PointENU
      offs:    0
    }
    structField1 
    {
      alias:   "OrientationStdDev"
      type:    struct AutoboxModel_PointENU
      offs:    24
    }
    structField2 
    {
      alias:   "LinearVelocityStdDev"
      type:    struct AutoboxModel_PointENU
      offs:    48
    }
    structField3 
    {
      alias:   "LinearAccelerationStdDev"
      type:    struct AutoboxModel_PointENU
      offs:    72
    }
    structField4 
    {
      alias:   "AngularVelocityStdDev"
      type:    struct AutoboxModel_PointENU
      offs:    96
    }
endstruct

struct AutoboxModel_struct_Rp64v743ECv28oX4XxKFGF
{
  array-incr: 336       
}
    structField0 
    {
      alias:   "Pose"
      type:    struct AutoboxModel_Pose
      offs:    0
    }
    structField1 
    {
      alias:   "MeasurementTime"
      type:    flt(64,IEEE)
      offs:    208
    }
    structField2 
    {
      alias:   "Uncertainty"
      type:    struct AutoboxModel_Uncertainty
      offs:    216
    }
endstruct

struct AutoboxModel_struct_2IXfyBhQcUt5S5FlQRJOeC
{
  array-incr: 88016     
}
    structField0 
    {
      alias:   "n_trajectory_point"
      type:    uint(32)
      offs:    0
    }
    structField1 
    {
      alias:   "x"
      type:    AutoboxModel_ControlTrajectory_x_1
      offs:    8
    }
    structField2 
    {
      alias:   "y"
      type:    AutoboxModel_ControlTrajectory_x_1
      offs:    8008
    }
    structField3 
    {
      alias:   "z"
      type:    AutoboxModel_ControlTrajectory_x_1
      offs:    16008
    }
    structField4 
    {
      alias:   "theta"
      type:    AutoboxModel_ControlTrajectory_x_1
      offs:    24008
    }
    structField5 
    {
      alias:   "kappa"
      type:    AutoboxModel_ControlTrajectory_x_1
      offs:    32008
    }
    structField6 
    {
      alias:   "dkappa"
      type:    AutoboxModel_ControlTrajectory_x_1
      offs:    40008
    }
    structField7 
    {
      alias:   "ddkappa"
      type:    AutoboxModel_ControlTrajectory_x_1
      offs:    48008
    }
    structField8 
    {
      alias:   "s"
      type:    AutoboxModel_ControlTrajectory_x_1
      offs:    56008
    }
    structField9 
    {
      alias:   "v"
      type:    AutoboxModel_ControlTrajectory_x_1
      offs:    64008
    }
    structField10 
    {
      alias:   "a"
      type:    AutoboxModel_ControlTrajectory_x_1
      offs:    72008
    }
    structField11 
    {
      alias:   "relative_time"
      type:    AutoboxModel_ControlTrajectory_x_1
      offs:    80008
    }
    structField12 
    {
      alias:   "timestamp_sec"
      type:    flt(64,IEEE)
      offs:    88008
    }
endstruct


-- Type definitions for arrays
typedef AutoboxModel_ArrayDT7_302 uint(32)[302]
typedef AutoboxModel_ArrayDT3_1208 uint(8)[1208]
typedef AutoboxModel_ArrayDT8_27 uint(8)[27]
typedef AutoboxModel_ArrayDT8_11002 uint(8)[11002]
typedef AutoboxModel_ArrayDT0_2 flt(64,IEEE)[2]
typedef AutoboxModel_ArrayDT0_27 flt(64,IEEE)[27]
typedef AutoboxModel_ArrayDT0_13 flt(64,IEEE)[13]
typedef AutoboxModel_ArrayDT0_7 flt(64,IEEE)[7]
typedef AutoboxModel_ArrayDT0_15 flt(64,IEEE)[15]
typedef AutoboxModel_ArrayDT0_18 flt(64,IEEE)[18]
typedef AutoboxModel_ArrayDT0_9 flt(64,IEEE)[9]
typedef AutoboxModel_ArrayDT0_4 flt(64,IEEE)[4]
typedef AutoboxModel_ArrayDT0_10 flt(64,IEEE)[10]
typedef AutoboxModel_ArrayDT10_2 int(32)[2]


-- ******** Simulation control variables **************************************

finalTime
{
 type:  flt(64,IEEE)*
 alias: "finalTime"
 desc:  "Simulation stop time. When reached, simState switches to STOP."
 flags:  READONLY
 unit:  "s"
 addr:    0x007150f4
}

currentTime
{
 type:  flt(64,IEEE)*
 alias: "currentTime"
 desc:  "Current simulation time. Increments with execution of Timer Task 1."
 flags: READONLY
 unit:  "s"
 addr:    0x007150f0
}

modelStepSize
{
 type:  flt(64,IEEE)
 alias: "modelStepSize"
 desc:  "Fixed step size of the model, sample time of Timer Task 1."
 flags: READONLY
 unit:  "s"
 addr:    0x007150f8
}

simState
{
 type:  int(32)
 alias: "simState"
 desc:  "Simulation state: STOP=0 PAUSE=1 RUN=2"
 value: 2
 unit:  "-"
 addr:    0x002a6308
}

msg_last_error_no
{
 type:  uint(32)
 alias: "errorNumber"
 desc:  "Error number of last error message (zero if no error)."
 unit:  "-"
 flags: READONLY
 addr:    0x006c4ae4
}

p_dsts_sum_of_reset_time
{
 type:  flt(64,IEEE)*
 alias: "sumOfResetTime"
 desc:  "Internal variable for summing up reset time."
 unit:  "s"
 flags: READONLY|HIDDEN
 addr:    0x0024cfc0
}


-- ******** Task Information variables ****************************************
group "Task Info"
{
 
}
  group "Timer Task 1"
  {
   
  }

  pRti_TIMERA_STime
  {
   type:  flt(64,IEEE)*
   alias: "sampleTime"
   flags: READONLY
 addr:    0x00715130
}
  pRti_TIMERA_TTime
  {
   type:  flt(64,IEEE)*
   alias: "turnaroundTime"
   flags: READONLY
 addr:    0x00715134
}
  pRti_TIMERA_TState
  {
   type:  int(32)*
   alias: "state"
   flags: READONLY
		 addr:    0x00715138
		}
  pRti_TIMERA_OType
  {
   type:  int(32)*
   alias: "overrunCheckType"
   flags: READONLY
 addr:    0x0071513c
}
  pRti_TIMERA_OMax
  {
   type:  int(32)*
   alias: "overrunQueueMax"
   flags: READONLY
 addr:    0x00715140
}
  pRti_TIMERA_ORpt
  {
   type:  int(32)*
   alias: "overrunQueueCount"
   flags: READONLY
 addr:    0x00715144
}
  pRti_TIMERA_OCnt
  {
   type:  int(32)*
   alias: "overrunCount"
   flags: READONLY
 addr:    0x00715148
}
  pRti_TIMERA_TCnt
  {
   type:  flt(64,IEEE)*
   alias: "taskCallCount"
   flags: READONLY
		 addr:    0x0071514c
		}
  pRti_TIMERA_Prio
  {
   type:  int(32)*
   alias: "priority"
   flags: READONLY
		 addr:    0x00715150
		}
  endgroup

  group "rti_ethernet_interface_name Interrupt [RX//TX]"
  {
   
  }

  pRti_BB_BYP_ETHT1M0I0S0_TTime
  {
   type:  flt(64,IEEE)*
   alias: "turnaroundTime"
   flags: READONLY
 addr:    0x00715154
}
  pRti_BB_BYP_ETHT1M0I0S0_TState
  {
   type:  int(32)*
   alias: "state"
   flags: READONLY
 addr:    0x00715158
}
  pRti_BB_BYP_ETHT1M0I0S0_OType
  {
   type:  int(32)*
   alias: "overrunCheckType"
   flags: READONLY
 addr:    0x0071515c
}
  pRti_BB_BYP_ETHT1M0I0S0_OMax
  {
   type:  int(32)*
   alias: "overrunQueueMax"
   flags: READONLY
 addr:    0x00715160
}
  pRti_BB_BYP_ETHT1M0I0S0_ORpt
  {
   type:  int(32)*
   alias: "overrunQueueCount"
   flags: READONLY
 addr:    0x00715164
}
  pRti_BB_BYP_ETHT1M0I0S0_OCnt
  {
   type:  int(32)*
   alias: "overrunCount"
   flags: READONLY
 addr:    0x00715168
}
  pRti_BB_BYP_ETHT1M0I0S0_TCnt
  {
   type:  flt(64,IEEE)*
   alias: "taskCallCount"
   flags: READONLY
 addr:    0x0071516c
}
  pRti_BB_BYP_ETHT1M0I0S0_Prio
  {
   type:  int(32)*
   alias: "priority"
   flags: READONLY
 addr:    0x00715170
}
  endgroup


endgroup


-- ******** Model variables ***************************************************

group "Model Root"
	group "ActivateAccelerationInterface" -- block-group
	{
	 block: "Constant"
	}
		-- Skipping output Out1
		p_1_AutoboxModel_boolean_T_10[11]
		{
		 type:    uint(8)*
		 alias:   "Value"
		 range:   < 0 ; 1 >
		 bitmask: 0x01
		 value:   0
		 flags:   PARAM
		 addr:    0x002a62b4
		}


	endgroup -- block-group "ActivateAccelerationInterface"

	group "ActivateSteeringInterface" -- block-group
	{
	 block: "Constant"
	}
		-- Skipping output Out1
		p_1_AutoboxModel_boolean_T_10[9]
		{
		 type:    uint(8)*
		 alias:   "Value"
		 range:   < 0 ; 1 >
		 bitmask: 0x01
		 value:   0
		 flags:   PARAM
		 addr:    0x002a62b4
		}


	endgroup -- block-group "ActivateSteeringInterface"

	group "SwitchControllers" -- block-group
	{
	 block: "Constant"
	}
		-- Skipping output Out1
		p_1_AutoboxModel_real_T_9[386]
		{
		 type:    flt(64,IEEE)*
		 alias:   "Value"
		 value:   1.0
		 flags:   PARAM
		 addr:    0x002a62b0
		}


	endgroup -- block-group "SwitchControllers"

	group "From" -- block-group
	{
	 block: "From"
	}
		p_0_AutoboxModel_LocalizationToAutobox_2[0]
		{
		 type:    struct AutoboxModel_LocalizationToAutobox*
		 alias:   "Out1"
		 flags:   OUTPUT|READONLY
 addr:    0x002a6248
}


	endgroup -- block-group "From"

	group "From1" -- block-group
	{
	 block: "From"
	}
		p_0_AutoboxModel_ControlTrajectory_0[0]
		{
		 type:    struct AutoboxModel_ControlTrajectory*
		 alias:   "Out1"
		 flags:   OUTPUT|READONLY
		 addr:    0x002a6240
		}


	endgroup -- block-group "From1"

	group "From2" -- block-group
	{
	 block: "From"
	}
		p_0_AutoboxModel_TrajectoryPoint_4[0]
		{
		 type:    struct AutoboxModel_TrajectoryPoint*
		 alias:   "Out1"
		 flags:   OUTPUT|READONLY
		 addr:    0x002a6250
		}


	endgroup -- block-group "From2"

	group "From3" -- block-group
	{
	 block: "From"
	}
		-- Skipping output


	endgroup -- block-group "From3"

	group "From4" -- block-group
	{
	 block: "From"
	}
		-- Skipping output


	endgroup -- block-group "From4"

	group "From5" -- block-group
	{
	 block: "From"
	}
		p_0_AutoboxModel_TrackingError_5[0]
		{
		 type:    struct AutoboxModel_TrackingError*
		 alias:   "Out1"
		 flags:   OUTPUT|READONLY
		 addr:    0x002a6254
		}


	endgroup -- block-group "From5"

	group "Goto" -- block-group
	{
	 block: "Goto"
	}
		p_0_AutoboxModel_LocalizationToAutobox_2[0]
		{
		 type:    struct AutoboxModel_LocalizationToAutobox*
		 alias:   "In1"
		 flags:   READONLY
 addr:    0x002a6248
}



	endgroup -- block-group "Goto"

	group "Goto1" -- block-group
	{
	 block: "Goto"
	}
		p_0_AutoboxModel_ControlTrajectory_0[0]
		{
		 type:    struct AutoboxModel_ControlTrajectory*
		 alias:   "In1"
		 flags:   READONLY
 addr:    0x002a6240
}



	endgroup -- block-group "Goto1"

	group "Goto2" -- block-group
	{
	 block: "Goto"
	}
		p_0_AutoboxModel_TrajectoryPoint_4[0]
		{
		 type:    struct AutoboxModel_TrajectoryPoint*
		 alias:   "In1"
		 flags:   READONLY
		 addr:    0x002a6250
		}



	endgroup -- block-group "Goto2"

	group "Goto3" -- block-group
	{
	 block: "Goto"
	}
		-- Skipping input



	endgroup -- block-group "Goto3"

	group "Goto4" -- block-group
	{
	 block: "Goto"
	}
		-- Skipping input



	endgroup -- block-group "Goto4"

	group "Goto5" -- block-group
	{
	 block: "Goto"
	}
		p_0_AutoboxModel_TrackingError_5[0]
		{
		 type:    struct AutoboxModel_TrackingError*
		 alias:   "In1"
		 flags:   READONLY
 addr:    0x002a6254
}



	endgroup -- block-group "Goto5"

	group "Switch" -- block-group
	{
	 block: "Switch"
	}
		-- Skipping output


	endgroup -- block-group "Switch"

  
  
	group "ApolloControl" -- subsystem-group

		-- Skipping output


		group "Control" -- block-group
		{
		 block: "Inport"
		}
			p_0_AutoboxModel_ControlCommandToAutobox_6[0]
			{
			 type:    struct AutoboxModel_ControlCommandToAutobox*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
		 addr:    0x002a6258
		}


		endgroup -- block-group "Control"

		group "Bus\nCreator" -- block-group
		{
		 block: "BusCreator"
		}
			-- Skipping output


		endgroup -- block-group "Bus\nCreator"

		group "Bus\nSelector" -- block-group
		{
		 block: "BusSelector"
		}
			-- Skipping output Out1
			-- Skipping output Out2
			-- Skipping output Out3


		endgroup -- block-group "Bus\nSelector"

		group "Relational\nOperator" -- block-group
		{
		 block: "RelationalOperator"
		}
			p_0_AutoboxModel_boolean_T_18[59]
			{
			 type:    uint(8)*
			 alias:   "Out1"
			 range:   < 0 ; 1 >
			 bitmask: 0x01
			 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


		endgroup -- block-group "Relational\nOperator"

		group "Delay" -- block-group
		{
		 block: "Delay"
		}
			p_0_AutoboxModel_real_T_12[11057]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}
			p_2_AutoboxModel_real_T_0[0]
			{
			 type:    AutoboxModel_ArrayDT0_10*
			 alias:   "DiscState"
			 flags: READONLY
 addr:    0x002a62bc
}
			p_1_AutoboxModel_real_T_9[385]
			{
			 type:    flt(64,IEEE)*
			 alias:   "InitialCondition"
			 value:   0.0
			 flags:   PARAM
 addr:    0x002a62b0
}


		endgroup -- block-group "Delay"



	endgroup -- subsystem-group "ApolloControl"
  
  
	group "AutoboxControl" -- subsystem-group

		-- Skipping output
		p_0_AutoboxModel_TrackingError_5[0]
		{
		 type:    struct AutoboxModel_TrackingError*
		 alias:   "TrackingError"
		 flags:   OUTPUT|READONLY
		 addr:    0x002a6254
		}
		p_0_AutoboxModel_TrajectoryPoint_4[0]
		{
		 type:    struct AutoboxModel_TrajectoryPoint*
		 alias:   "ReferencePoint"
		 flags:   OUTPUT|READONLY
 addr:    0x002a6250
}
		-- Skipping output


		group "VehicleDataCan" -- block-group
		{
		 block: "Inport"
		}
			p_0_AutoboxModel_vehicle_data_can_bus_1[0]
			{
			 type:    struct AutoboxModel_vehicle_data_can_bus*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
 addr:    0x002a6244
}


		endgroup -- block-group "VehicleDataCan"

		group "Trajectory" -- block-group
		{
		 block: "Inport"
		}
			p_0_AutoboxModel_ControlTrajectory_0[0]
			{
			 type:    struct AutoboxModel_ControlTrajectory*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
		 addr:    0x002a6240
		}


		endgroup -- block-group "Trajectory"

		group "Localization" -- block-group
		{
		 block: "Inport"
		}
			p_0_AutoboxModel_LocalizationToAutobox_2[0]
			{
			 type:    struct AutoboxModel_LocalizationToAutobox*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
 addr:    0x002a6248
}


		endgroup -- block-group "Localization"

		group "reset_steering_integrator" -- block-group
		{
		 block: "Inport"
		}
			-- Skipping output Out1


		endgroup -- block-group "reset_steering_integrator"

		group "Bus\nCreator" -- block-group
		{
		 block: "BusCreator"
		}
			-- Skipping output


		endgroup -- block-group "Bus\nCreator"

		group "Bus\nCreator1" -- block-group
		{
		 block: "BusCreator"
		}
			p_0_AutoboxModel_TrackingError_5[0]
			{
			 type:    struct AutoboxModel_TrackingError*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
 addr:    0x002a6254
}


		endgroup -- block-group "Bus\nCreator1"

		group "Bus\nSelector2" -- block-group
		{
		 block: "BusSelector"
		}
			-- Skipping output Out1
			-- Skipping output Out2
			-- Skipping output Out3
			-- Skipping output Out4
			-- Skipping output Out5
			-- Skipping output Out6
			-- Skipping output Out7


		endgroup -- block-group "Bus\nSelector2"

		group "Constant" -- block-group
		{
		 block: "Constant"
		}
			-- Skipping output Out1
			trcref0_controller_params
			{
			 refgroup: "/Tunable Parameters"
			 refvar:   "controller_params"
			 alias:    "controller_params"
}
			trcref0_Value
			{
			 refgroup: "/Tunable Parameters"
			 refvar:   "controller_params"
			 alias:    "Value"
			 flags:    DEPRECATED|HIDDEN
		}


		endgroup -- block-group "Constant"

		group "switch_steering_feedback" -- block-group
		{
		 block: "Constant"
		}
			-- Skipping output Out1
			trcref0_switch_steering_feedback
			{
			 refgroup: "/Tunable Parameters"
			 refvar:   "switch_steering_feedback"
			 alias:    "switch_steering_feedback"
}
			trcref0_Value
			{
			 refgroup: "/Tunable Parameters"
			 refvar:   "switch_steering_feedback"
			 alias:    "Value"
			 flags:    DEPRECATED|HIDDEN
}


		endgroup -- block-group "switch_steering_feedback"

		group "switch_velocity_feedback" -- block-group
		{
		 block: "Constant"
		}
			-- Skipping output Out1
			trcref0_switch_velocity_feedback
			{
			 refgroup: "/Tunable Parameters"
			 refvar:   "switch_velocity_feedback"
			 alias:    "switch_velocity_feedback"
}
			trcref0_Value
			{
			 refgroup: "/Tunable Parameters"
			 refvar:   "switch_velocity_feedback"
			 alias:    "Value"
			 flags:    DEPRECATED|HIDDEN
}


		endgroup -- block-group "switch_velocity_feedback"

		group "Memory" -- block-group
		{
		 block: "Memory"
		}
			p_0_AutoboxModel_real_T_12[11059]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}
			p_1_AutoboxModel_real_T_9[388]
			{
			 type:    flt(64,IEEE)*
			 alias:   "InitialCondition"
			 value:   0.0
			 flags:   PARAM
 addr:    0x002a62b0
}


		endgroup -- block-group "Memory"

		group "Sign" -- block-group
		{
		 block: "Signum"
		}
			p_0_AutoboxModel_real_T_12[11058]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
			 addr:    0x002a6270
			}


		endgroup -- block-group "Sign"

		group "Switch" -- block-group
		{
		 block: "Switch"
		}
			p_0_AutoboxModel_real_T_12[11060]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}
			p_1_AutoboxModel_real_T_9[389]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Threshold"
			 value:   0.0
			 flags:   PARAM
		 addr:    0x002a62b0
		}


		endgroup -- block-group "Switch"

		group "Switch1" -- block-group
		{
		 block: "Switch"
		}
			p_0_AutoboxModel_real_T_12[11033]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
			p_1_AutoboxModel_real_T_9[309]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Threshold"
			 value:   0.0
			 flags:   PARAM
		 addr:    0x002a62b0
		}


		endgroup -- block-group "Switch1"

  
  
		group "ReferencePointCalculation" -- subsystem-group

			p_0_AutoboxModel_TrajectoryPoint_4[0]
			{
			 type:    struct AutoboxModel_TrajectoryPoint*
			 alias:   "Reference"
			 flags:   OUTPUT|READONLY
 addr:    0x002a6250
}
			-- Skipping output


			group "Trajectory" -- block-group
			{
			 block: "Inport"
			}
				p_0_AutoboxModel_ControlTrajectory_0[0]
				{
				 type:    struct AutoboxModel_ControlTrajectory*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6240
}


			endgroup -- block-group "Trajectory"

			group "Localization" -- block-group
			{
			 block: "Inport"
			}
				p_0_AutoboxModel_LocalizationToAutobox_2[0]
				{
				 type:    struct AutoboxModel_LocalizationToAutobox*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6248
}


			endgroup -- block-group "Localization"

			group "velocity" -- block-group
			{
			 block: "Inport"
			}
				p_0_AutoboxModel_real_T_12[11033]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


			endgroup -- block-group "velocity"

			group "Bus\nAssignment" -- block-group
			{
			 block: "BusAssignment"
			}
				p_0_AutoboxModel_ControlTrajectory_0[1]
				{
				 type:    struct AutoboxModel_ControlTrajectory*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
		 addr:    0x002a6240
		}


			endgroup -- block-group "Bus\nAssignment"

			group "Bus\nSelector" -- block-group
			{
			 block: "BusSelector"
			}
				-- Skipping output Out1


			endgroup -- block-group "Bus\nSelector"

			group "Bus\nSelector1" -- block-group
			{
			 block: "BusSelector"
			}
				-- Skipping output Out1


			endgroup -- block-group "Bus\nSelector1"

			group "Mux1" -- block-group
			{
			 block: "Mux"
			}
				-- Skipping output


			endgroup -- block-group "Mux1"

			group "trajectory_timeshift_speed_threshold switch" -- block-group
			{
			 block: "Switch"
			}
				p_0_AutoboxModel_real_T_12[11034]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}
				trcref0_trajectory_timeshift_speed_threshold
				{
				 refgroup: "/Tunable Parameters"
				 refvar:   "trajectory_timeshift_speed_threshold"
				 alias:    "trajectory_timeshift_speed_threshold"
}
				trcref0_Threshold
				{
				 refgroup: "/Tunable Parameters"
				 refvar:   "trajectory_timeshift_speed_threshold"
				 alias:    "Threshold"
				 flags:    DEPRECATED|HIDDEN
}


			endgroup -- block-group "trajectory_timeshift_speed_threshold switch"

  
  
			group "ReferencePoint" -- subsystem-group

				p_0_AutoboxModel_TrajectoryPoint_4[0]
				{
				 type:    struct AutoboxModel_TrajectoryPoint*
				 alias:   "ref"
				 flags:   OUTPUT|READONLY
		 addr:    0x002a6250
		}
				p_0_AutoboxModel_real_T_12[11161]
				{
				 type:    flt(64,IEEE)*
				 alias:   "idx_larger"
				 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}
				p_0_AutoboxModel_real_T_12[11162]
				{
				 type:    flt(64,IEEE)*
				 alias:   "idx_smaller"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_real_T_12[11163]
				{
				 type:    flt(64,IEEE)*
				 alias:   "interp_factor"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_real_T_12[11164]
				{
				 type:    flt(64,IEEE)*
				 alias:   "time"
				 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}
				p_0_AutoboxModel_real_T_12[11165]
				{
				 type:    flt(64,IEEE)*
				 alias:   "time_smaller"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_real_T_12[11166]
				{
				 type:    flt(64,IEEE)*
				 alias:   "time_larger"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_real_T_12[11167]
				{
				 type:    flt(64,IEEE)*
				 alias:   "lmt"
				 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}
				p_0_AutoboxModel_real_T_12[11168]
				{
				 type:    flt(64,IEEE)*
				 alias:   "tts"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}




			endgroup -- subsystem-group "ReferencePoint"


		endgroup -- subsystem-group "ReferencePointCalculation"
  
  
		group "check if trajectory valid" -- subsystem-group

			p_0_AutoboxModel_boolean_T_18[11094]
			{
			 type:    uint(8)*
			 alias:   "trajectory_valid"
			 range:   < 0 ; 1 >
			 bitmask: 0x01
			 flags:   OUTPUT|READONLY
		 addr:    0x002a6288
		}


			group "Traj" -- block-group
			{
			 block: "Inport"
			}
				p_0_AutoboxModel_ControlTrajectory_0[0]
				{
				 type:    struct AutoboxModel_ControlTrajectory*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
		 addr:    0x002a6240
		}


			endgroup -- block-group "Traj"

			group "Loca" -- block-group
			{
			 block: "Inport"
			}
				p_0_AutoboxModel_LocalizationToAutobox_2[0]
				{
				 type:    struct AutoboxModel_LocalizationToAutobox*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6248
}


			endgroup -- block-group "Loca"

			group "Bus\nSelector" -- block-group
			{
			 block: "BusSelector"
			}
				-- Skipping output Out1


			endgroup -- block-group "Bus\nSelector"

			group "Bus\nSelector1" -- block-group
			{
			 block: "BusSelector"
			}
				-- Skipping output Out1


			endgroup -- block-group "Bus\nSelector1"

			group "Bus\nSelector2" -- block-group
			{
			 block: "BusSelector"
			}
				-- Skipping output Out1
				-- Skipping output Out2
				-- Skipping output Out3
				-- Skipping output Out4
				-- Skipping output Out5
				-- Skipping output Out6
				-- Skipping output Out7
				-- Skipping output Out8
				-- Skipping output Out9
				-- Skipping output Out10
				-- Skipping output Out11
				-- Skipping output Out12
				-- Skipping output Out13


			endgroup -- block-group "Bus\nSelector2"

			group "Bus\nSelector3" -- block-group
			{
			 block: "BusSelector"
			}
				-- Skipping output Out1
				-- Skipping output Out2
				-- Skipping output Out3
				-- Skipping output Out4
				-- Skipping output Out5
				-- Skipping output Out6
				-- Skipping output Out7
				-- Skipping output Out8
				-- Skipping output Out9
				-- Skipping output Out10
				-- Skipping output Out11
				-- Skipping output Out12
				-- Skipping output Out13
				-- Skipping output Out14
				-- Skipping output Out15
				-- Skipping output Out16
				-- Skipping output Out17
				-- Skipping output Out18
				-- Skipping output Out19
				-- Skipping output Out20
				-- Skipping output Out21
				-- Skipping output Out22
				-- Skipping output Out23
				-- Skipping output Out24
				-- Skipping output Out25
				-- Skipping output Out26
				-- Skipping output Out27


			endgroup -- block-group "Bus\nSelector3"

			group "Bus\nSelector4" -- block-group
			{
			 block: "BusSelector"
			}
				-- Skipping output Out1
				-- Skipping output Out2


			endgroup -- block-group "Bus\nSelector4"

			group "Bus\nSelector5" -- block-group
			{
			 block: "BusSelector"
			}
				-- Skipping output Out1
				-- Skipping output Out2


			endgroup -- block-group "Bus\nSelector5"

			group "Data Type Conversion" -- block-group
			{
			 block: "DataTypeConversion"
			}
				p_0_AutoboxModel_real_T_12[11151]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}


			endgroup -- block-group "Data Type Conversion"

			group "Logical\nOperator" -- block-group
			{
			 block: "Logic"
			}
				p_0_AutoboxModel_boolean_T_18[11091]
				{
				 type:    uint(8)*
				 alias:   "Out1"
				 range:   < 0 ; 1 >
				 bitmask: 0x01
				 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


			endgroup -- block-group "Logical\nOperator"

			group "Logical\nOperator1" -- block-group
			{
			 block: "Logic"
			}
				p_0_AutoboxModel_boolean_T_18[88]
				{
				 type:    uint(8)*
				 alias:   "Out1"
				 range:   < 0 ; 1 >
				 bitmask: 0x01
				 flags:   OUTPUT|READONLY
		 addr:    0x002a6288
		}


			endgroup -- block-group "Logical\nOperator1"

			group "Logical\nOperator2" -- block-group
			{
			 block: "Logic"
			}
				p_0_AutoboxModel_boolean_T_18[11092]
				{
				 type:    uint(8)*
				 alias:   "Out1"
				 range:   < 0 ; 1 >
				 bitmask: 0x01
				 flags:   OUTPUT|READONLY
			 addr:    0x002a6288
			}


			endgroup -- block-group "Logical\nOperator2"

			group "Logical\nOperator3" -- block-group
			{
			 block: "Logic"
			}
				p_0_AutoboxModel_boolean_T_18[11094]
				{
				 type:    uint(8)*
				 alias:   "Out1"
				 range:   < 0 ; 1 >
				 bitmask: 0x01
				 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


			endgroup -- block-group "Logical\nOperator3"

			group "Square" -- block-group
			{
			 block: "Math"
			}
				p_0_AutoboxModel_real_T_12[11155]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


			endgroup -- block-group "Square"

			group "Square1" -- block-group
			{
			 block: "Math"
			}
				p_0_AutoboxModel_real_T_12[11153]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


			endgroup -- block-group "Square1"

			group "Mux1" -- block-group
			{
			 block: "Mux"
			}
				-- Skipping output


			endgroup -- block-group "Mux1"

			group "Mux2" -- block-group
			{
			 block: "Mux"
			}
				-- Skipping output


			endgroup -- block-group "Mux2"

			group "Relational\nOperator1" -- block-group
			{
			 block: "RelationalOperator"
			}
				p_0_AutoboxModel_boolean_T_18[61]
				{
				 type:    AutoboxModel_ArrayDT8_27*
				 alias:   "Out1"
				 range:   < 0 ; 1 >
				 bitmask: 0x01
				 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


			endgroup -- block-group "Relational\nOperator1"

			group "Relational\nOperator3" -- block-group
			{
			 block: "RelationalOperator"
			}
				p_0_AutoboxModel_boolean_T_18[89]
				{
				 type:    AutoboxModel_ArrayDT8_11002*
				 alias:   "Out1"
				 range:   < 0 ; 1 >
				 bitmask: 0x01
				 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


			endgroup -- block-group "Relational\nOperator3"

			group "Selector" -- block-group
			{
			 block: "Selector"
			}
				-- Skipping output Out1


			endgroup -- block-group "Selector"

			group "Selector1" -- block-group
			{
			 block: "Selector"
			}
				-- Skipping output Out1


			endgroup -- block-group "Selector1"

			group "Add" -- block-group
			{
			 block: "Sum"
			}
				p_0_AutoboxModel_real_T_12[11150]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


			endgroup -- block-group "Add"

			group "Add1" -- block-group
			{
			 block: "Sum"
			}
				p_0_AutoboxModel_real_T_12[11156]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


			endgroup -- block-group "Add1"

			group "Subtract" -- block-group
			{
			 block: "Sum"
			}
				p_0_AutoboxModel_real_T_12[11154]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


			endgroup -- block-group "Subtract"

			group "Subtract1" -- block-group
			{
			 block: "Sum"
			}
				p_0_AutoboxModel_real_T_12[11152]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


			endgroup -- block-group "Subtract1"

  
  
			group "Compare\nTo Constant" -- subsystem-group

				p_0_AutoboxModel_boolean_T_18[60]
				{
				 type:    uint(8)*
				 alias:   "y"
				 range:   < 0 ; 1 >
				 bitmask: 0x01
				 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


				group "u" -- block-group
				{
				 block: "Inport"
				}
					p_0_AutoboxModel_real_T_12[11150]
					{
					 type:    flt(64,IEEE)*
					 alias:   "Out1"
					 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}


				endgroup -- block-group "u"

				group "Constant" -- block-group
				{
				 block: "Constant"
				}
					-- Skipping output Out1
					trcref0_controller_max_time_diff
					{
					 refgroup: "/Tunable Parameters"
					 refvar:   "controller_max_time_diff"
					 alias:    "controller_max_time_diff"
		}
					trcref0_Value
					{
					 refgroup: "/Tunable Parameters"
					 refvar:   "controller_max_time_diff"
					 alias:    "Value"
					 flags:    DEPRECATED|HIDDEN
}


				endgroup -- block-group "Constant"

				group "Compare" -- block-group
				{
				 block: "RelationalOperator"
				}
					p_0_AutoboxModel_boolean_T_18[60]
					{
					 type:    uint(8)*
					 alias:   "Out1"
					 range:   < 0 ; 1 >
					 bitmask: 0x01
					 flags:   OUTPUT|READONLY
		 addr:    0x002a6288
		}


				endgroup -- block-group "Compare"



			endgroup -- subsystem-group "Compare\nTo Constant"
  
  
			group "Compare\nTo Constant1" -- subsystem-group

				p_0_AutoboxModel_boolean_T_18[11093]
				{
				 type:    uint(8)*
				 alias:   "y"
				 range:   < 0 ; 1 >
				 bitmask: 0x01
				 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


				group "u" -- block-group
				{
				 block: "Inport"
				}
					p_0_AutoboxModel_real_T_12[11156]
					{
					 type:    flt(64,IEEE)*
					 alias:   "Out1"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


				endgroup -- block-group "u"

				group "Constant" -- block-group
				{
				 block: "Constant"
				}
					-- Skipping output Out1
					trcref0_max_loca_traj_diff
					{
					 refgroup: "/Tunable Parameters"
					 refvar:   "max_loca_traj_diff"
					 alias:    "max_loca_traj_diff"
					}
					-- Skipping parameter "max_loca_traj_diff"
					-- Skipping parameter "Value"
					-- Skipping parameter "Value"


				endgroup -- block-group "Constant"

				group "Compare" -- block-group
				{
				 block: "RelationalOperator"
				}
					p_0_AutoboxModel_boolean_T_18[11093]
					{
					 type:    uint(8)*
					 alias:   "Out1"
					 range:   < 0 ; 1 >
					 bitmask: 0x01
					 flags:   OUTPUT|READONLY
		 addr:    0x002a6288
		}


				endgroup -- block-group "Compare"



			endgroup -- subsystem-group "Compare\nTo Constant1"


		endgroup -- subsystem-group "check if trajectory valid"
  
  
		group "extract_vehicle_data" -- subsystem-group

			p_0_AutoboxModel_real_T_12[11185]
			{
			 type:    flt(64,IEEE)*
			 alias:   "velocity"
			 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
			p_0_AutoboxModel_real_T_12[11179]
			{
			 type:    flt(64,IEEE)*
			 alias:   "steering_angle"
			 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
			-- Skipping output acceleration


			group "vehicledatacan" -- block-group
			{
			 block: "Inport"
			}
				p_0_AutoboxModel_vehicle_data_can_bus_1[0]
				{
				 type:    struct AutoboxModel_vehicle_data_can_bus*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6244
}


			endgroup -- block-group "vehicledatacan"

			group "Bus\nSelector" -- block-group
			{
			 block: "BusSelector"
			}
				-- Skipping output Out1
				-- Skipping output Out2
				-- Skipping output Out3
				-- Skipping output Out4


			endgroup -- block-group "Bus\nSelector"

			group "Gain" -- block-group
			{
			 block: "Gain"
			}
				p_0_AutoboxModel_real_T_12[11180]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_1_AutoboxModel_real_T_9[1]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Gain"
				 value:   -1.0
				 flags:   PARAM
		 addr:    0x002a62b0
		}


			endgroup -- block-group "Gain"

			group "kmh2ms" -- block-group
			{
			 block: "Gain"
			}
				p_0_AutoboxModel_real_T_12[11185]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_1_AutoboxModel_real_T_9[0]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Gain"
				 value:   0.27777777777777779
				 flags:   PARAM
 addr:    0x002a62b0
}


			endgroup -- block-group "kmh2ms"

			group "steering_wheel_angle_deg_2_steering_angle_rad gain" -- block-group
			{
			 block: "Gain"
			}
				p_0_AutoboxModel_real_T_12[11179]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}
				trcref0_steering_angle_range_rad_to_steering_wheel_angle_range_deg_gain
				{
				 refgroup: "/Tunable Parameters"
				 refvar:   "steering_angle_range_rad_to_steering_wheel_angle_range_deg_gain"
				 alias:    "steering_angle_range_rad_to_steering_wheel_angle_range_deg_gain"
}
				-- Skipping parameter "Gain"


			endgroup -- block-group "steering_wheel_angle_deg_2_steering_angle_rad gain"

			group "Switch2" -- block-group
			{
			 block: "Switch"
			}
				p_0_AutoboxModel_real_T_12[11178]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


			endgroup -- block-group "Switch2"


			p_0_AutoboxModel_real_T_12[11178]
			{
			 type:    flt(64,IEEE)*
			 alias:   "steering_WHEEL_angle"
			 origin:  "AutoboxModel/AutoboxControl/extract_vehicle_data/Switch2/Out1"
			 flags:   READONLY
		 addr:    0x002a6270
		}

		endgroup -- subsystem-group "extract_vehicle_data"
  
  
		group "limit out signals" -- subsystem-group

			p_0_AutoboxModel_real_T_12[11157]
			{
			 type:    flt(64,IEEE)*
			 alias:   "acc limited"
			 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}
			p_0_AutoboxModel_real_T_12[11068]
			{
			 type:    flt(64,IEEE)*
			 alias:   "steering angle limited"
			 flags:   OUTPUT|READONLY
			 addr:    0x002a6270
			}


			group "acc in" -- block-group
			{
			 block: "Inport"
			}
				p_0_AutoboxModel_real_T_12[11169]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


			endgroup -- block-group "acc in"

			group "steering angle in" -- block-group
			{
			 block: "Inport"
			}
				p_0_AutoboxModel_real_T_12[11066]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


			endgroup -- block-group "steering angle in"

			group "max_acceleration_comfort" -- block-group
			{
			 block: "Constant"
			}
				-- Skipping output Out1
				trcref0_max_acceleration_comfort
				{
				 refgroup: "/Tunable Parameters"
				 refvar:   "max_acceleration_comfort"
				 alias:    "max_acceleration_comfort"
}
				trcref0_Value
				{
				 refgroup: "/Tunable Parameters"
				 refvar:   "max_acceleration_comfort"
				 alias:    "Value"
				 flags:    DEPRECATED|HIDDEN
}


			endgroup -- block-group "max_acceleration_comfort"

			group "max_long_jerk_comfort" -- block-group
			{
			 block: "Constant"
			}
				-- Skipping output Out1
				trcref0_max_long_jerk_comfort
				{
				 refgroup: "/Tunable Parameters"
				 refvar:   "max_long_jerk_comfort"
				 alias:    "max_long_jerk_comfort"
}
				trcref0_Value
				{
				 refgroup: "/Tunable Parameters"
				 refvar:   "max_long_jerk_comfort"
				 alias:    "Value"
				 flags:    DEPRECATED|HIDDEN
		}


			endgroup -- block-group "max_long_jerk_comfort"

			group "max_long_jerk_comfort2" -- block-group
			{
			 block: "Constant"
			}
				-- Skipping output Out1
				trcref0_max_deceleration_comfort
				{
				 refgroup: "/Tunable Parameters"
				 refvar:   "max_deceleration_comfort"
				 alias:    "max_deceleration_comfort"
}
				trcref0_Value
				{
				 refgroup: "/Tunable Parameters"
				 refvar:   "max_deceleration_comfort"
				 alias:    "Value"
				 flags:    DEPRECATED|HIDDEN
}


			endgroup -- block-group "max_long_jerk_comfort2"

			group "min_long_jerk_comfort" -- block-group
			{
			 block: "Constant"
			}
				-- Skipping output Out1
				trcref0_min_long_jerk_comfort
				{
				 refgroup: "/Tunable Parameters"
				 refvar:   "min_long_jerk_comfort"
				 alias:    "min_long_jerk_comfort"
}
				trcref0_Value
				{
				 refgroup: "/Tunable Parameters"
				 refvar:   "min_long_jerk_comfort"
				 alias:    "Value"
				 flags:    DEPRECATED|HIDDEN
}


			endgroup -- block-group "min_long_jerk_comfort"

			group "switch_acc" -- block-group
			{
			 block: "Constant"
			}
				-- Skipping output Out1
				p_1_AutoboxModel_real_T_9[158]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Value"
				 value:   2.0
				 flags:   PARAM
 addr:    0x002a62b0
}


			endgroup -- block-group "switch_acc"

			group "Multiport\nSwitch" -- block-group
			{
			 block: "MultiPortSwitch"
			}
				p_0_AutoboxModel_real_T_12[11157]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


			endgroup -- block-group "Multiport\nSwitch"

			group "limit acceleration rate" -- block-group
			{
			 block: "RateLimiter"
			}
				p_0_AutoboxModel_real_T_12[11081]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_1_AutoboxModel_real_T_9[401]
				{
				 type:    flt(64,IEEE)*
				 alias:   "RisingSlewLimit"
				 value:   1.0
				 flags:   PARAM
 addr:    0x002a62b0
}
				p_1_AutoboxModel_real_T_9[402]
				{
				 type:    flt(64,IEEE)*
				 alias:   "FallingSlewLimit"
				 value:   -2.25
				 flags:   PARAM
		 addr:    0x002a62b0
		}
				p_1_AutoboxModel_real_T_9[403]
				{
				 type:    flt(64,IEEE)*
				 alias:   "InitialCondition"
				 value:   0.0
				 flags:   PARAM
		 addr:    0x002a62b0
		}


			endgroup -- block-group "limit acceleration rate"

			group "limit steering rate" -- block-group
			{
			 block: "RateLimiter"
			}
				p_0_AutoboxModel_real_T_12[11067]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}
				p_1_AutoboxModel_real_T_9[393]
				{
				 type:    flt(64,IEEE)*
				 alias:   "RisingSlewLimit"
				 value:   1.22
				 flags:   PARAM
 addr:    0x002a62b0
}
				p_1_AutoboxModel_real_T_9[394]
				{
				 type:    flt(64,IEEE)*
				 alias:   "FallingSlewLimit"
				 value:   -1.22
				 flags:   PARAM
 addr:    0x002a62b0
}
				p_1_AutoboxModel_real_T_9[395]
				{
				 type:    flt(64,IEEE)*
				 alias:   "InitialCondition"
				 value:   0.0
				 flags:   PARAM
		 addr:    0x002a62b0
		}


			endgroup -- block-group "limit steering rate"

			group "limit accleration" -- block-group
			{
			 block: "Saturate"
			}
				p_0_AutoboxModel_real_T_12[11158]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				trcref0_max_acceleration_comfort
				{
				 refgroup: "/Tunable Parameters"
				 refvar:   "max_acceleration_comfort"
				 alias:    "max_acceleration_comfort"
}
				trcref1_max_deceleration_comfort
				{
				 refgroup: "/Tunable Parameters"
				 refvar:   "max_deceleration_comfort"
				 alias:    "max_deceleration_comfort"
}
				trcref0_UpperLimit
				{
				 refgroup: "/Tunable Parameters"
				 refvar:   "max_acceleration_comfort"
				 alias:    "UpperLimit"
				 flags:    DEPRECATED|HIDDEN
		}
				trcref1_LowerLimit
				{
				 refgroup: "/Tunable Parameters"
				 refvar:   "max_deceleration_comfort"
				 alias:    "LowerLimit"
				 flags:    DEPRECATED|HIDDEN
}


			endgroup -- block-group "limit accleration"

			group "limit steering angle" -- block-group
			{
			 block: "Saturate"
			}
				p_0_AutoboxModel_real_T_12[11068]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}
				p_1_AutoboxModel_real_T_9[396]
				{
				 type:    flt(64,IEEE)*
				 alias:   "UpperLimit"
				 value:   0.61
				 flags:   PARAM
 addr:    0x002a62b0
}
				p_1_AutoboxModel_real_T_9[397]
				{
				 type:    flt(64,IEEE)*
				 alias:   "LowerLimit"
				 value:   -0.61
				 flags:   PARAM
		 addr:    0x002a62b0
		}


			endgroup -- block-group "limit steering angle"

  
  
			group "Rate Limiter\nDynamic" -- subsystem-group

				p_0_AutoboxModel_real_T_12[11078]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Y"
				 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}


				group "up" -- block-group
				{
				 block: "Inport"
				}
					-- Skipping output Out1


				endgroup -- block-group "up"

				group "u" -- block-group
				{
				 block: "Inport"
				}
					p_0_AutoboxModel_real_T_12[11169]
					{
					 type:    flt(64,IEEE)*
					 alias:   "Out1"
					 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}


				endgroup -- block-group "u"

				group "lo" -- block-group
				{
				 block: "Inport"
				}
					-- Skipping output Out1


				endgroup -- block-group "lo"

				group "delta fall limit" -- block-group
				{
				 block: "Product"
				}
					p_0_AutoboxModel_real_T_12[11075]
					{
					 type:    flt(64,IEEE)*
					 alias:   "Out1"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


				endgroup -- block-group "delta fall limit"

				group "delta rise limit" -- block-group
				{
				 block: "Product"
				}
					p_0_AutoboxModel_real_T_12[11072]
					{
					 type:    flt(64,IEEE)*
					 alias:   "Out1"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


				endgroup -- block-group "delta rise limit"

				group "Difference Inputs1" -- block-group
				{
				 block: "Sum"
				 desc:  "\nAdd in CPU"
				}
					p_0_AutoboxModel_real_T_12[11074]
					{
					 type:    flt(64,IEEE)*
					 alias:   "Out1"
					 flags:   OUTPUT|READONLY
			 addr:    0x002a6270
			}


				endgroup -- block-group "Difference Inputs1"

				group "Difference Inputs2" -- block-group
				{
				 block: "Sum"
				 desc:  "\nAdd in CPU"
				}
					p_0_AutoboxModel_real_T_12[11078]
					{
					 type:    flt(64,IEEE)*
					 alias:   "Out1"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


				endgroup -- block-group "Difference Inputs2"

				group "Delay Input2" -- block-group
				{
				 block: "UnitDelay"
				 desc:  "\nStore in Global RAM"
				}
					p_0_AutoboxModel_real_T_12[11073]
					{
					 type:    flt(64,IEEE)*
					 alias:   "Out1"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
					p_2_AutoboxModel_real_T_0[11]
					{
					 type:    flt(64,IEEE)*
					 alias:   "DiscState"
					 flags: READONLY
 addr:    0x002a62bc
}
					p_1_AutoboxModel_real_T_9[400]
					{
					 type:    flt(64,IEEE)*
					 alias:   "InitialCondition"
					 value:   0.0
					 flags:   PARAM
 addr:    0x002a62b0
}


				endgroup -- block-group "Delay Input2"

				group "FixPt\nData Type\nDuplicate" -- block-group
				{
				 block: "DataTypeDuplicate"
				}
					p_0_AutoboxModel_real_T_12[11078]
					{
					 type:    flt(64,IEEE)*
					 alias:   "In1"
					 flags:   READONLY
 addr:    0x002a6270
}
					p_0_AutoboxModel_real_T_12[11073]
					{
					 type:    flt(64,IEEE)*
					 alias:   "In2"
					 flags:   READONLY
		 addr:    0x002a6270
		}
					p_0_AutoboxModel_real_T_12[11075]
					{
					 type:    flt(64,IEEE)*
					 alias:   "In3"
					 flags:   READONLY
 addr:    0x002a6270
}
					p_0_AutoboxModel_real_T_12[11074]
					{
					 type:    flt(64,IEEE)*
					 alias:   "In4"
					 flags:   READONLY
 addr:    0x002a6270
}
					p_0_AutoboxModel_real_T_12[11169]
					{
					 type:    flt(64,IEEE)*
					 alias:   "In5"
					 flags:   READONLY
 addr:    0x002a6270
}
					p_0_AutoboxModel_real_T_12[11072]
					{
					 type:    flt(64,IEEE)*
					 alias:   "In6"
					 flags:   READONLY
					 addr:    0x002a6270
					}
					p_0_AutoboxModel_real_T_12[11077]
					{
					 type:    flt(64,IEEE)*
					 alias:   "In7"
					 flags:   READONLY
 addr:    0x002a6270
}



				endgroup -- block-group "FixPt\nData Type\nDuplicate"

				group "sample time" -- block-group
				{
				 block: "SampleTimeMath"
				}
					p_0_AutoboxModel_real_T_12[11071]
					{
					 type:    flt(64,IEEE)*
					 alias:   "Out1"
					 flags:   OUTPUT|READONLY
			 addr:    0x002a6270
			}
					p_1_AutoboxModel_real_T_9[399]
					{
					 type:    flt(64,IEEE)*
					 alias:   "WtEt"
					 value:   0.01
					 flags:   PARAM
 addr:    0x002a62b0
}


				endgroup -- block-group "sample time"

  
  
				group "Saturation\nDynamic" -- subsystem-group

					p_0_AutoboxModel_real_T_12[11077]
					{
					 type:    flt(64,IEEE)*
					 alias:   "y"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


					group "up" -- block-group
					{
					 block: "Inport"
					}
						p_0_AutoboxModel_real_T_12[11072]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Out1"
						 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


					endgroup -- block-group "up"

					group "u" -- block-group
					{
					 block: "Inport"
					}
						p_0_AutoboxModel_real_T_12[11074]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Out1"
						 flags:   OUTPUT|READONLY
			 addr:    0x002a6270
			}


					endgroup -- block-group "u"

					group "lo" -- block-group
					{
					 block: "Inport"
					}
						p_0_AutoboxModel_real_T_12[11075]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Out1"
						 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


					endgroup -- block-group "lo"

					group "LowerRelop1" -- block-group
					{
					 block: "RelationalOperator"
					}
						p_0_AutoboxModel_boolean_T_18[13]
						{
						 type:    uint(8)*
						 alias:   "Out1"
						 range:   < 0 ; 1 >
						 bitmask: 0x01
						 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


					endgroup -- block-group "LowerRelop1"

					group "UpperRelop" -- block-group
					{
					 block: "RelationalOperator"
					}
						p_0_AutoboxModel_boolean_T_18[14]
						{
						 type:    uint(8)*
						 alias:   "Out1"
						 range:   < 0 ; 1 >
						 bitmask: 0x01
						 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


					endgroup -- block-group "UpperRelop"

					group "Data Type\nPropagation" -- block-group
					{
					 block: "S-Function"
					}
						p_0_AutoboxModel_real_T_12[11074]
						{
						 type:    flt(64,IEEE)*
						 alias:   "In1"
						 flags:   READONLY
 addr:    0x002a6270
}
						p_0_AutoboxModel_real_T_12[11074]
						{
						 type:    flt(64,IEEE)*
						 alias:   "In2"
						 flags:   READONLY
 addr:    0x002a6270
}
						p_0_AutoboxModel_real_T_12[11076]
						{
						 type:    flt(64,IEEE)*
						 alias:   "In3"
						 flags:   READONLY
 addr:    0x002a6270
}



					endgroup -- block-group "Data Type\nPropagation"

					group "Switch" -- block-group
					{
					 block: "Switch"
					}
						p_0_AutoboxModel_real_T_12[11076]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Out1"
						 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


					endgroup -- block-group "Switch"

					group "Switch2" -- block-group
					{
					 block: "Switch"
					}
						p_0_AutoboxModel_real_T_12[11077]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Out1"
						 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


					endgroup -- block-group "Switch2"

					group "Data Type\nDuplicate" -- block-group
					{
					 block: "DataTypeDuplicate"
					}
						p_0_AutoboxModel_real_T_12[11077]
						{
						 type:    flt(64,IEEE)*
						 alias:   "In1"
						 flags:   READONLY
 addr:    0x002a6270
}
						p_0_AutoboxModel_real_T_12[11076]
						{
						 type:    flt(64,IEEE)*
						 alias:   "In2"
						 flags:   READONLY
 addr:    0x002a6270
}



					endgroup -- block-group "Data Type\nDuplicate"



				endgroup -- subsystem-group "Saturation\nDynamic"

				p_0_AutoboxModel_real_T_12[11073]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Y(k-1)"
				 origin:  "AutoboxModel/AutoboxControl/limit out signals/Rate Limiter\nDynamic/Delay Input2/Out1"
				 flags:   READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_real_T_12[11074]
				{
				 type:    flt(64,IEEE)*
				 alias:   "( U(k) - Y(k-1) )"
				 origin:  "AutoboxModel/AutoboxControl/limit out signals/Rate Limiter\nDynamic/Difference Inputs1/Out1"
				 flags:   READONLY
				 addr:    0x002a6270
				}

			endgroup -- subsystem-group "Rate Limiter\nDynamic"
  
  
			group "Saturation\nDynamic" -- subsystem-group

				p_0_AutoboxModel_real_T_12[11080]
				{
				 type:    flt(64,IEEE)*
				 alias:   "y"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


				group "up" -- block-group
				{
				 block: "Inport"
				}
					-- Skipping output Out1


				endgroup -- block-group "up"

				group "u" -- block-group
				{
				 block: "Inport"
				}
					p_0_AutoboxModel_real_T_12[11078]
					{
					 type:    flt(64,IEEE)*
					 alias:   "Out1"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


				endgroup -- block-group "u"

				group "lo" -- block-group
				{
				 block: "Inport"
				}
					-- Skipping output Out1


				endgroup -- block-group "lo"

				group "LowerRelop1" -- block-group
				{
				 block: "RelationalOperator"
				}
					p_0_AutoboxModel_boolean_T_18[15]
					{
					 type:    uint(8)*
					 alias:   "Out1"
					 range:   < 0 ; 1 >
					 bitmask: 0x01
					 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


				endgroup -- block-group "LowerRelop1"

				group "UpperRelop" -- block-group
				{
				 block: "RelationalOperator"
				}
					p_0_AutoboxModel_boolean_T_18[16]
					{
					 type:    uint(8)*
					 alias:   "Out1"
					 range:   < 0 ; 1 >
					 bitmask: 0x01
					 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


				endgroup -- block-group "UpperRelop"

				group "Data Type\nPropagation" -- block-group
				{
				 block: "S-Function"
				}
					p_0_AutoboxModel_real_T_12[11078]
					{
					 type:    flt(64,IEEE)*
					 alias:   "In1"
					 flags:   READONLY
 addr:    0x002a6270
}
					p_0_AutoboxModel_real_T_12[11078]
					{
					 type:    flt(64,IEEE)*
					 alias:   "In2"
					 flags:   READONLY
 addr:    0x002a6270
}
					p_0_AutoboxModel_real_T_12[11079]
					{
					 type:    flt(64,IEEE)*
					 alias:   "In3"
					 flags:   READONLY
 addr:    0x002a6270
}



				endgroup -- block-group "Data Type\nPropagation"

				group "Switch" -- block-group
				{
				 block: "Switch"
				}
					p_0_AutoboxModel_real_T_12[11079]
					{
					 type:    flt(64,IEEE)*
					 alias:   "Out1"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


				endgroup -- block-group "Switch"

				group "Switch2" -- block-group
				{
				 block: "Switch"
				}
					p_0_AutoboxModel_real_T_12[11080]
					{
					 type:    flt(64,IEEE)*
					 alias:   "Out1"
					 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}


				endgroup -- block-group "Switch2"

				group "Data Type\nDuplicate" -- block-group
				{
				 block: "DataTypeDuplicate"
				}
					p_0_AutoboxModel_real_T_12[11080]
					{
					 type:    flt(64,IEEE)*
					 alias:   "In1"
					 flags:   READONLY
 addr:    0x002a6270
}
					p_0_AutoboxModel_real_T_12[11079]
					{
					 type:    flt(64,IEEE)*
					 alias:   "In2"
					 flags:   READONLY
		 addr:    0x002a6270
		}



				endgroup -- block-group "Data Type\nDuplicate"



			endgroup -- subsystem-group "Saturation\nDynamic"


		endgroup -- subsystem-group "limit out signals"
  
  
		group "steering angle calculation" -- subsystem-group

			p_0_AutoboxModel_real_T_12[11066]
			{
			 type:    flt(64,IEEE)*
			 alias:   "steering_angle"
			 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}


			group "delta_soll" -- block-group
			{
			 block: "Inport"
			}
				p_0_AutoboxModel_real_T_12[11170]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


			endgroup -- block-group "delta_soll"

			group "delta_dot_soll" -- block-group
			{
			 block: "Inport"
			}
				p_0_AutoboxModel_real_T_12[11171]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


			endgroup -- block-group "delta_dot_soll"

			group "reset_steering_integrator" -- block-group
			{
			 block: "Inport"
			}
				-- Skipping output Out1


			endgroup -- block-group "reset_steering_integrator"

			group "current_steering angle" -- block-group
			{
			 block: "Inport"
			}
				p_0_AutoboxModel_real_T_12[11060]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


			endgroup -- block-group "current_steering angle"

			group "directly_use_steering_angle" -- block-group
			{
			 block: "Constant"
			}
				-- Skipping output Out1
				p_1_AutoboxModel_real_T_9[390]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Value"
				 value:   1.0
				 flags:   PARAM
		 addr:    0x002a62b0
		}


			endgroup -- block-group "directly_use_steering_angle"

			group "steering_integrator_reset" -- block-group
			{
			 block: "Constant"
			}
				-- Skipping output Out1
				p_1_AutoboxModel_boolean_T_10[10]
				{
				 type:    uint(8)*
				 alias:   "Value"
				 range:   < 0 ; 1 >
				 bitmask: 0x01
				 value:   0
				 flags:   PARAM
		 addr:    0x002a62b4
		}


			endgroup -- block-group "steering_integrator_reset"

			group "SteeringAngleIntegrator" -- block-group
			{
			 block: "DiscreteIntegrator"
			}
				p_0_AutoboxModel_real_T_12[11065]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_2_AutoboxModel_real_T_0[10]
				{
				 type:    flt(64,IEEE)*
				 alias:   "DiscState"
				 flags: READONLY
 addr:    0x002a62bc
}
				p_1_AutoboxModel_real_T_9[391]
				{
				 type:    flt(64,IEEE)*
				 alias:   "gainval"
				 value:   0.01
				 flags:   PARAM
		 addr:    0x002a62b0
		}


			endgroup -- block-group "SteeringAngleIntegrator"

			group "Logical\nOperator" -- block-group
			{
			 block: "Logic"
			}
				p_0_AutoboxModel_boolean_T_18[12]
				{
				 type:    uint(8)*
				 alias:   "Out1"
				 range:   < 0 ; 1 >
				 bitmask: 0x01
				 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


			endgroup -- block-group "Logical\nOperator"

			group "Switch" -- block-group
			{
			 block: "Switch"
			}
				p_0_AutoboxModel_real_T_12[11066]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_1_AutoboxModel_real_T_9[392]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Threshold"
				 value:   0.0
				 flags:   PARAM
		 addr:    0x002a62b0
		}


			endgroup -- block-group "Switch"



		endgroup -- subsystem-group "steering angle calculation"
  
  
		group "unpack loca" -- subsystem-group

			-- Skipping output <x>
			-- Skipping output <y>
			-- Skipping output <Heading>
			p_0_AutoboxModel_real_T_12[11184]
			{
			 type:    flt(64,IEEE)*
			 alias:   "<v>"
			 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


			group "Localization" -- block-group
			{
			 block: "Inport"
			}
				p_0_AutoboxModel_LocalizationToAutobox_2[0]
				{
				 type:    struct AutoboxModel_LocalizationToAutobox*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
		 addr:    0x002a6248
		}


			endgroup -- block-group "Localization"

			group "Bus\nSelector4" -- block-group
			{
			 block: "BusSelector"
			}
				-- Skipping output Out1
				-- Skipping output Out2
				-- Skipping output Out3
				-- Skipping output Out4
				-- Skipping output Out5


			endgroup -- block-group "Bus\nSelector4"

			group "Math\nFunction" -- block-group
			{
			 block: "Math"
			}
				p_0_AutoboxModel_real_T_12[11182]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}


			endgroup -- block-group "Math\nFunction"

			group "Math\nFunction1" -- block-group
			{
			 block: "Math"
			}
				p_0_AutoboxModel_real_T_12[11181]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


			endgroup -- block-group "Math\nFunction1"

			group "Add1" -- block-group
			{
			 block: "Sum"
			}
				p_0_AutoboxModel_real_T_12[11183]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}


			endgroup -- block-group "Add1"

			group "Sqrt" -- block-group
			{
			 block: "Sqrt"
			}
				p_0_AutoboxModel_real_T_12[11184]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


			endgroup -- block-group "Sqrt"



		endgroup -- subsystem-group "unpack loca"
  
  
		group "ControlAlgorithm" -- subsystem-group

			p_0_AutoboxModel_real_T_12[11169]
			{
			 type:    flt(64,IEEE)*
			 alias:   "w2"
			 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
			p_0_AutoboxModel_real_T_12[11170]
			{
			 type:    flt(64,IEEE)*
			 alias:   "delta_soll"
			 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}
			p_0_AutoboxModel_real_T_12[11171]
			{
			 type:    flt(64,IEEE)*
			 alias:   "delta_dot"
			 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}
			-- Skipping output e_v
			-- Skipping output e_delta
			p_0_AutoboxModel_real_T_12[11172]
			{
			 type:    flt(64,IEEE)*
			 alias:   "e_psi_dot"
			 flags:   OUTPUT|READONLY
			 addr:    0x002a6270
			}
			p_0_AutoboxModel_real_T_12[11173]
			{
			 type:    flt(64,IEEE)*
			 alias:   "e_n_dot"
			 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
			p_0_AutoboxModel_real_T_12[11174]
			{
			 type:    flt(64,IEEE)*
			 alias:   "e_t_dot"
			 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
			p_0_AutoboxModel_real_T_12[11175]
			{
			 type:    flt(64,IEEE)*
			 alias:   "e_psi"
			 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
			p_0_AutoboxModel_real_T_12[11176]
			{
			 type:    flt(64,IEEE)*
			 alias:   "e_n"
			 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}
			p_0_AutoboxModel_real_T_12[11177]
			{
			 type:    flt(64,IEEE)*
			 alias:   "e_t"
			 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}




		endgroup -- subsystem-group "ControlAlgorithm"


	endgroup -- subsystem-group "AutoboxControl"
  
  
	group "CanCommunication" -- subsystem-group

		p_0_AutoboxModel_vehicle_data_can_bus_1[0]
		{
		 type:    struct AutoboxModel_vehicle_data_can_bus*
		 alias:   "VehicleDataCan"
		 flags:   OUTPUT|READONLY
		 addr:    0x002a6244
		}
		p_0_AutoboxModel_customer_can_bus_3[0]
		{
		 type:    struct AutoboxModel_customer_can_bus*
		 alias:   "CustomerCanData"
		 flags:   OUTPUT|READONLY
 addr:    0x002a624c
}


		group "ControlCommands" -- block-group
		{
		 block: "Inport"
		}
			-- Skipping output


		endgroup -- block-group "ControlCommands"

		group "InterfaceCommands" -- block-group
		{
		 block: "Inport"
		}
			p_0_AutoboxModel_InterfaceCommands_11[0]
			{
			 type:    struct AutoboxModel_InterfaceCommands*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
 addr:    0x002a626c
}


		endgroup -- block-group "InterfaceCommands"

  
  
		group "CAN_TYPE1_SETUP_Customer" -- subsystem-group


		endgroup -- subsystem-group "CAN_TYPE1_SETUP_Customer"
  
  
		group "CAN_TYPE1_SETUP_VehicleData" -- subsystem-group


		endgroup -- subsystem-group "CAN_TYPE1_SETUP_VehicleData"
  
  
		group "CustomerCAN" -- subsystem-group

			p_0_AutoboxModel_customer_can_bus_3[0]
			{
			 type:    struct AutoboxModel_customer_can_bus*
			 alias:   "CustomerCanData"
			 flags:   OUTPUT|READONLY
 addr:    0x002a624c
}


			group "ControlCommands" -- block-group
			{
			 block: "Inport"
			}
				-- Skipping output


			endgroup -- block-group "ControlCommands"

			group "InteraceCommands" -- block-group
			{
			 block: "Inport"
			}
				p_0_AutoboxModel_InterfaceCommands_11[0]
				{
				 type:    struct AutoboxModel_InterfaceCommands*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
			 addr:    0x002a626c
			}


			endgroup -- block-group "InteraceCommands"

			group "VehicleDataCan" -- block-group
			{
			 block: "Inport"
			}
				p_0_AutoboxModel_vehicle_data_can_bus_1[0]
				{
				 type:    struct AutoboxModel_vehicle_data_can_bus*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6244
}


			endgroup -- block-group "VehicleDataCan"

			group "Bus\nAssignment" -- block-group
			{
			 block: "BusAssignment"
			}
				p_0_AutoboxModel_customer_can_bus_3[0]
				{
				 type:    struct AutoboxModel_customer_can_bus*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
		 addr:    0x002a624c
		}


			endgroup -- block-group "Bus\nAssignment"

			group "Bus\nSelector" -- block-group
			{
			 block: "BusSelector"
			}
				p_0_AutoboxModel_real_T_12[11069]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_real_T_12[11082]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out2"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_boolean_T_18[11]
				{
				 type:    uint(8)*
				 alias:   "Out3"
				 range:   < 0 ; 1 >
				 bitmask: 0x01
				 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


			endgroup -- block-group "Bus\nSelector"

			group "Constant" -- block-group
			{
			 block: "Constant"
			}
				-- Skipping output Out1
				trcref0_default_customer_can_bus
				{
				 refgroup: "/Tunable Parameters"
				 refvar:   "default_customer_can_bus"
				 alias:    "default_customer_can_bus"
}
				trcref0_Value
				{
				 refgroup: "/Tunable Parameters"
				 refvar:   "default_customer_can_bus"
				 alias:    "Value"
				 flags:    DEPRECATED|HIDDEN
}


			endgroup -- block-group "Constant"

  
  
			group "AccInterface" -- subsystem-group



				group "<acceleration>" -- block-group
				{
				 block: "Inport"
				}
					p_0_AutoboxModel_real_T_12[11082]
					{
					 type:    flt(64,IEEE)*
					 alias:   "Out1"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


				endgroup -- block-group "<acceleration>"

				group "InterfaceCommands" -- block-group
				{
				 block: "Inport"
				}
					p_0_AutoboxModel_InterfaceCommands_11[0]
					{
					 type:    struct AutoboxModel_InterfaceCommands*
					 alias:   "Out1"
					 flags:   OUTPUT|READONLY
 addr:    0x002a626c
}


				endgroup -- block-group "InterfaceCommands"

				group "VehicleDataCan" -- block-group
				{
				 block: "Inport"
				}
					p_0_AutoboxModel_vehicle_data_can_bus_1[0]
					{
					 type:    struct AutoboxModel_vehicle_data_can_bus*
					 alias:   "Out1"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6244
}


				endgroup -- block-group "VehicleDataCan"

				group "controller_active" -- block-group
				{
				 block: "Inport"
				}
					p_0_AutoboxModel_boolean_T_18[11]
					{
					 type:    uint(8)*
					 alias:   "Out1"
					 range:   < 0 ; 1 >
					 bitmask: 0x01
					 flags:   OUTPUT|READONLY
		 addr:    0x002a6288
		}


				endgroup -- block-group "controller_active"

				group "Bus\nCreator2" -- block-group
				{
				 block: "BusCreator"
				}
					-- Skipping output


				endgroup -- block-group "Bus\nCreator2"

				group "Bus\nCreator3" -- block-group
				{
				 block: "BusCreator"
				}
					-- Skipping output


				endgroup -- block-group "Bus\nCreator3"

				group "Bus\nSelector1" -- block-group
				{
				 block: "BusSelector"
				}
					-- Skipping output Out1
					-- Skipping output Out2
					-- Skipping output Out3


				endgroup -- block-group "Bus\nSelector1"

				group "Bus\nSelector4" -- block-group
				{
				 block: "BusSelector"
				}
					p_0_AutoboxModel_boolean_T_18[36]
					{
					 type:    uint(8)*
					 alias:   "Out1"
					 range:   < 0 ; 1 >
					 bitmask: 0x01
					 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}
					p_0_AutoboxModel_boolean_T_18[37]
					{
					 type:    uint(8)*
					 alias:   "Out2"
					 range:   < 0 ; 1 >
					 bitmask: 0x01
					 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}
					p_0_AutoboxModel_boolean_T_18[38]
					{
					 type:    uint(8)*
					 alias:   "Out3"
					 range:   < 0 ; 1 >
					 bitmask: 0x01
					 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


				endgroup -- block-group "Bus\nSelector4"

				group "Constant1" -- block-group
				{
				 block: "Constant"
				}
					-- Skipping output Out1
					p_1_AutoboxModel_real_T_9[2]
					{
					 type:    flt(64,IEEE)*
					 alias:   "Value"
					 value:   0.0
					 flags:   PARAM
 addr:    0x002a62b0
}


				endgroup -- block-group "Constant1"

				group "SwitchAIActivation1" -- block-group
				{
				 block: "Constant"
				}
					-- Skipping output Out1
					p_1_AutoboxModel_real_T_9[405]
					{
					 type:    flt(64,IEEE)*
					 alias:   "Value"
					 value:   0.0
					 flags:   PARAM
 addr:    0x002a62b0
}


				endgroup -- block-group "SwitchAIActivation1"

				group "SwitchAIAngle1" -- block-group
				{
				 block: "Constant"
				}
					-- Skipping output Out1
					p_1_AutoboxModel_real_T_9[410]
					{
					 type:    flt(64,IEEE)*
					 alias:   "Value"
					 value:   3.0
					 flags:   PARAM
 addr:    0x002a62b0
}


				endgroup -- block-group "SwitchAIAngle1"

				group "set_activation_request_acc" -- block-group
				{
				 block: "Constant"
				}
					-- Skipping output Out1
					p_1_AutoboxModel_boolean_T_10[1]
					{
					 type:    uint(8)*
					 alias:   "Value"
					 range:   < 0 ; 1 >
					 bitmask: 0x01
					 value:   0
					 flags:   PARAM
 addr:    0x002a62b4
}


				endgroup -- block-group "set_activation_request_acc"

				group "set_cancel_request_acc" -- block-group
				{
				 block: "Constant"
				}
					-- Skipping output Out1
					p_1_AutoboxModel_boolean_T_10[0]
					{
					 type:    uint(8)*
					 alias:   "Value"
					 range:   < 0 ; 1 >
					 bitmask: 0x01
					 value:   0
					 flags:   PARAM
 addr:    0x002a62b4
}


				endgroup -- block-group "set_cancel_request_acc"

				group "set_clearance_acc" -- block-group
				{
				 block: "Constant"
				}
					-- Skipping output Out1
					p_1_AutoboxModel_boolean_T_10[2]
					{
					 type:    uint(8)*
					 alias:   "Value"
					 range:   < 0 ; 1 >
					 bitmask: 0x01
					 value:   0
					 flags:   PARAM
 addr:    0x002a62b4
}


				endgroup -- block-group "set_clearance_acc"

				group "set_request_acc" -- block-group
				{
				 block: "Constant"
				}
					-- Skipping output Out1
					p_1_AutoboxModel_real_T_9[3]
					{
					 type:    flt(64,IEEE)*
					 alias:   "Value"
					 value:   0.0
					 flags:   PARAM
 addr:    0x002a62b0
}


				endgroup -- block-group "set_request_acc"

				group "Multiport\nSwitch1" -- block-group
				{
				 block: "MultiPortSwitch"
				}
					p_0_AutoboxModel_real_T_12[11098]
					{
					 type:    flt(64,IEEE)*
					 alias:   "Out1"
					 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}


				endgroup -- block-group "Multiport\nSwitch1"

				group "Switch1" -- block-group
				{
				 block: "Switch"
				}
					-- Skipping output


				endgroup -- block-group "Switch1"

				group "Switch2" -- block-group
				{
				 block: "Switch"
				}
					p_0_AutoboxModel_real_T_12[11093]
					{
					 type:    flt(64,IEEE)*
					 alias:   "Out1"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


				endgroup -- block-group "Switch2"

  
  
				group "AccelerationInterface" -- subsystem-group



					group "clearance" -- block-group
					{
					 block: "Inport"
					}
						p_0_AutoboxModel_boolean_T_18[36]
						{
						 type:    uint(8)*
						 alias:   "Out1"
						 range:   < 0 ; 1 >
						 bitmask: 0x01
						 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


					endgroup -- block-group "clearance"

					group "activation_request" -- block-group
					{
					 block: "Inport"
					}
						p_0_AutoboxModel_boolean_T_18[37]
						{
						 type:    uint(8)*
						 alias:   "Out1"
						 range:   < 0 ; 1 >
						 bitmask: 0x01
						 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


					endgroup -- block-group "activation_request"

					group "cancel_request" -- block-group
					{
					 block: "Inport"
					}
						p_0_AutoboxModel_boolean_T_18[38]
						{
						 type:    uint(8)*
						 alias:   "Out1"
						 range:   < 0 ; 1 >
						 bitmask: 0x01
						 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


					endgroup -- block-group "cancel_request"

					group "acceleration_request" -- block-group
					{
					 block: "Inport"
					}
						p_0_AutoboxModel_real_T_12[11098]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Out1"
						 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}


					endgroup -- block-group "acceleration_request"

					group "acc request can offset1" -- block-group
					{
					 block: "Constant"
					}
						-- Skipping output Out1
						p_1_AutoboxModel_real_T_9[415]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Value"
						 value:   1444.0
						 flags:   PARAM
		 addr:    0x002a62b0
		}


					endgroup -- block-group "acc request can offset1"

					group "acc request can offset2" -- block-group
					{
					 block: "Constant"
					}
						-- Skipping output Out1
						p_1_AutoboxModel_real_T_9[409]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Value"
						 value:   1444.0
						 flags:   PARAM
 addr:    0x002a62b0
}


					endgroup -- block-group "acc request can offset2"

					group "Data Type Conversion" -- block-group
					{
					 block: "DataTypeConversion"
					}
						p_0_AutoboxModel_real_T_12[11102]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Out1"
						 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


					endgroup -- block-group "Data Type Conversion"

					group "Data Type Conversion1" -- block-group
					{
					 block: "DataTypeConversion"
					}
						p_0_AutoboxModel_int16_T_16[0]
						{
						 type:    int(16)*
						 alias:   "Out1"
						 flags:   OUTPUT|READONLY
		 addr:    0x002a6280
		}


					endgroup -- block-group "Data Type Conversion1"

					group "acc request can factor1" -- block-group
					{
					 block: "Gain"
					}
						p_0_AutoboxModel_real_T_12[11104]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Out1"
						 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
						p_1_AutoboxModel_real_T_9[416]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Gain"
						 value:   0.005
						 flags:   PARAM
 addr:    0x002a62b0
}


					endgroup -- block-group "acc request can factor1"

					group "acc request can factor2" -- block-group
					{
					 block: "Gain"
					}
						p_0_AutoboxModel_real_T_12[11099]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Out1"
						 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
						p_1_AutoboxModel_real_T_9[413]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Gain"
						 value:   200.0
						 flags:   PARAM
 addr:    0x002a62b0
}


					endgroup -- block-group "acc request can factor2"

					group "stop dist request can factor" -- block-group
					{
					 block: "Gain"
					}
						p_0_AutoboxModel_real_T_12[11101]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Out1"
						 flags:   OUTPUT|READONLY
				 addr:    0x002a6270
				}
						p_1_AutoboxModel_real_T_9[414]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Gain"
						 value:   100.0
						 flags:   PARAM
 addr:    0x002a62b0
}


					endgroup -- block-group "stop dist request can factor"

					group "Ground" -- block-group
					{
					 block: "Ground"
					}
						-- Skipping output Out1


					endgroup -- block-group "Ground"

					group "Ground1" -- block-group
					{
					 block: "Ground"
					}
						-- Skipping output Out1


					endgroup -- block-group "Ground1"

					group "Ground2" -- block-group
					{
					 block: "Ground"
					}
						-- Skipping output Out1


					endgroup -- block-group "Ground2"

					group "Ground3" -- block-group
					{
					 block: "Ground"
					}
						-- Skipping output Out1


					endgroup -- block-group "Ground3"

					group "Add1" -- block-group
					{
					 block: "Sum"
					}
						p_0_AutoboxModel_real_T_12[11103]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Out1"
						 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


					endgroup -- block-group "Add1"

					group "Add3" -- block-group
					{
					 block: "Sum"
					}
						p_0_AutoboxModel_real_T_12[11100]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Out1"
						 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


					endgroup -- block-group "Add3"

  
  
					group "Acceleration_Interface" -- subsystem-group

						p_0_AutoboxModel_real_T_12[11105]
						{
						 type:    flt(64,IEEE)*
						 alias:   "TX status"
						 flags:   OUTPUT|READONLY
			 addr:    0x002a6270
			}

					endgroup -- subsystem-group "Acceleration_Interface"
  
  
					group "Counter\nLimited" -- subsystem-group

						p_0_AutoboxModel_uint8_T_17[3640]
						{
						 type:    uint(8)*
						 alias:   "y"
						 flags:   OUTPUT|READONLY
 addr:    0x002a6284
}

						p_1_AutoboxModel_uint8_T_8[0]
						{
						 type:    uint(8)*
						 alias:   "uplimit"
						 value:   15
						 flags:   PARAM
 addr:    0x002a62ac
}

						group "Data Type\nPropagation" -- block-group
						{
						 block: "S-Function"
						}
							p_0_AutoboxModel_uint8_T_17[3642]
							{
							 type:    uint(8)*
							 alias:   "In1"
							 flags:   READONLY
 addr:    0x002a6284
}
							p_0_AutoboxModel_uint8_T_17[3642]
							{
							 type:    uint(8)*
							 alias:   "In2"
							 flags:   READONLY
 addr:    0x002a6284
}
							p_0_AutoboxModel_uint8_T_17[3642]
							{
							 type:    uint(8)*
							 alias:   "In3"
							 flags:   READONLY
 addr:    0x002a6284
}



						endgroup -- block-group "Data Type\nPropagation"

						group "Force to be scalar" -- block-group
						{
						 block: "SignalSpecification"
						}
							p_0_AutoboxModel_uint8_T_17[3640]
							{
							 type:    uint(8)*
							 alias:   "Out1"
							 flags:   OUTPUT|READONLY
 addr:    0x002a6284
}


						endgroup -- block-group "Force to be scalar"

						group "Output" -- block-group
						{
						 block: "UnitDelay"
						}
							p_0_AutoboxModel_uint8_T_17[3640]
							{
							 type:    uint(8)*
							 alias:   "Out1"
							 flags:   OUTPUT|READONLY
 addr:    0x002a6284
}
							p_2_AutoboxModel_uint8_T_3[0]
							{
							 type:    uint(8)*
							 alias:   "DiscState"
							 flags: READONLY
 addr:    0x002a62c4
}
							p_1_AutoboxModel_uint8_T_11[1]
							{
							 type:    uint(8)*
							 alias:   "InitialCondition"
							 value:   0
							 flags:   PARAM
 addr:    0x002a62b8
}


						endgroup -- block-group "Output"

  
  
						group "Increment\nReal World" -- subsystem-group

							p_0_AutoboxModel_uint8_T_17[3641]
							{
							 type:    uint(8)*
							 alias:   "y"
							 flags:   OUTPUT|READONLY
 addr:    0x002a6284
}


							group "u" -- block-group
							{
							 block: "Inport"
							}
								p_0_AutoboxModel_uint8_T_17[3640]
								{
								 type:    uint(8)*
								 alias:   "Out1"
								 flags:   OUTPUT|READONLY
 addr:    0x002a6284
}


							endgroup -- block-group "u"

							group "FixPt\nConstant" -- block-group
							{
							 block: "Constant"
							}
								-- Skipping output Out1
								p_1_AutoboxModel_uint8_T_11[2]
								{
								 type:    uint(8)*
								 alias:   "Value"
								 value:   1
								 flags:   PARAM
 addr:    0x002a62b8
}


							endgroup -- block-group "FixPt\nConstant"

							group "FixPt\nSum1" -- block-group
							{
							 block: "Sum"
							}
								p_0_AutoboxModel_uint8_T_17[3641]
								{
								 type:    uint(8)*
								 alias:   "Out1"
								 flags:   OUTPUT|READONLY
 addr:    0x002a6284
}


							endgroup -- block-group "FixPt\nSum1"

							group "FixPt\nData Type\nDuplicate" -- block-group
							{
							 block: "DataTypeDuplicate"
							}
								p_0_AutoboxModel_uint8_T_17[3641]
								{
								 type:    uint(8)*
								 alias:   "In1"
								 flags:   READONLY
 addr:    0x002a6284
}
								p_0_AutoboxModel_uint8_T_17[3640]
								{
								 type:    uint(8)*
								 alias:   "In2"
								 flags:   READONLY
 addr:    0x002a6284
}

								-- Skipping inport In3




							endgroup -- block-group "FixPt\nData Type\nDuplicate"



						endgroup -- subsystem-group "Increment\nReal World"
  
  
						group "Wrap To Zero" -- subsystem-group

							p_0_AutoboxModel_uint8_T_17[3642]
							{
							 type:    uint(8)*
							 alias:   "Y"
							 flags:   OUTPUT|READONLY
 addr:    0x002a6284
}

							trcref0_uplimit
							{
							 refgroup: ".."
							 refvar:   "uplimit"
							 alias:    "uplimit"
}
							-- Skipping parameter "uplimit"

							group "U" -- block-group
							{
							 block: "Inport"
							}
								p_0_AutoboxModel_uint8_T_17[3641]
								{
								 type:    uint(8)*
								 alias:   "Out1"
								 flags:   OUTPUT|READONLY
 addr:    0x002a6284
}


							endgroup -- block-group "U"

							group "Constant" -- block-group
							{
							 block: "Constant"
							}
								-- Skipping output Out1
								p_1_AutoboxModel_uint8_T_11[3]
								{
								 type:    uint(8)*
								 alias:   "Value"
								 value:   0
								 flags:   PARAM
 addr:    0x002a62b8
}


							endgroup -- block-group "Constant"

							group "FixPt\nSwitch" -- block-group
							{
							 block: "Switch"
							}
								p_0_AutoboxModel_uint8_T_17[3642]
								{
								 type:    uint(8)*
								 alias:   "Out1"
								 flags:   OUTPUT|READONLY
 addr:    0x002a6284
}
								trcref0_uplimit
								{
								 refgroup: "../.."
								 refvar:   "uplimit"
								 alias:    "uplimit"
}
								trcref0_Threshold
								{
								 refgroup: "../.."
								 refvar:   "uplimit"
								 alias:    "Threshold"
								 flags:    DEPRECATED|HIDDEN
}


							endgroup -- block-group "FixPt\nSwitch"

							group "FixPt\nData Type\nDuplicate1" -- block-group
							{
							 block: "DataTypeDuplicate"
							}
								p_0_AutoboxModel_uint8_T_17[3642]
								{
								 type:    uint(8)*
								 alias:   "In1"
								 flags:   READONLY
 addr:    0x002a6284
}
								p_0_AutoboxModel_uint8_T_17[3641]
								{
								 type:    uint(8)*
								 alias:   "In2"
								 flags:   READONLY
 addr:    0x002a6284
}

								-- Skipping inport In3




							endgroup -- block-group "FixPt\nData Type\nDuplicate1"



						endgroup -- subsystem-group "Wrap To Zero"


					endgroup -- subsystem-group "Counter\nLimited"
  
  
					group "Acceleration_CRC_Calculator" -- subsystem-group

						p_0_AutoboxModel_uint8_T_17[3650]
						{
						 type:    uint(8)*
						 alias:   "byte0"
						 flags:   OUTPUT|READONLY
 addr:    0x002a6284
}




					endgroup -- subsystem-group "Acceleration_CRC_Calculator"


				endgroup -- subsystem-group "AccelerationInterface"
  
  
				group "limit acceleration" -- subsystem-group

					p_0_AutoboxModel_real_T_12[11097]
					{
					 type:    flt(64,IEEE)*
					 alias:   "limited acceleration"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


					group "acceleration" -- block-group
					{
					 block: "Inport"
					}
						p_0_AutoboxModel_real_T_12[11093]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Out1"
						 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


					endgroup -- block-group "acceleration"

					group "VehicleDataCan" -- block-group
					{
					 block: "Inport"
					}
						p_0_AutoboxModel_vehicle_data_can_bus_1[0]
						{
						 type:    struct AutoboxModel_vehicle_data_can_bus*
						 alias:   "Out1"
						 flags:   OUTPUT|READONLY
		 addr:    0x002a6244
		}


					endgroup -- block-group "VehicleDataCan"

					group "Bus\nSelector4" -- block-group
					{
					 block: "BusSelector"
					}
						-- Skipping output Out1


					endgroup -- block-group "Bus\nSelector4"

					group "Constant1" -- block-group
					{
					 block: "Constant"
					}
						-- Skipping output Out1
						p_1_AutoboxModel_real_T_9[7]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Value"
						 value:   -3.5
						 flags:   PARAM
 addr:    0x002a62b0
}


					endgroup -- block-group "Constant1"

					group "Constant2" -- block-group
					{
					 block: "Constant"
					}
						-- Skipping output Out1
						p_1_AutoboxModel_real_T_9[6]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Value"
						 value:   -4.5
						 flags:   PARAM
 addr:    0x002a62b0
}


					endgroup -- block-group "Constant2"

					group "Constant3" -- block-group
					{
					 block: "Constant"
					}
						-- Skipping output Out1
						p_1_AutoboxModel_real_T_9[5]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Value"
						 value:   2.0
						 flags:   PARAM
 addr:    0x002a62b0
}


					endgroup -- block-group "Constant3"

					group "Constant4" -- block-group
					{
					 block: "Constant"
					}
						-- Skipping output Out1
						p_1_AutoboxModel_real_T_9[4]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Value"
						 value:   2.5
						 flags:   PARAM
		 addr:    0x002a62b0
		}


					endgroup -- block-group "Constant4"

					group "Switch1" -- block-group
					{
					 block: "Switch"
					}
						p_0_AutoboxModel_real_T_12[11095]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Out1"
						 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}
						p_1_AutoboxModel_real_T_9[412]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Threshold"
						 value:   36.0
						 flags:   PARAM
 addr:    0x002a62b0
}


					endgroup -- block-group "Switch1"

					group "Switch2" -- block-group
					{
					 block: "Switch"
					}
						p_0_AutoboxModel_real_T_12[11094]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Out1"
						 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}
						p_1_AutoboxModel_real_T_9[411]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Threshold"
						 value:   30.0
						 flags:   PARAM
 addr:    0x002a62b0
}


					endgroup -- block-group "Switch2"

  
  
					group "Saturation\nDynamic" -- subsystem-group

						p_0_AutoboxModel_real_T_12[11097]
						{
						 type:    flt(64,IEEE)*
						 alias:   "y"
						 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


						group "up" -- block-group
						{
						 block: "Inport"
						}
							p_0_AutoboxModel_real_T_12[11094]
							{
							 type:    flt(64,IEEE)*
							 alias:   "Out1"
							 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


						endgroup -- block-group "up"

						group "u" -- block-group
						{
						 block: "Inport"
						}
							p_0_AutoboxModel_real_T_12[11093]
							{
							 type:    flt(64,IEEE)*
							 alias:   "Out1"
							 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


						endgroup -- block-group "u"

						group "lo" -- block-group
						{
						 block: "Inport"
						}
							p_0_AutoboxModel_real_T_12[11095]
							{
							 type:    flt(64,IEEE)*
							 alias:   "Out1"
							 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


						endgroup -- block-group "lo"

						group "LowerRelop1" -- block-group
						{
						 block: "RelationalOperator"
						}
							p_0_AutoboxModel_boolean_T_18[39]
							{
							 type:    uint(8)*
							 alias:   "Out1"
							 range:   < 0 ; 1 >
							 bitmask: 0x01
							 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


						endgroup -- block-group "LowerRelop1"

						group "UpperRelop" -- block-group
						{
						 block: "RelationalOperator"
						}
							p_0_AutoboxModel_boolean_T_18[40]
							{
							 type:    uint(8)*
							 alias:   "Out1"
							 range:   < 0 ; 1 >
							 bitmask: 0x01
							 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


						endgroup -- block-group "UpperRelop"

						group "Data Type\nPropagation" -- block-group
						{
						 block: "S-Function"
						}
							p_0_AutoboxModel_real_T_12[11093]
							{
							 type:    flt(64,IEEE)*
							 alias:   "In1"
							 flags:   READONLY
 addr:    0x002a6270
}
							p_0_AutoboxModel_real_T_12[11093]
							{
							 type:    flt(64,IEEE)*
							 alias:   "In2"
							 flags:   READONLY
 addr:    0x002a6270
}
							p_0_AutoboxModel_real_T_12[11096]
							{
							 type:    flt(64,IEEE)*
							 alias:   "In3"
							 flags:   READONLY
 addr:    0x002a6270
}



						endgroup -- block-group "Data Type\nPropagation"

						group "Switch" -- block-group
						{
						 block: "Switch"
						}
							p_0_AutoboxModel_real_T_12[11096]
							{
							 type:    flt(64,IEEE)*
							 alias:   "Out1"
							 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


						endgroup -- block-group "Switch"

						group "Switch2" -- block-group
						{
						 block: "Switch"
						}
							p_0_AutoboxModel_real_T_12[11097]
							{
							 type:    flt(64,IEEE)*
							 alias:   "Out1"
							 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


						endgroup -- block-group "Switch2"

						group "Data Type\nDuplicate" -- block-group
						{
						 block: "DataTypeDuplicate"
						}
							p_0_AutoboxModel_real_T_12[11097]
							{
							 type:    flt(64,IEEE)*
							 alias:   "In1"
							 flags:   READONLY
 addr:    0x002a6270
}
							p_0_AutoboxModel_real_T_12[11096]
							{
							 type:    flt(64,IEEE)*
							 alias:   "In2"
							 flags:   READONLY
 addr:    0x002a6270
}



						endgroup -- block-group "Data Type\nDuplicate"



					endgroup -- subsystem-group "Saturation\nDynamic"

					p_0_AutoboxModel_real_T_12[11093]
					{
					 type:    flt(64,IEEE)*
					 alias:   "<>"
					 origin:  "AutoboxModel/CanCommunication/CustomerCAN/AccInterface/limit acceleration/acceleration/Out1"
					 flags:   READONLY
		 addr:    0x002a6270
		}

				endgroup -- subsystem-group "limit acceleration"

				-- Skipping label "Activation"

				-- Skipping label "Cancel"

				-- Skipping label "Clearance"

				p_0_AutoboxModel_real_T_12[11082]
				{
				 type:    flt(64,IEEE)*
				 alias:   "<acceleration>"
				 origin:  "AutoboxModel/CanCommunication/CustomerCAN/AccInterface/<acceleration>/Out1"
				 flags:   READONLY
 addr:    0x002a6270
}

			endgroup -- subsystem-group "AccInterface"
  
  
			group "GatewayStatesMessage" -- subsystem-group

				p_0_AutoboxModel_Gateway_States_10[0]
				{
				 type:    struct AutoboxModel_Gateway_States*
				 alias:   "GatewayStatesMessage"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6268
}
				p_0_AutoboxModel_real_T_12[11084]
				{
				 type:    flt(64,IEEE)*
				 alias:   "status"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_real_T_12[11085]
				{
				 type:    flt(64,IEEE)*
				 alias:   "t"
				 flags:   OUTPUT|READONLY
			 addr:    0x002a6270
			}
				p_0_AutoboxModel_real_T_12[11086]
				{
				 type:    flt(64,IEEE)*
				 alias:   "deltat"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


				group "Bus\nCreator" -- block-group
				{
				 block: "BusCreator"
				}
					p_0_AutoboxModel_Gateway_States_10[0]
					{
					 type:    struct AutoboxModel_Gateway_States*
					 alias:   "Out1"
					 flags:   OUTPUT|READONLY
		 addr:    0x002a6268
		}


				endgroup -- block-group "Bus\nCreator"

  
  
				group "Gateway_States" -- subsystem-group

					p_0_AutoboxModel_uint8_T_17[3628]
					{
					 type:    uint(8)*
					 alias:   "CRC"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6284
}
					p_0_AutoboxModel_uint8_T_17[3629]
					{
					 type:    uint(8)*
					 alias:   "Counter"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6284
}
					p_0_AutoboxModel_uint8_T_17[3630]
					{
					 type:    uint(8)*
					 alias:   "GWState"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6284
}
					p_0_AutoboxModel_uint8_T_17[3631]
					{
					 type:    uint(8)*
					 alias:   "AIState"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6284
}
					p_0_AutoboxModel_uint8_T_17[3632]
					{
					 type:    uint(8)*
					 alias:   "EBIState"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6284
}
					p_0_AutoboxModel_uint8_T_17[3633]
					{
					 type:    uint(8)*
					 alias:   "GIState"
					 flags:   OUTPUT|READONLY
		 addr:    0x002a6284
		}
					p_0_AutoboxModel_uint8_T_17[3634]
					{
					 type:    uint(8)*
					 alias:   "SIState"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6284
}
					p_0_AutoboxModel_uint8_T_17[3635]
					{
					 type:    uint(8)*
					 alias:   "VIState"
					 flags:   OUTPUT|READONLY
		 addr:    0x002a6284
		}
					p_0_AutoboxModel_uint8_T_17[3636]
					{
					 type:    uint(8)*
					 alias:   "PDIState"
					 flags:   OUTPUT|READONLY
		 addr:    0x002a6284
		}
					p_0_AutoboxModel_boolean_T_18[17]
					{
					 type:    uint(8)*
					 alias:   "GatewayClearanceAI"
					 range:   < 0 ; 1 >
					 bitmask: 0x01
					 flags:   OUTPUT|READONLY
		 addr:    0x002a6288
		}
					p_0_AutoboxModel_boolean_T_18[18]
					{
					 type:    uint(8)*
					 alias:   "GatewayClearanceSI"
					 range:   < 0 ; 1 >
					 bitmask: 0x01
					 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}
					p_0_AutoboxModel_boolean_T_18[19]
					{
					 type:    uint(8)*
					 alias:   "GatewayClearanceEBI"
					 range:   < 0 ; 1 >
					 bitmask: 0x01
					 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}
					p_0_AutoboxModel_uint8_T_17[3637]
					{
					 type:    uint(8)*
					 alias:   "LimitationsReceivedSI"
					 flags:   OUTPUT|READONLY
			 addr:    0x002a6284
			}
					p_0_AutoboxModel_boolean_T_18[20]
					{
					 type:    uint(8)*
					 alias:   "AngleLimitationSI"
					 range:   < 0 ; 1 >
					 bitmask: 0x01
					 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}
					p_0_AutoboxModel_boolean_T_18[21]
					{
					 type:    uint(8)*
					 alias:   "AngleGradientLimitationSI"
					 range:   < 0 ; 1 >
					 bitmask: 0x01
					 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}
					p_0_AutoboxModel_boolean_T_18[22]
					{
					 type:    uint(8)*
					 alias:   "AngleDeviationLimitationSI"
					 range:   < 0 ; 1 >
					 bitmask: 0x01
					 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}
					p_0_AutoboxModel_uint8_T_17[3638]
					{
					 type:    uint(8)*
					 alias:   "THIState"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6284
}
					p_0_AutoboxModel_boolean_T_18[23]
					{
					 type:    uint(8)*
					 alias:   "AngleLimitationStatus"
					 range:   < 0 ; 1 >
					 bitmask: 0x01
					 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}
					p_0_AutoboxModel_boolean_T_18[24]
					{
					 type:    uint(8)*
					 alias:   "MsgTimeoutDisplay"
					 range:   < 0 ; 1 >
					 bitmask: 0x01
					 flags:   OUTPUT|READONLY
		 addr:    0x002a6288
		}
					p_0_AutoboxModel_boolean_T_18[25]
					{
					 type:    uint(8)*
					 alias:   "MsgTimeoutPwrMgnt"
					 range:   < 0 ; 1 >
					 bitmask: 0x01
					 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}
					p_0_AutoboxModel_real_T_12[11084]
					{
					 type:    flt(64,IEEE)*
					 alias:   "RX status"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
					p_0_AutoboxModel_real_T_12[11085]
					{
					 type:    flt(64,IEEE)*
					 alias:   "RX time"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
					p_0_AutoboxModel_real_T_12[11086]
					{
					 type:    flt(64,IEEE)*
					 alias:   "RX delta time"
					 flags:   OUTPUT|READONLY
				 addr:    0x002a6270
				}

				endgroup -- subsystem-group "Gateway_States"

				p_0_AutoboxModel_uint8_T_17[3631]
				{
				 type:    uint(8)*
				 alias:   "AIState"
				 origin:  "AutoboxModel/CanCommunication/CustomerCAN/GatewayStatesMessage/Gateway_States/AIState"
				 flags:   READONLY
 addr:    0x002a6284
}
				p_0_AutoboxModel_boolean_T_18[22]
				{
				 type:    uint(8)*
				 alias:   "AngleDeviationLimitationSI"
				 bitmask: 0x01
				 range:   < 0 ; 1 >
				 origin:  "AutoboxModel/CanCommunication/CustomerCAN/GatewayStatesMessage/Gateway_States/AngleDeviationLimitationSI"
				 flags:   READONLY
			 addr:    0x002a6288
			}
				p_0_AutoboxModel_boolean_T_18[21]
				{
				 type:    uint(8)*
				 alias:   "AngleGradientLimitationSI"
				 bitmask: 0x01
				 range:   < 0 ; 1 >
				 origin:  "AutoboxModel/CanCommunication/CustomerCAN/GatewayStatesMessage/Gateway_States/AngleGradientLimitationSI"
				 flags:   READONLY
 addr:    0x002a6288
}
				p_0_AutoboxModel_boolean_T_18[20]
				{
				 type:    uint(8)*
				 alias:   "AngleLimitationSI"
				 bitmask: 0x01
				 range:   < 0 ; 1 >
				 origin:  "AutoboxModel/CanCommunication/CustomerCAN/GatewayStatesMessage/Gateway_States/AngleLimitationSI"
				 flags:   READONLY
 addr:    0x002a6288
}
				p_0_AutoboxModel_boolean_T_18[23]
				{
				 type:    uint(8)*
				 alias:   "AngleLimitationStatus"
				 bitmask: 0x01
				 range:   < 0 ; 1 >
				 origin:  "AutoboxModel/CanCommunication/CustomerCAN/GatewayStatesMessage/Gateway_States/AngleLimitationStatus"
				 flags:   READONLY
 addr:    0x002a6288
}
				p_0_AutoboxModel_uint8_T_17[3628]
				{
				 type:    uint(8)*
				 alias:   "CRC"
				 origin:  "AutoboxModel/CanCommunication/CustomerCAN/GatewayStatesMessage/Gateway_States/CRC"
				 flags:   READONLY
			 addr:    0x002a6284
			}
				p_0_AutoboxModel_uint8_T_17[3629]
				{
				 type:    uint(8)*
				 alias:   "Counter"
				 origin:  "AutoboxModel/CanCommunication/CustomerCAN/GatewayStatesMessage/Gateway_States/Counter"
				 flags:   READONLY
 addr:    0x002a6284
}
				p_0_AutoboxModel_uint8_T_17[3632]
				{
				 type:    uint(8)*
				 alias:   "EBIState"
				 origin:  "AutoboxModel/CanCommunication/CustomerCAN/GatewayStatesMessage/Gateway_States/EBIState"
				 flags:   READONLY
 addr:    0x002a6284
}
				p_0_AutoboxModel_uint8_T_17[3633]
				{
				 type:    uint(8)*
				 alias:   "GIState"
				 origin:  "AutoboxModel/CanCommunication/CustomerCAN/GatewayStatesMessage/Gateway_States/GIState"
				 flags:   READONLY
 addr:    0x002a6284
}
				p_0_AutoboxModel_uint8_T_17[3630]
				{
				 type:    uint(8)*
				 alias:   "GWState"
				 origin:  "AutoboxModel/CanCommunication/CustomerCAN/GatewayStatesMessage/Gateway_States/GWState"
				 flags:   READONLY
 addr:    0x002a6284
}
				p_0_AutoboxModel_boolean_T_18[17]
				{
				 type:    uint(8)*
				 alias:   "GatewayClearanceAI"
				 bitmask: 0x01
				 range:   < 0 ; 1 >
				 origin:  "AutoboxModel/CanCommunication/CustomerCAN/GatewayStatesMessage/Gateway_States/GatewayClearanceAI"
				 flags:   READONLY
 addr:    0x002a6288
}
				p_0_AutoboxModel_boolean_T_18[19]
				{
				 type:    uint(8)*
				 alias:   "GatewayClearanceEBI"
				 bitmask: 0x01
				 range:   < 0 ; 1 >
				 origin:  "AutoboxModel/CanCommunication/CustomerCAN/GatewayStatesMessage/Gateway_States/GatewayClearanceEBI"
				 flags:   READONLY
 addr:    0x002a6288
}
				p_0_AutoboxModel_boolean_T_18[18]
				{
				 type:    uint(8)*
				 alias:   "GatewayClearanceSI"
				 bitmask: 0x01
				 range:   < 0 ; 1 >
				 origin:  "AutoboxModel/CanCommunication/CustomerCAN/GatewayStatesMessage/Gateway_States/GatewayClearanceSI"
				 flags:   READONLY
 addr:    0x002a6288
}
				p_0_AutoboxModel_uint8_T_17[3637]
				{
				 type:    uint(8)*
				 alias:   "LimitationsReceivedSI"
				 origin:  "AutoboxModel/CanCommunication/CustomerCAN/GatewayStatesMessage/Gateway_States/LimitationsReceivedSI"
				 flags:   READONLY
 addr:    0x002a6284
}
				p_0_AutoboxModel_boolean_T_18[24]
				{
				 type:    uint(8)*
				 alias:   "MsgTimeoutDisplay"
				 bitmask: 0x01
				 range:   < 0 ; 1 >
				 origin:  "AutoboxModel/CanCommunication/CustomerCAN/GatewayStatesMessage/Gateway_States/MsgTimeoutDisplay"
				 flags:   READONLY
 addr:    0x002a6288
}
				p_0_AutoboxModel_boolean_T_18[25]
				{
				 type:    uint(8)*
				 alias:   "MsgTimeoutPwrMgnt"
				 bitmask: 0x01
				 range:   < 0 ; 1 >
				 origin:  "AutoboxModel/CanCommunication/CustomerCAN/GatewayStatesMessage/Gateway_States/MsgTimeoutPwrMgnt"
				 flags:   READONLY
 addr:    0x002a6288
}
				p_0_AutoboxModel_uint8_T_17[3636]
				{
				 type:    uint(8)*
				 alias:   "PDIState"
				 origin:  "AutoboxModel/CanCommunication/CustomerCAN/GatewayStatesMessage/Gateway_States/PDIState"
				 flags:   READONLY
 addr:    0x002a6284
}
				p_0_AutoboxModel_uint8_T_17[3634]
				{
				 type:    uint(8)*
				 alias:   "SIState"
				 origin:  "AutoboxModel/CanCommunication/CustomerCAN/GatewayStatesMessage/Gateway_States/SIState"
				 flags:   READONLY
				 addr:    0x002a6284
				}
				p_0_AutoboxModel_uint8_T_17[3638]
				{
				 type:    uint(8)*
				 alias:   "THIState"
				 origin:  "AutoboxModel/CanCommunication/CustomerCAN/GatewayStatesMessage/Gateway_States/THIState"
				 flags:   READONLY
 addr:    0x002a6284
}
				p_0_AutoboxModel_uint8_T_17[3635]
				{
				 type:    uint(8)*
				 alias:   "VIState"
				 origin:  "AutoboxModel/CanCommunication/CustomerCAN/GatewayStatesMessage/Gateway_States/VIState"
				 flags:   READONLY
 addr:    0x002a6284
}

			endgroup -- subsystem-group "GatewayStatesMessage"
  
  
			group "SteeringInterface" -- subsystem-group



				group "<steering_angle>" -- block-group
				{
				 block: "Inport"
				}
					p_0_AutoboxModel_real_T_12[11069]
					{
					 type:    flt(64,IEEE)*
					 alias:   "Out1"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


				endgroup -- block-group "<steering_angle>"

				group "InteraceCommands" -- block-group
				{
				 block: "Inport"
				}
					p_0_AutoboxModel_InterfaceCommands_11[0]
					{
					 type:    struct AutoboxModel_InterfaceCommands*
					 alias:   "Out1"
					 flags:   OUTPUT|READONLY
 addr:    0x002a626c
}


				endgroup -- block-group "InteraceCommands"

				group "VehicleDataCan" -- block-group
				{
				 block: "Inport"
				}
					p_0_AutoboxModel_vehicle_data_can_bus_1[0]
					{
					 type:    struct AutoboxModel_vehicle_data_can_bus*
					 alias:   "Out1"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6244
}


				endgroup -- block-group "VehicleDataCan"

				group "controller_active" -- block-group
				{
				 block: "Inport"
				}
					p_0_AutoboxModel_boolean_T_18[11]
					{
					 type:    uint(8)*
					 alias:   "Out1"
					 range:   < 0 ; 1 >
					 bitmask: 0x01
					 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


				endgroup -- block-group "controller_active"

				group "Bus\nCreator" -- block-group
				{
				 block: "BusCreator"
				}
					-- Skipping output


				endgroup -- block-group "Bus\nCreator"

				group "Bus\nCreator1" -- block-group
				{
				 block: "BusCreator"
				}
					-- Skipping output


				endgroup -- block-group "Bus\nCreator1"

				group "Bus\nSelector2" -- block-group
				{
				 block: "BusSelector"
				}
					p_0_AutoboxModel_uint8_T_17[3646]
					{
					 type:    uint(8)*
					 alias:   "Out1"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6284
}
					p_0_AutoboxModel_boolean_T_18[51]
					{
					 type:    uint(8)*
					 alias:   "Out2"
					 range:   < 0 ; 1 >
					 bitmask: 0x01
					 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}
					p_0_AutoboxModel_boolean_T_18[52]
					{
					 type:    uint(8)*
					 alias:   "Out3"
					 range:   < 0 ; 1 >
					 bitmask: 0x01
					 flags:   OUTPUT|READONLY
		 addr:    0x002a6288
		}


				endgroup -- block-group "Bus\nSelector2"

				group "Bus\nSelector3" -- block-group
				{
				 block: "BusSelector"
				}
					-- Skipping output Out1
					-- Skipping output Out2
					-- Skipping output Out3


				endgroup -- block-group "Bus\nSelector3"

				group "Bus\nSelector4" -- block-group
				{
				 block: "BusSelector"
				}
					-- Skipping output Out1
					-- Skipping output Out2
					-- Skipping output Out3


				endgroup -- block-group "Bus\nSelector4"

				group "SwitchSIActivation" -- block-group
				{
				 block: "Constant"
				}
					-- Skipping output Out1
					p_1_AutoboxModel_real_T_9[462]
					{
					 type:    flt(64,IEEE)*
					 alias:   "Value"
					 value:   0.0
					 flags:   PARAM
 addr:    0x002a62b0
}


				endgroup -- block-group "SwitchSIActivation"

				group "SwitchSIAngle" -- block-group
				{
				 block: "Constant"
				}
					-- Skipping output Out1
					p_1_AutoboxModel_real_T_9[417]
					{
					 type:    flt(64,IEEE)*
					 alias:   "Value"
					 value:   3.0
					 flags:   PARAM
		 addr:    0x002a62b0
		}


				endgroup -- block-group "SwitchSIAngle"

				group "set_activation_request_steering" -- block-group
				{
				 block: "Constant"
				}
					-- Skipping output Out1
					p_1_AutoboxModel_boolean_T_10[8]
					{
					 type:    uint(8)*
					 alias:   "Value"
					 range:   < 0 ; 1 >
					 bitmask: 0x01
					 value:   0
					 flags:   PARAM
		 addr:    0x002a62b4
		}


				endgroup -- block-group "set_activation_request_steering"

				group "set_cancel_request_steering" -- block-group
				{
				 block: "Constant"
				}
					-- Skipping output Out1
					p_1_AutoboxModel_boolean_T_10[7]
					{
					 type:    uint(8)*
					 alias:   "Value"
					 range:   < 0 ; 1 >
					 bitmask: 0x01
					 value:   0
					 flags:   PARAM
 addr:    0x002a62b4
}


				endgroup -- block-group "set_cancel_request_steering"

				group "set_clearance_steering" -- block-group
				{
				 block: "Constant"
				}
					-- Skipping output Out1
					p_1_AutoboxModel_uint8_T_11[0]
					{
					 type:    uint(8)*
					 alias:   "Value"
					 value:   0
					 flags:   PARAM
 addr:    0x002a62b8
}


				endgroup -- block-group "set_clearance_steering"

				group "set_steering_angle_request_steering" -- block-group
				{
				 block: "Constant"
				}
					-- Skipping output Out1
					p_1_AutoboxModel_real_T_9[9]
					{
					 type:    flt(64,IEEE)*
					 alias:   "Value"
					 value:   0.0
					 flags:   PARAM
 addr:    0x002a62b0
}


				endgroup -- block-group "set_steering_angle_request_steering"

				group "Gain2" -- block-group
				{
				 block: "Gain"
				}
					p_0_AutoboxModel_real_T_12[11160]
					{
					 type:    flt(64,IEEE)*
					 alias:   "Out1"
					 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}
					p_1_AutoboxModel_real_T_9[8]
					{
					 type:    flt(64,IEEE)*
					 alias:   "Gain"
					 value:   -1.0
					 flags:   PARAM
		 addr:    0x002a62b0
		}


				endgroup -- block-group "Gain2"

				group "steering_angle_range_rad_to_steering_wheel_angle_range_deg_gain" -- block-group
				{
				 block: "Gain"
				}
					p_0_AutoboxModel_real_T_12[11159]
					{
					 type:    flt(64,IEEE)*
					 alias:   "Out1"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
					trcref0_steering_angle_range_rad_to_steering_wheel_angle_range_deg_gain
					{
					 refgroup: "/Tunable Parameters"
					 refvar:   "steering_angle_range_rad_to_steering_wheel_angle_range_deg_gain"
					 alias:    "steering_angle_range_rad_to_steering_wheel_angle_range_deg_gain"
}
					trcref0_Gain
					{
					 refgroup: "/Tunable Parameters"
					 refvar:   "steering_angle_range_rad_to_steering_wheel_angle_range_deg_gain"
					 alias:    "Gain"
					 flags:    DEPRECATED|HIDDEN
}


				endgroup -- block-group "steering_angle_range_rad_to_steering_wheel_angle_range_deg_gain"

				group "Multiport\nSwitch" -- block-group
				{
				 block: "MultiPortSwitch"
				}
					p_0_AutoboxModel_real_T_12[11126]
					{
					 type:    flt(64,IEEE)*
					 alias:   "Out1"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


				endgroup -- block-group "Multiport\nSwitch"

				group "Switch" -- block-group
				{
				 block: "Switch"
				}
					-- Skipping output


				endgroup -- block-group "Switch"

				group "Switch1" -- block-group
				{
				 block: "Switch"
				}
					p_0_AutoboxModel_real_T_12[11107]
					{
					 type:    flt(64,IEEE)*
					 alias:   "Out1"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


				endgroup -- block-group "Switch1"

				group "Switch3" -- block-group
				{
				 block: "Switch"
				}
					p_0_AutoboxModel_real_T_12[11106]
					{
					 type:    flt(64,IEEE)*
					 alias:   "Out1"
					 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}


				endgroup -- block-group "Switch3"

  
  
				group "SteeringInterface" -- subsystem-group



					group "clearance" -- block-group
					{
					 block: "Inport"
					}
						p_0_AutoboxModel_uint8_T_17[3646]
						{
						 type:    uint(8)*
						 alias:   "Out1"
						 flags:   OUTPUT|READONLY
 addr:    0x002a6284
}


					endgroup -- block-group "clearance"

					group "activation_request" -- block-group
					{
					 block: "Inport"
					}
						p_0_AutoboxModel_boolean_T_18[51]
						{
						 type:    uint(8)*
						 alias:   "Out1"
						 range:   < 0 ; 1 >
						 bitmask: 0x01
						 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


					endgroup -- block-group "activation_request"

					group "cancel_request" -- block-group
					{
					 block: "Inport"
					}
						p_0_AutoboxModel_boolean_T_18[52]
						{
						 type:    uint(8)*
						 alias:   "Out1"
						 range:   < 0 ; 1 >
						 bitmask: 0x01
						 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


					endgroup -- block-group "cancel_request"

					group "steering_angle_request" -- block-group
					{
					 block: "Inport"
					}
						p_0_AutoboxModel_real_T_12[11126]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Out1"
						 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}


					endgroup -- block-group "steering_angle_request"

					group "Abs" -- block-group
					{
					 block: "Abs"
					}
						p_0_AutoboxModel_real_T_12[11127]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Out1"
						 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


					endgroup -- block-group "Abs"

					group "Abs2" -- block-group
					{
					 block: "Abs"
					}
						p_0_AutoboxModel_real_T_12[11129]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Out1"
						 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


					endgroup -- block-group "Abs2"

					group "Constant1" -- block-group
					{
					 block: "Constant"
					}
						-- Skipping output Out1
						p_1_AutoboxModel_uint8_T_11[4]
						{
						 type:    uint(8)*
						 alias:   "Value"
						 value:   0
						 flags:   PARAM
		 addr:    0x002a62b8
		}


					endgroup -- block-group "Constant1"

					group "Constant2" -- block-group
					{
					 block: "Constant"
					}
						-- Skipping output Out1
						p_1_AutoboxModel_boolean_T_10[12]
						{
						 type:    uint(8)*
						 alias:   "Value"
						 range:   < 0 ; 1 >
						 bitmask: 0x01
						 value:   0
						 flags:   PARAM
		 addr:    0x002a62b4
		}


					endgroup -- block-group "Constant2"

					group "Constant3" -- block-group
					{
					 block: "Constant"
					}
						-- Skipping output Out1
						p_1_AutoboxModel_boolean_T_10[6]
						{
						 type:    uint(8)*
						 alias:   "Value"
						 range:   < 0 ; 1 >
						 bitmask: 0x01
						 value:   0
						 flags:   PARAM
			 addr:    0x002a62b4
			}


					endgroup -- block-group "Constant3"

					group "Constant4" -- block-group
					{
					 block: "Constant"
					}
						-- Skipping output Out1
						p_1_AutoboxModel_real_T_9[459]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Value"
						 value:   0.0
						 flags:   PARAM
 addr:    0x002a62b0
}


					endgroup -- block-group "Constant4"

					group "Constant5" -- block-group
					{
					 block: "Constant"
					}
						-- Skipping output Out1
						p_1_AutoboxModel_uint8_T_11[5]
						{
						 type:    uint(8)*
						 alias:   "Value"
						 value:   255
						 flags:   PARAM
 addr:    0x002a62b8
}


					endgroup -- block-group "Constant5"

					group "Constant6" -- block-group
					{
					 block: "Constant"
					}
						-- Skipping output Out1
						p_1_AutoboxModel_boolean_T_10[5]
						{
						 type:    uint(8)*
						 alias:   "Value"
						 range:   < 0 ; 1 >
						 bitmask: 0x01
						 value:   1
						 flags:   PARAM
 addr:    0x002a62b4
}


					endgroup -- block-group "Constant6"

					group "Constant7" -- block-group
					{
					 block: "Constant"
					}
						-- Skipping output Out1
						p_1_AutoboxModel_boolean_T_10[4]
						{
						 type:    uint(8)*
						 alias:   "Value"
						 range:   < 0 ; 1 >
						 bitmask: 0x01
						 value:   0
						 flags:   PARAM
		 addr:    0x002a62b4
		}


					endgroup -- block-group "Constant7"

					group "Constant8" -- block-group
					{
					 block: "Constant"
					}
						-- Skipping output Out1
						p_1_AutoboxModel_boolean_T_10[3]
						{
						 type:    uint(8)*
						 alias:   "Value"
						 range:   < 0 ; 1 >
						 bitmask: 0x01
						 value:   1
						 flags:   PARAM
 addr:    0x002a62b4
}


					endgroup -- block-group "Constant8"

					group "Steering Troque" -- block-group
					{
					 block: "Constant"
					}
						-- Skipping output Out1
						p_1_AutoboxModel_real_T_9[451]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Value"
						 value:   0.0
						 flags:   PARAM
		 addr:    0x002a62b0
		}


					endgroup -- block-group "Steering Troque"

					group "steering angle  request can offset2" -- block-group
					{
					 block: "Constant"
					}
						-- Skipping output Out1
						p_1_AutoboxModel_real_T_9[453]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Value"
						 value:   0.0
						 flags:   PARAM
 addr:    0x002a62b0
}


					endgroup -- block-group "steering angle  request can offset2"

					group "steering angle request can offset1" -- block-group
					{
					 block: "Constant"
					}
						-- Skipping output Out1
						p_1_AutoboxModel_real_T_9[455]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Value"
						 value:   0.0
						 flags:   PARAM
 addr:    0x002a62b0
}


					endgroup -- block-group "steering angle request can offset1"

					group "steering torque  request can offset1" -- block-group
					{
					 block: "Constant"
					}
						-- Skipping output Out1
						p_1_AutoboxModel_real_T_9[456]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Value"
						 value:   0.0
						 flags:   PARAM
 addr:    0x002a62b0
}


					endgroup -- block-group "steering torque  request can offset1"

					group "steering torque request can offset2" -- block-group
					{
					 block: "Constant"
					}
						-- Skipping output Out1
						p_1_AutoboxModel_real_T_9[458]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Value"
						 value:   0.0
						 flags:   PARAM
			 addr:    0x002a62b0
			}


					endgroup -- block-group "steering torque request can offset2"

					group "Data Type Conversion" -- block-group
					{
					 block: "DataTypeConversion"
					}
						p_0_AutoboxModel_boolean_T_18[48]
						{
						 type:    uint(8)*
						 alias:   "Out1"
						 range:   < 0 ; 1 >
						 bitmask: 0x01
						 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


					endgroup -- block-group "Data Type Conversion"

					group "Data Type Conversion1" -- block-group
					{
					 block: "DataTypeConversion"
					}
						p_0_AutoboxModel_real_T_12[11132]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Out1"
						 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}


					endgroup -- block-group "Data Type Conversion1"

					group "Data Type Conversion2" -- block-group
					{
					 block: "DataTypeConversion"
					}
						p_0_AutoboxModel_int16_T_16[1]
						{
						 type:    int(16)*
						 alias:   "Out1"
						 flags:   OUTPUT|READONLY
 addr:    0x002a6280
}


					endgroup -- block-group "Data Type Conversion2"

					group "Data Type Conversion3" -- block-group
					{
					 block: "DataTypeConversion"
					}
						p_0_AutoboxModel_real_T_12[11136]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Out1"
						 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


					endgroup -- block-group "Data Type Conversion3"

					group "Data Type Conversion4" -- block-group
					{
					 block: "DataTypeConversion"
					}
						p_0_AutoboxModel_int16_T_16[2]
						{
						 type:    int(16)*
						 alias:   "Out1"
						 flags:   OUTPUT|READONLY
 addr:    0x002a6280
}


					endgroup -- block-group "Data Type Conversion4"

					group "Data Type Conversion5" -- block-group
					{
					 block: "DataTypeConversion"
					}
						p_0_AutoboxModel_boolean_T_18[50]
						{
						 type:    uint(8)*
						 alias:   "Out1"
						 range:   < 0 ; 1 >
						 bitmask: 0x01
						 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


					endgroup -- block-group "Data Type Conversion5"

					group "steering angle request can factor1" -- block-group
					{
					 block: "Gain"
					}
						p_0_AutoboxModel_real_T_12[11138]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Out1"
						 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
						p_1_AutoboxModel_real_T_9[466]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Gain"
						 value:   0.1
						 flags:   PARAM
		 addr:    0x002a62b0
		}


					endgroup -- block-group "steering angle request can factor1"

					group "steering angle request can factor2" -- block-group
					{
					 block: "Gain"
					}
						p_0_AutoboxModel_real_T_12[11130]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Out1"
						 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
						p_1_AutoboxModel_real_T_9[454]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Gain"
						 value:   10.0
						 flags:   PARAM
		 addr:    0x002a62b0
		}


					endgroup -- block-group "steering angle request can factor2"

					group "steering torque request can factor3" -- block-group
					{
					 block: "Gain"
					}
						p_0_AutoboxModel_real_T_12[11139]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Out1"
						 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}
						p_1_AutoboxModel_real_T_9[467]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Gain"
						 value:   0.01
						 flags:   PARAM
		 addr:    0x002a62b0
		}


					endgroup -- block-group "steering torque request can factor3"

					group "steering torque request can factor4" -- block-group
					{
					 block: "Gain"
					}
						p_0_AutoboxModel_real_T_12[11134]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Out1"
						 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
						p_1_AutoboxModel_real_T_9[457]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Gain"
						 value:   100.0
						 flags:   PARAM
 addr:    0x002a62b0
}


					endgroup -- block-group "steering torque request can factor4"

					group "IC" -- block-group
					{
					 block: "InitialCondition"
					}
						p_0_AutoboxModel_real_T_12[11128]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Out1"
						 flags:   OUTPUT|READONLY
			 addr:    0x002a6270
			}
						p_1_AutoboxModel_real_T_9[452]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Value"
						 value:   0.0
						 flags:   PARAM
 addr:    0x002a62b0
}


					endgroup -- block-group "IC"

					group "Add1" -- block-group
					{
					 block: "Sum"
					}
						p_0_AutoboxModel_real_T_12[11133]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Out1"
						 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


					endgroup -- block-group "Add1"

					group "Add2" -- block-group
					{
					 block: "Sum"
					}
						p_0_AutoboxModel_real_T_12[11137]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Out1"
						 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


					endgroup -- block-group "Add2"

					group "Add3" -- block-group
					{
					 block: "Sum"
					}
						p_0_AutoboxModel_real_T_12[11131]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Out1"
						 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


					endgroup -- block-group "Add3"

					group "Add4" -- block-group
					{
					 block: "Sum"
					}
						p_0_AutoboxModel_real_T_12[11135]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Out1"
						 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


					endgroup -- block-group "Add4"

					group "Switch" -- block-group
					{
					 block: "Switch"
					}
						p_0_AutoboxModel_boolean_T_18[47]
						{
						 type:    uint(8)*
						 alias:   "Out1"
						 range:   < 0 ; 1 >
						 bitmask: 0x01
						 flags:   OUTPUT|READONLY
		 addr:    0x002a6288
		}
						p_1_AutoboxModel_real_T_9[460]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Threshold"
						 value:   0.0
						 flags:   PARAM
 addr:    0x002a62b0
}


					endgroup -- block-group "Switch"

					group "Switch1" -- block-group
					{
					 block: "Switch"
					}
						p_0_AutoboxModel_boolean_T_18[49]
						{
						 type:    uint(8)*
						 alias:   "Out1"
						 range:   < 0 ; 1 >
						 bitmask: 0x01
						 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}
						p_1_AutoboxModel_real_T_9[461]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Threshold"
						 value:   0.0
						 flags:   PARAM
 addr:    0x002a62b0
}


					endgroup -- block-group "Switch1"

  
  
					group "Counter\nLimited" -- subsystem-group

						p_0_AutoboxModel_uint8_T_17[3643]
						{
						 type:    uint(8)*
						 alias:   "y"
						 flags:   OUTPUT|READONLY
				 addr:    0x002a6284
				}

						p_1_AutoboxModel_uint8_T_8[1]
						{
						 type:    uint(8)*
						 alias:   "uplimit"
						 value:   15
						 flags:   PARAM
 addr:    0x002a62ac
}

						group "Data Type\nPropagation" -- block-group
						{
						 block: "S-Function"
						}
							p_0_AutoboxModel_uint8_T_17[3645]
							{
							 type:    uint(8)*
							 alias:   "In1"
							 flags:   READONLY
 addr:    0x002a6284
}
							p_0_AutoboxModel_uint8_T_17[3645]
							{
							 type:    uint(8)*
							 alias:   "In2"
							 flags:   READONLY
 addr:    0x002a6284
}
							p_0_AutoboxModel_uint8_T_17[3645]
							{
							 type:    uint(8)*
							 alias:   "In3"
							 flags:   READONLY
 addr:    0x002a6284
}



						endgroup -- block-group "Data Type\nPropagation"

						group "Force to be scalar" -- block-group
						{
						 block: "SignalSpecification"
						}
							p_0_AutoboxModel_uint8_T_17[3643]
							{
							 type:    uint(8)*
							 alias:   "Out1"
							 flags:   OUTPUT|READONLY
 addr:    0x002a6284
}


						endgroup -- block-group "Force to be scalar"

						group "Output" -- block-group
						{
						 block: "UnitDelay"
						}
							p_0_AutoboxModel_uint8_T_17[3643]
							{
							 type:    uint(8)*
							 alias:   "Out1"
							 flags:   OUTPUT|READONLY
 addr:    0x002a6284
}
							p_2_AutoboxModel_uint8_T_3[1]
							{
							 type:    uint(8)*
							 alias:   "DiscState"
							 flags: READONLY
 addr:    0x002a62c4
}
							p_1_AutoboxModel_uint8_T_11[7]
							{
							 type:    uint(8)*
							 alias:   "InitialCondition"
							 value:   0
							 flags:   PARAM
 addr:    0x002a62b8
}


						endgroup -- block-group "Output"

  
  
						group "Increment\nReal World" -- subsystem-group

							p_0_AutoboxModel_uint8_T_17[3644]
							{
							 type:    uint(8)*
							 alias:   "y"
							 flags:   OUTPUT|READONLY
 addr:    0x002a6284
}


							group "u" -- block-group
							{
							 block: "Inport"
							}
								p_0_AutoboxModel_uint8_T_17[3643]
								{
								 type:    uint(8)*
								 alias:   "Out1"
								 flags:   OUTPUT|READONLY
 addr:    0x002a6284
}


							endgroup -- block-group "u"

							group "FixPt\nConstant" -- block-group
							{
							 block: "Constant"
							}
								-- Skipping output Out1
								p_1_AutoboxModel_uint8_T_11[6]
								{
								 type:    uint(8)*
								 alias:   "Value"
								 value:   1
								 flags:   PARAM
 addr:    0x002a62b8
}


							endgroup -- block-group "FixPt\nConstant"

							group "FixPt\nSum1" -- block-group
							{
							 block: "Sum"
							}
								p_0_AutoboxModel_uint8_T_17[3644]
								{
								 type:    uint(8)*
								 alias:   "Out1"
								 flags:   OUTPUT|READONLY
 addr:    0x002a6284
}


							endgroup -- block-group "FixPt\nSum1"

							group "FixPt\nData Type\nDuplicate" -- block-group
							{
							 block: "DataTypeDuplicate"
							}
								p_0_AutoboxModel_uint8_T_17[3644]
								{
								 type:    uint(8)*
								 alias:   "In1"
								 flags:   READONLY
 addr:    0x002a6284
}
								p_0_AutoboxModel_uint8_T_17[3643]
								{
								 type:    uint(8)*
								 alias:   "In2"
								 flags:   READONLY
 addr:    0x002a6284
}

								-- Skipping inport In3




							endgroup -- block-group "FixPt\nData Type\nDuplicate"



						endgroup -- subsystem-group "Increment\nReal World"
  
  
						group "Wrap To Zero" -- subsystem-group

							p_0_AutoboxModel_uint8_T_17[3645]
							{
							 type:    uint(8)*
							 alias:   "Y"
							 flags:   OUTPUT|READONLY
 addr:    0x002a6284
}

							trcref0_uplimit
							{
							 refgroup: ".."
							 refvar:   "uplimit"
							 alias:    "uplimit"
}
							-- Skipping parameter "uplimit"

							group "U" -- block-group
							{
							 block: "Inport"
							}
								p_0_AutoboxModel_uint8_T_17[3644]
								{
								 type:    uint(8)*
								 alias:   "Out1"
								 flags:   OUTPUT|READONLY
 addr:    0x002a6284
}


							endgroup -- block-group "U"

							group "Constant" -- block-group
							{
							 block: "Constant"
							}
								-- Skipping output Out1
								p_1_AutoboxModel_uint8_T_11[8]
								{
								 type:    uint(8)*
								 alias:   "Value"
								 value:   0
								 flags:   PARAM
 addr:    0x002a62b8
}


							endgroup -- block-group "Constant"

							group "FixPt\nSwitch" -- block-group
							{
							 block: "Switch"
							}
								p_0_AutoboxModel_uint8_T_17[3645]
								{
								 type:    uint(8)*
								 alias:   "Out1"
								 flags:   OUTPUT|READONLY
 addr:    0x002a6284
}
								trcref0_uplimit
								{
								 refgroup: "../.."
								 refvar:   "uplimit"
								 alias:    "uplimit"
}
								trcref0_Threshold
								{
								 refgroup: "../.."
								 refvar:   "uplimit"
								 alias:    "Threshold"
								 flags:    DEPRECATED|HIDDEN
}


							endgroup -- block-group "FixPt\nSwitch"

							group "FixPt\nData Type\nDuplicate1" -- block-group
							{
							 block: "DataTypeDuplicate"
							}
								p_0_AutoboxModel_uint8_T_17[3645]
								{
								 type:    uint(8)*
								 alias:   "In1"
								 flags:   READONLY
 addr:    0x002a6284
}
								p_0_AutoboxModel_uint8_T_17[3644]
								{
								 type:    uint(8)*
								 alias:   "In2"
								 flags:   READONLY
 addr:    0x002a6284
}

								-- Skipping inport In3




							endgroup -- block-group "FixPt\nData Type\nDuplicate1"



						endgroup -- subsystem-group "Wrap To Zero"


					endgroup -- subsystem-group "Counter\nLimited"
  
  
					group "Steering_Interface" -- subsystem-group

						p_0_AutoboxModel_real_T_12[11140]
						{
						 type:    flt(64,IEEE)*
						 alias:   "TX status"
						 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
						p_0_AutoboxModel_real_T_12[11141]
						{
						 type:    flt(64,IEEE)*
						 alias:   "TX time"
						 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
						p_0_AutoboxModel_real_T_12[11142]
						{
						 type:    flt(64,IEEE)*
						 alias:   "TX delta time"
						 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
						p_0_AutoboxModel_real_T_12[11143]
						{
						 type:    flt(64,IEEE)*
						 alias:   "TX delay time"
						 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}

					endgroup -- subsystem-group "Steering_Interface"
  
  
					group "MATLAB Function" -- subsystem-group

						p_0_AutoboxModel_uint8_T_17[3649]
						{
						 type:    uint(8)*
						 alias:   "byte0"
						 flags:   OUTPUT|READONLY
 addr:    0x002a6284
}




					endgroup -- subsystem-group "MATLAB Function"


				endgroup -- subsystem-group "SteeringInterface"
  
  
				group "limit steering angle" -- subsystem-group

					p_0_AutoboxModel_real_T_12[11125]
					{
					 type:    flt(64,IEEE)*
					 alias:   "limited steeing angle"
					 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}


					group "steering angle" -- block-group
					{
					 block: "Inport"
					}
						p_0_AutoboxModel_real_T_12[11107]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Out1"
						 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


					endgroup -- block-group "steering angle"

					group "Current_velocity" -- block-group
					{
					 block: "Inport"
					}
						-- Skipping output Out1


					endgroup -- block-group "Current_velocity"

					group "current_steering_wheel_angle" -- block-group
					{
					 block: "Inport"
					}
						p_0_AutoboxModel_real_T_12[11106]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Out1"
						 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}


					endgroup -- block-group "current_steering_wheel_angle"

					group "max steering deviation" -- block-group
					{
					 block: "Constant"
					}
						-- Skipping output Out1
						p_1_AutoboxModel_real_T_9[418]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Value"
						 value:   250.0
						 flags:   PARAM
		 addr:    0x002a62b0
		}


					endgroup -- block-group "max steering deviation"

					group "Gain" -- block-group
					{
					 block: "Gain"
					}
						p_0_AutoboxModel_real_T_12[11113]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Out1"
						 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
						p_1_AutoboxModel_real_T_9[448]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Gain"
						 value:   -1.0
						 flags:   PARAM
 addr:    0x002a62b0
}


					endgroup -- block-group "Gain"

					group "Gain1" -- block-group
					{
					 block: "Gain"
					}
						p_0_AutoboxModel_real_T_12[11118]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Out1"
						 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
						p_1_AutoboxModel_real_T_9[450]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Gain"
						 value:   -1.0
						 flags:   PARAM
		 addr:    0x002a62b0
		}


					endgroup -- block-group "Gain1"

					group "speed angle limits" -- block-group
					{
					 block: "Lookup_n-D"
					}
						p_0_AutoboxModel_real_T_12[11112]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Out1"
						 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}

						-- Skipping inport In1



						p_1_AutoboxModel_real_T_9[428]
						{
						 type:    AutoboxModel_ArrayDT0_10*
						 alias:   "tableData"
						 value:   [500.0, 500.0, 350.0, 200.0, 100.0, 60.0, 50.0, 40.0, 30.0, 20.0]
						 flags:   PARAM
 addr:    0x002a62b0
}
						p_1_AutoboxModel_real_T_9[438]
						{
						 type:    AutoboxModel_ArrayDT0_10*
						 alias:   "bp01Data"
						 value:   [0.0, 10.0, 20.0, 30.0, 40.0, 50.0, 60.0, 70.0, 100.0, 130.0]
						 flags:   PARAM
 addr:    0x002a62b0
}
						trcref0_LookUpTableData
						{
						 refgroup: "."
						 refvar:   "tableData"
						 alias:    "LookUpTableData"
		}


					endgroup -- block-group "speed angle limits"

					group "speed speed limits" -- block-group
					{
					 block: "Lookup_n-D"
					}
						p_0_AutoboxModel_real_T_12[11109]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Out1"
						 flags:   OUTPUT|READONLY
					 addr:    0x002a6270
					}

						-- Skipping inport In1



						p_1_AutoboxModel_real_T_9[419]
						{
						 type:    AutoboxModel_ArrayDT0_4*
						 alias:   "tableData"
						 value:   [1000.0, 1000.0, 260.0, 260.0]
						 flags:   PARAM
 addr:    0x002a62b0
}
						p_1_AutoboxModel_real_T_9[423]
						{
						 type:    AutoboxModel_ArrayDT0_4*
						 alias:   "bp01Data"
						 value:   [0.0, 10.0, 10.01, 200.0]
						 flags:   PARAM
 addr:    0x002a62b0
}
						trcref0_LookUpTableData
						{
						 refgroup: "."
						 refvar:   "tableData"
						 alias:    "LookUpTableData"
		}


					endgroup -- block-group "speed speed limits"

					group "Add1" -- block-group
					{
					 block: "Sum"
					}
						p_0_AutoboxModel_real_T_12[11108]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Out1"
						 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


					endgroup -- block-group "Add1"

					group "Add2" -- block-group
					{
					 block: "Sum"
					}
						p_0_AutoboxModel_real_T_12[11123]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Out1"
						 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}


					endgroup -- block-group "Add2"

  
  
					group "Rate Limiter\nDynamic" -- subsystem-group

						p_0_AutoboxModel_real_T_12[11122]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Y"
						 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


						group "up" -- block-group
						{
						 block: "Inport"
						}
							p_0_AutoboxModel_real_T_12[11109]
							{
							 type:    flt(64,IEEE)*
							 alias:   "Out1"
							 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


						endgroup -- block-group "up"

						group "u" -- block-group
						{
						 block: "Inport"
						}
							p_0_AutoboxModel_real_T_12[11115]
							{
							 type:    flt(64,IEEE)*
							 alias:   "Out1"
							 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


						endgroup -- block-group "u"

						group "lo" -- block-group
						{
						 block: "Inport"
						}
							p_0_AutoboxModel_real_T_12[11118]
							{
							 type:    flt(64,IEEE)*
							 alias:   "Out1"
							 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


						endgroup -- block-group "lo"

						group "delta fall limit" -- block-group
						{
						 block: "Product"
						}
							p_0_AutoboxModel_real_T_12[11119]
							{
							 type:    flt(64,IEEE)*
							 alias:   "Out1"
							 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


						endgroup -- block-group "delta fall limit"

						group "delta rise limit" -- block-group
						{
						 block: "Product"
						}
							p_0_AutoboxModel_real_T_12[11111]
							{
							 type:    flt(64,IEEE)*
							 alias:   "Out1"
							 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


						endgroup -- block-group "delta rise limit"

						group "Difference Inputs1" -- block-group
						{
						 block: "Sum"
						 desc:  "\nAdd in CPU"
						}
							p_0_AutoboxModel_real_T_12[11117]
							{
							 type:    flt(64,IEEE)*
							 alias:   "Out1"
							 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


						endgroup -- block-group "Difference Inputs1"

						group "Difference Inputs2" -- block-group
						{
						 block: "Sum"
						 desc:  "\nAdd in CPU"
						}
							p_0_AutoboxModel_real_T_12[11122]
							{
							 type:    flt(64,IEEE)*
							 alias:   "Out1"
							 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


						endgroup -- block-group "Difference Inputs2"

						group "Delay Input2" -- block-group
						{
						 block: "UnitDelay"
						 desc:  "\nStore in Global RAM"
						}
							p_0_AutoboxModel_real_T_12[11116]
							{
							 type:    flt(64,IEEE)*
							 alias:   "Out1"
							 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
							p_2_AutoboxModel_real_T_0[12]
							{
							 type:    flt(64,IEEE)*
							 alias:   "DiscState"
							 flags: READONLY
 addr:    0x002a62bc
}
							p_1_AutoboxModel_real_T_9[449]
							{
							 type:    flt(64,IEEE)*
							 alias:   "InitialCondition"
							 value:   0.0
							 flags:   PARAM
 addr:    0x002a62b0
}


						endgroup -- block-group "Delay Input2"

						group "FixPt\nData Type\nDuplicate" -- block-group
						{
						 block: "DataTypeDuplicate"
						}
							p_0_AutoboxModel_real_T_12[11122]
							{
							 type:    flt(64,IEEE)*
							 alias:   "In1"
							 flags:   READONLY
 addr:    0x002a6270
}
							p_0_AutoboxModel_real_T_12[11116]
							{
							 type:    flt(64,IEEE)*
							 alias:   "In2"
							 flags:   READONLY
 addr:    0x002a6270
}
							p_0_AutoboxModel_real_T_12[11119]
							{
							 type:    flt(64,IEEE)*
							 alias:   "In3"
							 flags:   READONLY
 addr:    0x002a6270
}
							p_0_AutoboxModel_real_T_12[11117]
							{
							 type:    flt(64,IEEE)*
							 alias:   "In4"
							 flags:   READONLY
 addr:    0x002a6270
}
							p_0_AutoboxModel_real_T_12[11115]
							{
							 type:    flt(64,IEEE)*
							 alias:   "In5"
							 flags:   READONLY
 addr:    0x002a6270
}
							p_0_AutoboxModel_real_T_12[11111]
							{
							 type:    flt(64,IEEE)*
							 alias:   "In6"
							 flags:   READONLY
 addr:    0x002a6270
}
							p_0_AutoboxModel_real_T_12[11121]
							{
							 type:    flt(64,IEEE)*
							 alias:   "In7"
							 flags:   READONLY
 addr:    0x002a6270
}



						endgroup -- block-group "FixPt\nData Type\nDuplicate"

						group "sample time" -- block-group
						{
						 block: "SampleTimeMath"
						}
							p_0_AutoboxModel_real_T_12[11110]
							{
							 type:    flt(64,IEEE)*
							 alias:   "Out1"
							 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
							p_1_AutoboxModel_real_T_9[427]
							{
							 type:    flt(64,IEEE)*
							 alias:   "WtEt"
							 value:   0.01
							 flags:   PARAM
 addr:    0x002a62b0
}


						endgroup -- block-group "sample time"

  
  
						group "Saturation\nDynamic" -- subsystem-group

							p_0_AutoboxModel_real_T_12[11121]
							{
							 type:    flt(64,IEEE)*
							 alias:   "y"
							 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


							group "up" -- block-group
							{
							 block: "Inport"
							}
								p_0_AutoboxModel_real_T_12[11111]
								{
								 type:    flt(64,IEEE)*
								 alias:   "Out1"
								 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


							endgroup -- block-group "up"

							group "u" -- block-group
							{
							 block: "Inport"
							}
								p_0_AutoboxModel_real_T_12[11117]
								{
								 type:    flt(64,IEEE)*
								 alias:   "Out1"
								 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


							endgroup -- block-group "u"

							group "lo" -- block-group
							{
							 block: "Inport"
							}
								p_0_AutoboxModel_real_T_12[11119]
								{
								 type:    flt(64,IEEE)*
								 alias:   "Out1"
								 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


							endgroup -- block-group "lo"

							group "LowerRelop1" -- block-group
							{
							 block: "RelationalOperator"
							}
								p_0_AutoboxModel_boolean_T_18[43]
								{
								 type:    uint(8)*
								 alias:   "Out1"
								 range:   < 0 ; 1 >
								 bitmask: 0x01
								 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


							endgroup -- block-group "LowerRelop1"

							group "UpperRelop" -- block-group
							{
							 block: "RelationalOperator"
							}
								p_0_AutoboxModel_boolean_T_18[44]
								{
								 type:    uint(8)*
								 alias:   "Out1"
								 range:   < 0 ; 1 >
								 bitmask: 0x01
								 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


							endgroup -- block-group "UpperRelop"

							group "Data Type\nPropagation" -- block-group
							{
							 block: "S-Function"
							}
								p_0_AutoboxModel_real_T_12[11117]
								{
								 type:    flt(64,IEEE)*
								 alias:   "In1"
								 flags:   READONLY
 addr:    0x002a6270
}
								p_0_AutoboxModel_real_T_12[11117]
								{
								 type:    flt(64,IEEE)*
								 alias:   "In2"
								 flags:   READONLY
 addr:    0x002a6270
}
								p_0_AutoboxModel_real_T_12[11120]
								{
								 type:    flt(64,IEEE)*
								 alias:   "In3"
								 flags:   READONLY
 addr:    0x002a6270
}



							endgroup -- block-group "Data Type\nPropagation"

							group "Switch" -- block-group
							{
							 block: "Switch"
							}
								p_0_AutoboxModel_real_T_12[11120]
								{
								 type:    flt(64,IEEE)*
								 alias:   "Out1"
								 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


							endgroup -- block-group "Switch"

							group "Switch2" -- block-group
							{
							 block: "Switch"
							}
								p_0_AutoboxModel_real_T_12[11121]
								{
								 type:    flt(64,IEEE)*
								 alias:   "Out1"
								 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


							endgroup -- block-group "Switch2"

							group "Data Type\nDuplicate" -- block-group
							{
							 block: "DataTypeDuplicate"
							}
								p_0_AutoboxModel_real_T_12[11121]
								{
								 type:    flt(64,IEEE)*
								 alias:   "In1"
								 flags:   READONLY
 addr:    0x002a6270
}
								p_0_AutoboxModel_real_T_12[11120]
								{
								 type:    flt(64,IEEE)*
								 alias:   "In2"
								 flags:   READONLY
 addr:    0x002a6270
}



							endgroup -- block-group "Data Type\nDuplicate"



						endgroup -- subsystem-group "Saturation\nDynamic"

						p_0_AutoboxModel_real_T_12[11116]
						{
						 type:    flt(64,IEEE)*
						 alias:   "Y(k-1)"
						 origin:  "AutoboxModel/CanCommunication/CustomerCAN/SteeringInterface/limit steering angle/Rate Limiter\nDynamic/Delay Input2/Out1"
						 flags:   READONLY
 addr:    0x002a6270
}
						p_0_AutoboxModel_real_T_12[11117]
						{
						 type:    flt(64,IEEE)*
						 alias:   "( U(k) - Y(k-1) )"
						 origin:  "AutoboxModel/CanCommunication/CustomerCAN/SteeringInterface/limit steering angle/Rate Limiter\nDynamic/Difference Inputs1/Out1"
						 flags:   READONLY
 addr:    0x002a6270
}

					endgroup -- subsystem-group "Rate Limiter\nDynamic"
  
  
					group "Saturation\nDynamic" -- subsystem-group

						p_0_AutoboxModel_real_T_12[11115]
						{
						 type:    flt(64,IEEE)*
						 alias:   "y"
						 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}


						group "up" -- block-group
						{
						 block: "Inport"
						}
							p_0_AutoboxModel_real_T_12[11112]
							{
							 type:    flt(64,IEEE)*
							 alias:   "Out1"
							 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


						endgroup -- block-group "up"

						group "u" -- block-group
						{
						 block: "Inport"
						}
							p_0_AutoboxModel_real_T_12[11107]
							{
							 type:    flt(64,IEEE)*
							 alias:   "Out1"
							 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


						endgroup -- block-group "u"

						group "lo" -- block-group
						{
						 block: "Inport"
						}
							p_0_AutoboxModel_real_T_12[11113]
							{
							 type:    flt(64,IEEE)*
							 alias:   "Out1"
							 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


						endgroup -- block-group "lo"

						group "LowerRelop1" -- block-group
						{
						 block: "RelationalOperator"
						}
							p_0_AutoboxModel_boolean_T_18[41]
							{
							 type:    uint(8)*
							 alias:   "Out1"
							 range:   < 0 ; 1 >
							 bitmask: 0x01
							 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


						endgroup -- block-group "LowerRelop1"

						group "UpperRelop" -- block-group
						{
						 block: "RelationalOperator"
						}
							p_0_AutoboxModel_boolean_T_18[42]
							{
							 type:    uint(8)*
							 alias:   "Out1"
							 range:   < 0 ; 1 >
							 bitmask: 0x01
							 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


						endgroup -- block-group "UpperRelop"

						group "Data Type\nPropagation" -- block-group
						{
						 block: "S-Function"
						}
							p_0_AutoboxModel_real_T_12[11107]
							{
							 type:    flt(64,IEEE)*
							 alias:   "In1"
							 flags:   READONLY
 addr:    0x002a6270
}
							p_0_AutoboxModel_real_T_12[11107]
							{
							 type:    flt(64,IEEE)*
							 alias:   "In2"
							 flags:   READONLY
 addr:    0x002a6270
}
							p_0_AutoboxModel_real_T_12[11114]
							{
							 type:    flt(64,IEEE)*
							 alias:   "In3"
							 flags:   READONLY
 addr:    0x002a6270
}



						endgroup -- block-group "Data Type\nPropagation"

						group "Switch" -- block-group
						{
						 block: "Switch"
						}
							p_0_AutoboxModel_real_T_12[11114]
							{
							 type:    flt(64,IEEE)*
							 alias:   "Out1"
							 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


						endgroup -- block-group "Switch"

						group "Switch2" -- block-group
						{
						 block: "Switch"
						}
							p_0_AutoboxModel_real_T_12[11115]
							{
							 type:    flt(64,IEEE)*
							 alias:   "Out1"
							 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


						endgroup -- block-group "Switch2"

						group "Data Type\nDuplicate" -- block-group
						{
						 block: "DataTypeDuplicate"
						}
							p_0_AutoboxModel_real_T_12[11115]
							{
							 type:    flt(64,IEEE)*
							 alias:   "In1"
							 flags:   READONLY
 addr:    0x002a6270
}
							p_0_AutoboxModel_real_T_12[11114]
							{
							 type:    flt(64,IEEE)*
							 alias:   "In2"
							 flags:   READONLY
 addr:    0x002a6270
}



						endgroup -- block-group "Data Type\nDuplicate"



					endgroup -- subsystem-group "Saturation\nDynamic"
  
  
					group "Saturation\nDynamic1" -- subsystem-group

						p_0_AutoboxModel_real_T_12[11125]
						{
						 type:    flt(64,IEEE)*
						 alias:   "y"
						 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}


						group "up" -- block-group
						{
						 block: "Inport"
						}
							p_0_AutoboxModel_real_T_12[11108]
							{
							 type:    flt(64,IEEE)*
							 alias:   "Out1"
							 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


						endgroup -- block-group "up"

						group "u" -- block-group
						{
						 block: "Inport"
						}
							p_0_AutoboxModel_real_T_12[11122]
							{
							 type:    flt(64,IEEE)*
							 alias:   "Out1"
							 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


						endgroup -- block-group "u"

						group "lo" -- block-group
						{
						 block: "Inport"
						}
							p_0_AutoboxModel_real_T_12[11123]
							{
							 type:    flt(64,IEEE)*
							 alias:   "Out1"
							 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


						endgroup -- block-group "lo"

						group "LowerRelop1" -- block-group
						{
						 block: "RelationalOperator"
						}
							p_0_AutoboxModel_boolean_T_18[45]
							{
							 type:    uint(8)*
							 alias:   "Out1"
							 range:   < 0 ; 1 >
							 bitmask: 0x01
							 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


						endgroup -- block-group "LowerRelop1"

						group "UpperRelop" -- block-group
						{
						 block: "RelationalOperator"
						}
							p_0_AutoboxModel_boolean_T_18[46]
							{
							 type:    uint(8)*
							 alias:   "Out1"
							 range:   < 0 ; 1 >
							 bitmask: 0x01
							 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


						endgroup -- block-group "UpperRelop"

						group "Data Type\nPropagation" -- block-group
						{
						 block: "S-Function"
						}
							p_0_AutoboxModel_real_T_12[11122]
							{
							 type:    flt(64,IEEE)*
							 alias:   "In1"
							 flags:   READONLY
 addr:    0x002a6270
}
							p_0_AutoboxModel_real_T_12[11122]
							{
							 type:    flt(64,IEEE)*
							 alias:   "In2"
							 flags:   READONLY
 addr:    0x002a6270
}
							p_0_AutoboxModel_real_T_12[11124]
							{
							 type:    flt(64,IEEE)*
							 alias:   "In3"
							 flags:   READONLY
 addr:    0x002a6270
}



						endgroup -- block-group "Data Type\nPropagation"

						group "Switch" -- block-group
						{
						 block: "Switch"
						}
							p_0_AutoboxModel_real_T_12[11124]
							{
							 type:    flt(64,IEEE)*
							 alias:   "Out1"
							 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


						endgroup -- block-group "Switch"

						group "Switch2" -- block-group
						{
						 block: "Switch"
						}
							p_0_AutoboxModel_real_T_12[11125]
							{
							 type:    flt(64,IEEE)*
							 alias:   "Out1"
							 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


						endgroup -- block-group "Switch2"

						group "Data Type\nDuplicate" -- block-group
						{
						 block: "DataTypeDuplicate"
						}
							p_0_AutoboxModel_real_T_12[11125]
							{
							 type:    flt(64,IEEE)*
							 alias:   "In1"
							 flags:   READONLY
 addr:    0x002a6270
}
							p_0_AutoboxModel_real_T_12[11124]
							{
							 type:    flt(64,IEEE)*
							 alias:   "In2"
							 flags:   READONLY
 addr:    0x002a6270
}



						endgroup -- block-group "Data Type\nDuplicate"



					endgroup -- subsystem-group "Saturation\nDynamic1"

					p_0_AutoboxModel_real_T_12[11107]
					{
					 type:    flt(64,IEEE)*
					 alias:   "<>"
					 origin:  "AutoboxModel/CanCommunication/CustomerCAN/SteeringInterface/limit steering angle/steering angle/Out1"
					 flags:   READONLY
 addr:    0x002a6270
}
					p_0_AutoboxModel_real_T_12[11106]
					{
					 type:    flt(64,IEEE)*
					 alias:   "signed steering angle"
					 origin:  "AutoboxModel/CanCommunication/CustomerCAN/SteeringInterface/limit steering angle/current_steering_wheel_angle/Out1"
					 flags:   READONLY
		 addr:    0x002a6270
		}

				endgroup -- subsystem-group "limit steering angle"

				-- Skipping label "Activation"

				-- Skipping label "Cancel"

				-- Skipping label "Clearance"

				p_0_AutoboxModel_boolean_T_18[11]
				{
				 type:    uint(8)*
				 alias:   "<controller_active>"
				 bitmask: 0x01
				 range:   < 0 ; 1 >
				 origin:  "AutoboxModel/CanCommunication/CustomerCAN/SteeringInterface/controller_active/Out1"
				 flags:   READONLY
 addr:    0x002a6288
}

			endgroup -- subsystem-group "SteeringInterface"
  
  
			group "VehicleDataMessage" -- subsystem-group

				p_0_AutoboxModel_Vehicle_Data_8[0]
				{
				 type:    struct AutoboxModel_Vehicle_Data*
				 alias:   "VehicleDataMessage"
				 flags:   OUTPUT|READONLY
		 addr:    0x002a6260
		}
				p_0_AutoboxModel_real_T_12[11090]
				{
				 type:    flt(64,IEEE)*
				 alias:   "status"
				 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}
				p_0_AutoboxModel_real_T_12[11091]
				{
				 type:    flt(64,IEEE)*
				 alias:   "t"
				 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}
				p_0_AutoboxModel_real_T_12[11092]
				{
				 type:    flt(64,IEEE)*
				 alias:   "deltat"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


				group "Bus\nCreator1" -- block-group
				{
				 block: "BusCreator"
				}
					p_0_AutoboxModel_Vehicle_Data_8[0]
					{
					 type:    struct AutoboxModel_Vehicle_Data*
					 alias:   "Out1"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6260
}


				endgroup -- block-group "Bus\nCreator1"

  
  
				group "Vehicle_Data" -- subsystem-group

					p_0_AutoboxModel_real_T_12[11087]
					{
					 type:    flt(64,IEEE)*
					 alias:   "VehicleVelocity"
					 flags:   OUTPUT|READONLY
			 addr:    0x002a6270
			}
					p_0_AutoboxModel_uint8_T_17[3639]
					{
					 type:    uint(8)*
					 alias:   "GearLeverPos"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6284
}
					p_0_AutoboxModel_real_T_12[11088]
					{
					 type:    flt(64,IEEE)*
					 alias:   "SteeringAngle"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
					p_0_AutoboxModel_boolean_T_18[26]
					{
					 type:    uint(8)*
					 alias:   "SteeringAngleSign"
					 range:   < 0 ; 1 >
					 bitmask: 0x01
					 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}
					p_0_AutoboxModel_boolean_T_18[27]
					{
					 type:    uint(8)*
					 alias:   "DriverBraking"
					 range:   < 0 ; 1 >
					 bitmask: 0x01
					 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}
					p_0_AutoboxModel_real_T_12[11089]
					{
					 type:    flt(64,IEEE)*
					 alias:   "ThrottleSetpoint"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
					p_0_AutoboxModel_real_T_12[11090]
					{
					 type:    flt(64,IEEE)*
					 alias:   "RX status"
					 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}
					p_0_AutoboxModel_real_T_12[11091]
					{
					 type:    flt(64,IEEE)*
					 alias:   "RX time"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
					p_0_AutoboxModel_real_T_12[11092]
					{
					 type:    flt(64,IEEE)*
					 alias:   "RX delta time"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}

				endgroup -- subsystem-group "Vehicle_Data"

				p_0_AutoboxModel_boolean_T_18[27]
				{
				 type:    uint(8)*
				 alias:   "DriverBraking"
				 bitmask: 0x01
				 range:   < 0 ; 1 >
				 origin:  "AutoboxModel/CanCommunication/CustomerCAN/VehicleDataMessage/Vehicle_Data/DriverBraking"
				 flags:   READONLY
 addr:    0x002a6288
}
				p_0_AutoboxModel_uint8_T_17[3639]
				{
				 type:    uint(8)*
				 alias:   "GearLeverPos"
				 origin:  "AutoboxModel/CanCommunication/CustomerCAN/VehicleDataMessage/Vehicle_Data/GearLeverPos"
				 flags:   READONLY
				 addr:    0x002a6284
				}
				p_0_AutoboxModel_real_T_12[11088]
				{
				 type:    flt(64,IEEE)*
				 alias:   "SteeringAngle"
				 origin:  "AutoboxModel/CanCommunication/CustomerCAN/VehicleDataMessage/Vehicle_Data/SteeringAngle"
				 flags:   READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_boolean_T_18[26]
				{
				 type:    uint(8)*
				 alias:   "SteeringAngleSign"
				 bitmask: 0x01
				 range:   < 0 ; 1 >
				 origin:  "AutoboxModel/CanCommunication/CustomerCAN/VehicleDataMessage/Vehicle_Data/SteeringAngleSign"
				 flags:   READONLY
			 addr:    0x002a6288
			}
				p_0_AutoboxModel_real_T_12[11089]
				{
				 type:    flt(64,IEEE)*
				 alias:   "ThrottleSetpoint"
				 origin:  "AutoboxModel/CanCommunication/CustomerCAN/VehicleDataMessage/Vehicle_Data/ThrottleSetpoint"
				 flags:   READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_real_T_12[11087]
				{
				 type:    flt(64,IEEE)*
				 alias:   "VehicleVelocity"
				 origin:  "AutoboxModel/CanCommunication/CustomerCAN/VehicleDataMessage/Vehicle_Data/VehicleVelocity"
				 flags:   READONLY
 addr:    0x002a6270
}

			endgroup -- subsystem-group "VehicleDataMessage"

			p_0_AutoboxModel_real_T_12[11082]
			{
			 type:    flt(64,IEEE)*
			 alias:   "<acceleration>"
			 origin:  "AutoboxModel/CanCommunication/CustomerCAN/Bus\nSelector/Out2"
			 flags:   READONLY
 addr:    0x002a6270
}
			p_0_AutoboxModel_boolean_T_18[11]
			{
			 type:    uint(8)*
			 alias:   "<controller_active>"
			 bitmask: 0x01
			 range:   < 0 ; 1 >
			 origin:  "AutoboxModel/CanCommunication/CustomerCAN/Bus\nSelector/Out3"
			 flags:   READONLY
 addr:    0x002a6288
}
			p_0_AutoboxModel_real_T_12[11069]
			{
			 type:    flt(64,IEEE)*
			 alias:   "<steering_angle>"
			 origin:  "AutoboxModel/CanCommunication/CustomerCAN/Bus\nSelector/Out1"
			 flags:   READONLY
		 addr:    0x002a6270
		}

		endgroup -- subsystem-group "CustomerCAN"
  
  
		group "VehicleCAN" -- subsystem-group

			p_0_AutoboxModel_vehicle_data_can_bus_1[0]
			{
			 type:    struct AutoboxModel_vehicle_data_can_bus*
			 alias:   "VehicleCANData"
			 flags:   OUTPUT|READONLY
		 addr:    0x002a6244
		}


			group "Bus\nAssignment" -- block-group
			{
			 block: "BusAssignment"
			}
				p_0_AutoboxModel_vehicle_data_can_bus_1[0]
				{
				 type:    struct AutoboxModel_vehicle_data_can_bus*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
			 addr:    0x002a6244
			}


			endgroup -- block-group "Bus\nAssignment"

			group "Constant" -- block-group
			{
			 block: "Constant"
			}
				-- Skipping output Out1
				trcref0_default_vehicle_state_bus
				{
				 refgroup: "/Tunable Parameters"
				 refvar:   "default_vehicle_state_bus"
				 alias:    "default_vehicle_state_bus"
}
				trcref0_Value
				{
				 refgroup: "/Tunable Parameters"
				 refvar:   "default_vehicle_state_bus"
				 alias:    "Value"
				 flags:    DEPRECATED|HIDDEN
		}


			endgroup -- block-group "Constant"

  
  
			group "MotionMessage" -- subsystem-group

				p_0_AutoboxModel_Motion_7[0]
				{
				 type:    struct AutoboxModel_Motion*
				 alias:   "MotionMessage"
				 flags:   OUTPUT|READONLY
 addr:    0x002a625c
}
				p_0_AutoboxModel_real_T_12[11025]
				{
				 type:    flt(64,IEEE)*
				 alias:   "status"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_real_T_12[11026]
				{
				 type:    flt(64,IEEE)*
				 alias:   "t"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_real_T_12[11027]
				{
				 type:    flt(64,IEEE)*
				 alias:   "deltat"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


				group "Bus\nCreator" -- block-group
				{
				 block: "BusCreator"
				}
					p_0_AutoboxModel_Motion_7[0]
					{
					 type:    struct AutoboxModel_Motion*
					 alias:   "Out1"
					 flags:   OUTPUT|READONLY
 addr:    0x002a625c
}


				endgroup -- block-group "Bus\nCreator"

  
  
				group "Motion" -- subsystem-group

					p_0_AutoboxModel_uint8_T_17[2416]
					{
					 type:    uint(8)*
					 alias:   "CRC"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6284
}
					p_0_AutoboxModel_uint8_T_17[2417]
					{
					 type:    uint(8)*
					 alias:   "Counter"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6284
}
					p_0_AutoboxModel_boolean_T_18[5]
					{
					 type:    uint(8)*
					 alias:   "YawRateSign"
					 range:   < 0 ; 1 >
					 bitmask: 0x01
					 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}
					p_0_AutoboxModel_real_T_12[11021]
					{
					 type:    flt(64,IEEE)*
					 alias:   "YawRate"
					 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}
					p_0_AutoboxModel_real_T_12[11022]
					{
					 type:    flt(64,IEEE)*
					 alias:   "LongitudinalAcceleration"
					 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}
					p_0_AutoboxModel_real_T_12[11023]
					{
					 type:    flt(64,IEEE)*
					 alias:   "LateralAcceleration"
					 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}
					p_0_AutoboxModel_real_T_12[11024]
					{
					 type:    flt(64,IEEE)*
					 alias:   "VehicleVelocity"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
					p_0_AutoboxModel_real_T_12[11025]
					{
					 type:    flt(64,IEEE)*
					 alias:   "RX status"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
					p_0_AutoboxModel_real_T_12[11026]
					{
					 type:    flt(64,IEEE)*
					 alias:   "RX time"
					 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}
					p_0_AutoboxModel_real_T_12[11027]
					{
					 type:    flt(64,IEEE)*
					 alias:   "RX delta time"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}

				endgroup -- subsystem-group "Motion"

				p_0_AutoboxModel_uint8_T_17[2416]
				{
				 type:    uint(8)*
				 alias:   "CRC"
				 origin:  "AutoboxModel/CanCommunication/VehicleCAN/MotionMessage/Motion/CRC"
				 flags:   READONLY
 addr:    0x002a6284
}
				p_0_AutoboxModel_uint8_T_17[2417]
				{
				 type:    uint(8)*
				 alias:   "Counter"
				 origin:  "AutoboxModel/CanCommunication/VehicleCAN/MotionMessage/Motion/Counter"
				 flags:   READONLY
 addr:    0x002a6284
}
				p_0_AutoboxModel_real_T_12[11023]
				{
				 type:    flt(64,IEEE)*
				 alias:   "LateralAcceleration"
				 origin:  "AutoboxModel/CanCommunication/VehicleCAN/MotionMessage/Motion/LateralAcceleration"
				 flags:   READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_real_T_12[11022]
				{
				 type:    flt(64,IEEE)*
				 alias:   "LongitudinalAcceleration"
				 origin:  "AutoboxModel/CanCommunication/VehicleCAN/MotionMessage/Motion/LongitudinalAcceleration"
				 flags:   READONLY
		 addr:    0x002a6270
		}
				p_0_AutoboxModel_Motion_7[0]
				{
				 type:    struct AutoboxModel_Motion*
				 alias:   "Motion"
				 origin:  "AutoboxModel/CanCommunication/VehicleCAN/MotionMessage/Bus\nCreator/Out1"
				 flags:   READONLY
 addr:    0x002a625c
}
				p_0_AutoboxModel_real_T_12[11024]
				{
				 type:    flt(64,IEEE)*
				 alias:   "VehicleVelocity"
				 origin:  "AutoboxModel/CanCommunication/VehicleCAN/MotionMessage/Motion/VehicleVelocity"
				 flags:   READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_real_T_12[11021]
				{
				 type:    flt(64,IEEE)*
				 alias:   "YawRate"
				 origin:  "AutoboxModel/CanCommunication/VehicleCAN/MotionMessage/Motion/YawRate"
				 flags:   READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_boolean_T_18[5]
				{
				 type:    uint(8)*
				 alias:   "YawRateSign"
				 bitmask: 0x01
				 range:   < 0 ; 1 >
				 origin:  "AutoboxModel/CanCommunication/VehicleCAN/MotionMessage/Motion/YawRateSign"
				 flags:   READONLY
 addr:    0x002a6288
}

			endgroup -- subsystem-group "MotionMessage"
  
  
			group "SteeringMessage" -- subsystem-group

				p_0_AutoboxModel_Steering_9[0]
				{
				 type:    struct AutoboxModel_Steering*
				 alias:   "SteeringMessage"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6264
}
				p_0_AutoboxModel_real_T_12[11030]
				{
				 type:    flt(64,IEEE)*
				 alias:   "status"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_real_T_12[11031]
				{
				 type:    flt(64,IEEE)*
				 alias:   "t"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_real_T_12[11032]
				{
				 type:    flt(64,IEEE)*
				 alias:   "dt"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


				group "Bus\nCreator" -- block-group
				{
				 block: "BusCreator"
				}
					p_0_AutoboxModel_Steering_9[0]
					{
					 type:    struct AutoboxModel_Steering*
					 alias:   "Out1"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6264
}


				endgroup -- block-group "Bus\nCreator"

  
  
				group "Steering" -- subsystem-group

					p_0_AutoboxModel_uint8_T_17[2418]
					{
					 type:    uint(8)*
					 alias:   "CRC"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6284
}
					p_0_AutoboxModel_uint8_T_17[2419]
					{
					 type:    uint(8)*
					 alias:   "Counter"
					 flags:   OUTPUT|READONLY
		 addr:    0x002a6284
		}
					p_0_AutoboxModel_boolean_T_18[6]
					{
					 type:    uint(8)*
					 alias:   "SteeringWheelAngleSign"
					 range:   < 0 ; 1 >
					 bitmask: 0x01
					 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}
					p_0_AutoboxModel_boolean_T_18[7]
					{
					 type:    uint(8)*
					 alias:   "SteeringWheelSpeedSign"
					 range:   < 0 ; 1 >
					 bitmask: 0x01
					 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}
					p_0_AutoboxModel_boolean_T_18[8]
					{
					 type:    uint(8)*
					 alias:   "SteeringWheelTorqueSign"
					 range:   < 0 ; 1 >
					 bitmask: 0x01
					 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}
					p_0_AutoboxModel_real_T_12[11028]
					{
					 type:    flt(64,IEEE)*
					 alias:   "SteeringWheelTorque"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
					p_0_AutoboxModel_real_T_12[11029]
					{
					 type:    flt(64,IEEE)*
					 alias:   "SteeringWheelAngle"
					 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}
					p_0_AutoboxModel_uint16_T_15[2]
					{
					 type:    uint(16)*
					 alias:   "SteeringWheelSpeed"
					 flags:   OUTPUT|READONLY
		 addr:    0x002a627c
		}
					p_0_AutoboxModel_real_T_12[11030]
					{
					 type:    flt(64,IEEE)*
					 alias:   "RX status"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
					p_0_AutoboxModel_real_T_12[11031]
					{
					 type:    flt(64,IEEE)*
					 alias:   "RX time"
					 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
					p_0_AutoboxModel_real_T_12[11032]
					{
					 type:    flt(64,IEEE)*
					 alias:   "RX delta time"
					 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}

				endgroup -- subsystem-group "Steering"

				p_0_AutoboxModel_uint8_T_17[2418]
				{
				 type:    uint(8)*
				 alias:   "CRC"
				 origin:  "AutoboxModel/CanCommunication/VehicleCAN/SteeringMessage/Steering/CRC"
				 flags:   READONLY
 addr:    0x002a6284
}
				p_0_AutoboxModel_uint8_T_17[2419]
				{
				 type:    uint(8)*
				 alias:   "Counter"
				 origin:  "AutoboxModel/CanCommunication/VehicleCAN/SteeringMessage/Steering/Counter"
				 flags:   READONLY
 addr:    0x002a6284
}
				p_0_AutoboxModel_Steering_9[0]
				{
				 type:    struct AutoboxModel_Steering*
				 alias:   "Steering"
				 origin:  "AutoboxModel/CanCommunication/VehicleCAN/SteeringMessage/Bus\nCreator/Out1"
				 flags:   READONLY
 addr:    0x002a6264
}
				p_0_AutoboxModel_real_T_12[11029]
				{
				 type:    flt(64,IEEE)*
				 alias:   "SteeringWheelAngle"
				 origin:  "AutoboxModel/CanCommunication/VehicleCAN/SteeringMessage/Steering/SteeringWheelAngle"
				 flags:   READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_boolean_T_18[6]
				{
				 type:    uint(8)*
				 alias:   "SteeringWheelAngleSign"
				 bitmask: 0x01
				 range:   < 0 ; 1 >
				 origin:  "AutoboxModel/CanCommunication/VehicleCAN/SteeringMessage/Steering/SteeringWheelAngleSign"
				 flags:   READONLY
				 addr:    0x002a6288
				}
				p_0_AutoboxModel_uint16_T_15[2]
				{
				 type:    uint(16)*
				 alias:   "SteeringWheelSpeed"
				 origin:  "AutoboxModel/CanCommunication/VehicleCAN/SteeringMessage/Steering/SteeringWheelSpeed"
				 flags:   READONLY
 addr:    0x002a627c
}
				p_0_AutoboxModel_boolean_T_18[7]
				{
				 type:    uint(8)*
				 alias:   "SteeringWheelSpeedSign"
				 bitmask: 0x01
				 range:   < 0 ; 1 >
				 origin:  "AutoboxModel/CanCommunication/VehicleCAN/SteeringMessage/Steering/SteeringWheelSpeedSign"
				 flags:   READONLY
 addr:    0x002a6288
}
				p_0_AutoboxModel_real_T_12[11028]
				{
				 type:    flt(64,IEEE)*
				 alias:   "SteeringWheelTorque"
				 origin:  "AutoboxModel/CanCommunication/VehicleCAN/SteeringMessage/Steering/SteeringWheelTorque"
				 flags:   READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_boolean_T_18[8]
				{
				 type:    uint(8)*
				 alias:   "SteeringWheelTorqueSign"
				 bitmask: 0x01
				 range:   < 0 ; 1 >
				 origin:  "AutoboxModel/CanCommunication/VehicleCAN/SteeringMessage/Steering/SteeringWheelTorqueSign"
				 flags:   READONLY
			 addr:    0x002a6288
			}

			endgroup -- subsystem-group "SteeringMessage"


		endgroup -- subsystem-group "VehicleCAN"


	endgroup -- subsystem-group "CanCommunication"
  
  
	group "EthernetCommunication" -- subsystem-group

		p_0_AutoboxModel_ControlCommandToAutobox_6[0]
		{
		 type:    struct AutoboxModel_ControlCommandToAutobox*
		 alias:   "ControlBus"
		 flags:   OUTPUT|READONLY
 addr:    0x002a6258
}
		p_0_AutoboxModel_ControlTrajectory_0[0]
		{
		 type:    struct AutoboxModel_ControlTrajectory*
		 alias:   "TrajectoryBus\n"
		 flags:   OUTPUT|READONLY
 addr:    0x002a6240
}
		p_0_AutoboxModel_LocalizationToAutobox_2[0]
		{
		 type:    struct AutoboxModel_LocalizationToAutobox*
		 alias:   "LocalizationBus\n"
		 flags:   OUTPUT|READONLY
		 addr:    0x002a6248
		}


		group "Bus\nSelector" -- block-group
		{
		 block: "BusSelector"
		}
			-- Skipping output Out1


		endgroup -- block-group "Bus\nSelector"

		group "Bus\nSelector1" -- block-group
		{
		 block: "BusSelector"
		}
			-- Skipping output Out1


		endgroup -- block-group "Bus\nSelector1"

		group "Bus\nSelector2" -- block-group
		{
		 block: "BusSelector"
		}
			-- Skipping output Out1


		endgroup -- block-group "Bus\nSelector2"

		group "S-Function1" -- block-group
		{
		 block: "S-Function"
		}
			p_0_AutoboxModel_uint8_T_17[0]
			{
			 type:    AutoboxModel_ArrayDT3_1208*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
		 addr:    0x002a6284
		}
			p_0_AutoboxModel_uint16_T_15[0]
			{
			 type:    uint(16)*
			 alias:   "Out2"
			 flags:   OUTPUT|READONLY
		 addr:    0x002a627c
		}
			p_0_AutoboxModel_boolean_T_18[1]
			{
			 type:    uint(8)*
			 alias:   "Out3"
			 range:   < 0 ; 1 >
			 bitmask: 0x01
			 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


		endgroup -- block-group "S-Function1"

		group "S-Function3" -- block-group
		{
		 block: "S-Function"
		}
			p_0_AutoboxModel_uint8_T_17[1208]
			{
			 type:    AutoboxModel_ArrayDT3_1208*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
 addr:    0x002a6284
}
			p_0_AutoboxModel_uint16_T_15[1]
			{
			 type:    uint(16)*
			 alias:   "Out2"
			 flags:   OUTPUT|READONLY
		 addr:    0x002a627c
		}
			p_0_AutoboxModel_boolean_T_18[4]
			{
			 type:    uint(8)*
			 alias:   "Out3"
			 range:   < 0 ; 1 >
			 bitmask: 0x01
			 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


		endgroup -- block-group "S-Function3"

		group "S-Function5" -- block-group
		{
		 block: "S-Function"
		}
			p_0_AutoboxModel_uint8_T_17[2420]
			{
			 type:    AutoboxModel_ArrayDT3_1208*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
		 addr:    0x002a6284
		}
			p_0_AutoboxModel_uint16_T_15[3]
			{
			 type:    uint(16)*
			 alias:   "Out2"
			 flags:   OUTPUT|READONLY
 addr:    0x002a627c
}
			p_0_AutoboxModel_boolean_T_18[10]
			{
			 type:    uint(8)*
			 alias:   "Out3"
			 range:   < 0 ; 1 >
			 bitmask: 0x01
			 flags:   OUTPUT|READONLY
		 addr:    0x002a6288
		}


		endgroup -- block-group "S-Function5"

  
  
		group "AssembleControlBus" -- subsystem-group

			p_0_AutoboxModel_ControlCommandToAutobox_6[0]
			{
			 type:    struct AutoboxModel_ControlCommandToAutobox*
			 alias:   "ControlBus"
			 flags:   OUTPUT|READONLY
 addr:    0x002a6258
}


			group "In1" -- block-group
			{
			 block: "Inport"
			}
				p_0_AutoboxModel_uint8_T_17[2420]
				{
				 type:    AutoboxModel_ArrayDT3_1208*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6284
}


			endgroup -- block-group "In1"

			group "In2" -- block-group
			{
			 block: "Inport"
			}
				p_0_AutoboxModel_uint16_T_15[3]
				{
				 type:    uint(16)*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a627c
}


			endgroup -- block-group "In2"

			group "In3" -- block-group
			{
			 block: "Inport"
			}
				p_0_AutoboxModel_boolean_T_18[10]
				{
				 type:    uint(8)*
				 alias:   "Out1"
				 range:   < 0 ; 1 >
				 bitmask: 0x01
				 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


			endgroup -- block-group "In3"

			group "Bus\nAssignment" -- block-group
			{
			 block: "BusAssignment"
			}
				p_0_AutoboxModel_ControlCommandToAutobox_6[0]
				{
				 type:    struct AutoboxModel_ControlCommandToAutobox*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6258
}


			endgroup -- block-group "Bus\nAssignment"

			group "Constant" -- block-group
			{
			 block: "Constant"
			}
				-- Skipping output Out1
				trcref0_default_control_command_apollo_bus
				{
				 refgroup: "/Tunable Parameters"
				 refvar:   "default_control_command_apollo_bus"
				 alias:    "default_control_command_apollo_bus"
		}
				trcref0_Value
				{
				 refgroup: "/Tunable Parameters"
				 refvar:   "default_control_command_apollo_bus"
				 alias:    "Value"
				 flags:    DEPRECATED|HIDDEN
}


			endgroup -- block-group "Constant"

			group "S-Function4" -- block-group
			{
			 block: "S-Function"
			}
				p_0_AutoboxModel_real_T_12[11050]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}
				p_0_AutoboxModel_real_T_12[11051]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out2"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_real_T_12[11052]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out3"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_real_T_12[11053]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out4"
				 flags:   OUTPUT|READONLY
				 addr:    0x002a6270
				}
				p_0_AutoboxModel_real_T_12[11054]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out5"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_real_T_12[11055]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out6"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_real_T_12[11056]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out7"
				 flags:   OUTPUT|READONLY
				 addr:    0x002a6270
				}


			endgroup -- block-group "S-Function4"


			p_0_AutoboxModel_real_T_12[11056]
			{
			 type:    flt(64,IEEE)*
			 alias:   "acceleration"
			 origin:  "AutoboxModel/EthernetCommunication/AssembleControlBus/S-Function4/Out7"
			 flags:   READONLY
 addr:    0x002a6270
}
			p_0_AutoboxModel_real_T_12[11053]
			{
			 type:    flt(64,IEEE)*
			 alias:   "brake"
			 origin:  "AutoboxModel/EthernetCommunication/AssembleControlBus/S-Function4/Out4"
			 flags:   READONLY
 addr:    0x002a6270
}
			p_0_AutoboxModel_real_T_12[11050]
			{
			 type:    flt(64,IEEE)*
			 alias:   "sequence_num"
			 origin:  "AutoboxModel/EthernetCommunication/AssembleControlBus/S-Function4/Out1"
			 flags:   READONLY
		 addr:    0x002a6270
		}
			p_0_AutoboxModel_real_T_12[11054]
			{
			 type:    flt(64,IEEE)*
			 alias:   "steering_rate"
			 origin:  "AutoboxModel/EthernetCommunication/AssembleControlBus/S-Function4/Out5"
			 flags:   READONLY
 addr:    0x002a6270
}
			p_0_AutoboxModel_real_T_12[11055]
			{
			 type:    flt(64,IEEE)*
			 alias:   "steering_target"
			 origin:  "AutoboxModel/EthernetCommunication/AssembleControlBus/S-Function4/Out6"
			 flags:   READONLY
 addr:    0x002a6270
}
			p_0_AutoboxModel_real_T_12[11052]
			{
			 type:    flt(64,IEEE)*
			 alias:   "throttle"
			 origin:  "AutoboxModel/EthernetCommunication/AssembleControlBus/S-Function4/Out3"
			 flags:   READONLY
 addr:    0x002a6270
}
			p_0_AutoboxModel_real_T_12[11051]
			{
			 type:    flt(64,IEEE)*
			 alias:   "timestamp_sec"
			 origin:  "AutoboxModel/EthernetCommunication/AssembleControlBus/S-Function4/Out2"
			 flags:   READONLY
		 addr:    0x002a6270
		}

		endgroup -- subsystem-group "AssembleControlBus"
  
  
		group "AssembleLocalizationBus" -- subsystem-group

			p_0_AutoboxModel_LocalizationToAutobox_2[0]
			{
			 type:    struct AutoboxModel_LocalizationToAutobox*
			 alias:   "LocalizationBus\n"
			 flags:   OUTPUT|READONLY
 addr:    0x002a6248
}


			group "In1" -- block-group
			{
			 block: "Inport"
			}
				p_0_AutoboxModel_uint8_T_17[1208]
				{
				 type:    AutoboxModel_ArrayDT3_1208*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6284
}


			endgroup -- block-group "In1"

			group "In2" -- block-group
			{
			 block: "Inport"
			}
				p_0_AutoboxModel_uint16_T_15[1]
				{
				 type:    uint(16)*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a627c
}


			endgroup -- block-group "In2"

			group "In3" -- block-group
			{
			 block: "Inport"
			}
				p_0_AutoboxModel_boolean_T_18[4]
				{
				 type:    uint(8)*
				 alias:   "Out1"
				 range:   < 0 ; 1 >
				 bitmask: 0x01
				 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


			endgroup -- block-group "In3"

			group "Bus\nAssignment" -- block-group
			{
			 block: "BusAssignment"
			}
				p_0_AutoboxModel_LocalizationToAutobox_2[0]
				{
				 type:    struct AutoboxModel_LocalizationToAutobox*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
		 addr:    0x002a6248
		}


			endgroup -- block-group "Bus\nAssignment"

			group "Constant" -- block-group
			{
			 block: "Constant"
			}
				-- Skipping output Out1
				trcref0_default_localization_bus
				{
				 refgroup: "/Tunable Parameters"
				 refvar:   "default_localization_bus"
				 alias:    "default_localization_bus"
}
				trcref0_Value
				{
				 refgroup: "/Tunable Parameters"
				 refvar:   "default_localization_bus"
				 alias:    "Value"
				 flags:    DEPRECATED|HIDDEN
}


			endgroup -- block-group "Constant"

			group "S-Function" -- block-group
			{
			 block: "S-Function"
			}
				p_0_AutoboxModel_real_T_12[11003]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_real_T_12[11004]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out2"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_real_T_12[11005]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out3"
				 flags:   OUTPUT|READONLY
				 addr:    0x002a6270
				}
				p_0_AutoboxModel_real_T_12[11006]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out4"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_real_T_12[11007]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out5"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_real_T_12[11008]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out6"
				 flags:   OUTPUT|READONLY
				 addr:    0x002a6270
				}
				p_0_AutoboxModel_real_T_12[11009]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out7"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_real_T_12[11010]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out8"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_real_T_12[11011]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out9"
				 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}
				p_0_AutoboxModel_real_T_12[11012]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out10"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_real_T_12[11013]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out11"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_real_T_12[11014]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out12"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_real_T_12[11015]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out13"
				 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}
				p_0_AutoboxModel_real_T_12[11016]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out14"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_real_T_12[11017]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out15"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_real_T_12[11018]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out16"
				 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}
				p_0_AutoboxModel_real_T_12[11019]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out17"
				 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}
				p_0_AutoboxModel_real_T_12[11020]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out18"
				 flags:   OUTPUT|READONLY
			 addr:    0x002a6270
			}


			endgroup -- block-group "S-Function"



		endgroup -- subsystem-group "AssembleLocalizationBus"
  
  
		group "AssembleTrajectoryBus" -- subsystem-group

			p_0_AutoboxModel_ControlTrajectory_0[0]
			{
			 type:    struct AutoboxModel_ControlTrajectory*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
 addr:    0x002a6240
}


			group "In1" -- block-group
			{
			 block: "Inport"
			}
				p_0_AutoboxModel_uint8_T_17[0]
				{
				 type:    AutoboxModel_ArrayDT3_1208*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6284
}


			endgroup -- block-group "In1"

			group "In2" -- block-group
			{
			 block: "Inport"
			}
				p_0_AutoboxModel_uint16_T_15[0]
				{
				 type:    uint(16)*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a627c
}


			endgroup -- block-group "In2"

			group "In3" -- block-group
			{
			 block: "Inport"
			}
				p_0_AutoboxModel_boolean_T_18[1]
				{
				 type:    uint(8)*
				 alias:   "Out1"
				 range:   < 0 ; 1 >
				 bitmask: 0x01
				 flags:   OUTPUT|READONLY
		 addr:    0x002a6288
		}


			endgroup -- block-group "In3"

			group "Bus\nAssignment" -- block-group
			{
			 block: "BusAssignment"
			}
				p_0_AutoboxModel_ControlTrajectory_0[0]
				{
				 type:    struct AutoboxModel_ControlTrajectory*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6240
}


			endgroup -- block-group "Bus\nAssignment"

			group "Constant" -- block-group
			{
			 block: "Constant"
			}
				-- Skipping output Out1
				trcref0_default_trajectory_bus
				{
				 refgroup: "/Tunable Parameters"
				 refvar:   "default_trajectory_bus"
				 alias:    "default_trajectory_bus"
		}
				trcref0_Value
				{
				 refgroup: "/Tunable Parameters"
				 refvar:   "default_trajectory_bus"
				 alias:    "Value"
				 flags:    DEPRECATED|HIDDEN
				}


			endgroup -- block-group "Constant"

			group "S-Function2" -- block-group
			{
			 block: "S-Function"
			}
				p_0_AutoboxModel_real_T_12[0]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_real_T_12[1]
				{
				 type:    AutoboxModel_ControlTrajectory_x_1*
				 alias:   "Out2"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_int32_T_14[1]
				{
				 type:    int(32)*
				 alias:   "Out3"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6278
}
				p_0_AutoboxModel_real_T_12[1001]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out4"
				 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}
				p_0_AutoboxModel_real_T_12[1002]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out5"
				 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}
				p_0_AutoboxModel_boolean_T_18[2]
				{
				 type:    uint(8)*
				 alias:   "Out6"
				 range:   < 0 ; 1 >
				 bitmask: 0x01
				 flags:   OUTPUT|READONLY
		 addr:    0x002a6288
		}
				p_0_AutoboxModel_real_T_12[1003]
				{
				 type:    AutoboxModel_ControlTrajectory_x_1*
				 alias:   "Out7"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_real_T_12[2003]
				{
				 type:    AutoboxModel_ControlTrajectory_x_1*
				 alias:   "Out8"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_real_T_12[3003]
				{
				 type:    AutoboxModel_ControlTrajectory_x_1*
				 alias:   "Out9"
				 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}
				p_0_AutoboxModel_real_T_12[4003]
				{
				 type:    AutoboxModel_ControlTrajectory_x_1*
				 alias:   "Out10"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_real_T_12[5003]
				{
				 type:    AutoboxModel_ControlTrajectory_x_1*
				 alias:   "Out11"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_real_T_12[6003]
				{
				 type:    AutoboxModel_ControlTrajectory_x_1*
				 alias:   "Out12"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_real_T_12[7003]
				{
				 type:    AutoboxModel_ControlTrajectory_x_1*
				 alias:   "Out13"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_real_T_12[8003]
				{
				 type:    AutoboxModel_ControlTrajectory_x_1*
				 alias:   "Out14"
				 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}
				p_0_AutoboxModel_real_T_12[9003]
				{
				 type:    AutoboxModel_ControlTrajectory_x_1*
				 alias:   "Out15"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_0_AutoboxModel_uint32_T_13[302]
				{
				 type:    uint(32)*
				 alias:   "Out16"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6274
}
				p_0_AutoboxModel_real_T_12[10003]
				{
				 type:    AutoboxModel_ControlTrajectory_x_1*
				 alias:   "Out17"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


			endgroup -- block-group "S-Function2"



		endgroup -- subsystem-group "AssembleTrajectoryBus"
  
  
		group "ETHERNET_UDP_RX_BL1" -- subsystem-group

			p_0_AutoboxModel_uint32_T_13[303]
			{
			 type:    AutoboxModel_ArrayDT7_302*
			 alias:   "Data"
			 flags:   OUTPUT|READONLY
 addr:    0x002a6274
}
			p_0_AutoboxModel_int32_T_14[2]
			{
			 type:    int(32)*
			 alias:   "Message Size"
			 flags:   OUTPUT|READONLY
 addr:    0x002a6278
}
			p_0_AutoboxModel_boolean_T_18[3]
			{
			 type:    uint(8)*
			 alias:   "Status"
			 range:   < 0 ; 1 >
			 bitmask: 0x01
			 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


			group "dsethernetudp_rx" -- block-group
			{
			 block: "S-Function"
			}
				p_0_AutoboxModel_uint32_T_13[303]
				{
				 type:    AutoboxModel_ArrayDT7_302*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6274
}
				p_0_AutoboxModel_int32_T_14[2]
				{
				 type:    int(32)*
				 alias:   "Out2"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6278
}
				p_0_AutoboxModel_boolean_T_18[3]
				{
				 type:    uint(8)*
				 alias:   "Out3"
				 range:   < 0 ; 1 >
				 bitmask: 0x01
				 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}

				p_1_AutoboxModel_real_T_9[236]
				{
				 type:    AutoboxModel_ArrayDT0_27*
				 alias:   "P1"
				 value:   [114.0, 116.0, 105.0, 95.0, 101.0, 116.0, 104.0, 101.0, 114.0, 110.0, 101.0, 116.0, 95.0, 105.0, 110.0, 116.0, 101.0, 114.0, 102.0, 97.0, 99.0, 101.0, 95.0, 110.0, 97.0, 109.0, 101.0]
				 flags:   PARAM
 addr:    0x002a62b0
}
				p_1_AutoboxModel_real_T_9[265]
				{
				 type:    flt(64,IEEE)*
				 alias:   "P2"
				 value:   1.0
				 flags:   PARAM
		 addr:    0x002a62b0
		}
				p_1_AutoboxModel_real_T_9[268]
				{
				 type:    flt(64,IEEE)*
				 alias:   "P3"
				 value:   1.0
				 flags:   PARAM
 addr:    0x002a62b0
}
				p_1_AutoboxModel_real_T_9[271]
				{
				 type:    flt(64,IEEE)*
				 alias:   "P4"
				 value:   1.0
				 flags:   PARAM
 addr:    0x002a62b0
}
				p_1_AutoboxModel_real_T_9[274]
				{
				 type:    flt(64,IEEE)*
				 alias:   "P5"
				 value:   2.0
				 flags:   PARAM
 addr:    0x002a62b0
}
				p_1_AutoboxModel_real_T_9[277]
				{
				 type:    flt(64,IEEE)*
				 alias:   "P6"
				 value:   1208.0
				 flags:   PARAM
 addr:    0x002a62b0
}
				p_1_AutoboxModel_real_T_9[280]
				{
				 type:    AutoboxModel_ArrayDT0_18*
				 alias:   "P7"
				 value:   [49.0, 57.0, 50.0, 46.0, 49.0, 54.0, 56.0, 46.0, 49.0, 52.0, 48.0, 46.0, 49.0, 58.0, 53.0, 48.0, 48.0, 49.0]
				 flags:   PARAM
		 addr:    0x002a62b0
		}
				p_1_AutoboxModel_real_T_9[300]
				{
				 type:    AutoboxModel_ArrayDT0_9*
				 alias:   "P8"
				 value:   [48.0, 46.0, 48.0, 46.0, 48.0, 46.0, 48.0, 58.0, 48.0]
				 flags:   PARAM
		 addr:    0x002a62b0
		}


			endgroup -- block-group "dsethernetudp_rx"



		endgroup -- subsystem-group "ETHERNET_UDP_RX_BL1"
  
  
		group "ETHERNET_UDP_RX_BL2" -- subsystem-group

			p_0_AutoboxModel_uint32_T_13[0]
			{
			 type:    AutoboxModel_ArrayDT7_302*
			 alias:   "Data"
			 flags:   OUTPUT|READONLY
 addr:    0x002a6274
}
			p_0_AutoboxModel_int32_T_14[0]
			{
			 type:    int(32)*
			 alias:   "Message Size"
			 flags:   OUTPUT|READONLY
 addr:    0x002a6278
}
			p_0_AutoboxModel_boolean_T_18[0]
			{
			 type:    uint(8)*
			 alias:   "Status"
			 range:   < 0 ; 1 >
			 bitmask: 0x01
			 flags:   OUTPUT|READONLY
		 addr:    0x002a6288
		}


			group "dsethernetudp_rx" -- block-group
			{
			 block: "S-Function"
			}
				p_0_AutoboxModel_uint32_T_13[0]
				{
				 type:    AutoboxModel_ArrayDT7_302*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6274
}
				p_0_AutoboxModel_int32_T_14[0]
				{
				 type:    int(32)*
				 alias:   "Out2"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6278
}
				p_0_AutoboxModel_boolean_T_18[0]
				{
				 type:    uint(8)*
				 alias:   "Out3"
				 range:   < 0 ; 1 >
				 bitmask: 0x01
				 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}

				p_1_AutoboxModel_real_T_9[161]
				{
				 type:    AutoboxModel_ArrayDT0_27*
				 alias:   "P1"
				 value:   [114.0, 116.0, 105.0, 95.0, 101.0, 116.0, 104.0, 101.0, 114.0, 110.0, 101.0, 116.0, 95.0, 105.0, 110.0, 116.0, 101.0, 114.0, 102.0, 97.0, 99.0, 101.0, 95.0, 110.0, 97.0, 109.0, 101.0]
				 flags:   PARAM
 addr:    0x002a62b0
}
				p_1_AutoboxModel_real_T_9[190]
				{
				 type:    flt(64,IEEE)*
				 alias:   "P2"
				 value:   1.0
				 flags:   PARAM
				 addr:    0x002a62b0
				}
				p_1_AutoboxModel_real_T_9[193]
				{
				 type:    flt(64,IEEE)*
				 alias:   "P3"
				 value:   1.0
				 flags:   PARAM
 addr:    0x002a62b0
}
				p_1_AutoboxModel_real_T_9[196]
				{
				 type:    flt(64,IEEE)*
				 alias:   "P4"
				 value:   1.0
				 flags:   PARAM
 addr:    0x002a62b0
}
				p_1_AutoboxModel_real_T_9[199]
				{
				 type:    flt(64,IEEE)*
				 alias:   "P5"
				 value:   1.0
				 flags:   PARAM
 addr:    0x002a62b0
}
				p_1_AutoboxModel_real_T_9[202]
				{
				 type:    flt(64,IEEE)*
				 alias:   "P6"
				 value:   1208.0
				 flags:   PARAM
			 addr:    0x002a62b0
			}
				p_1_AutoboxModel_real_T_9[205]
				{
				 type:    AutoboxModel_ArrayDT0_18*
				 alias:   "P7"
				 value:   [49.0, 57.0, 50.0, 46.0, 49.0, 54.0, 56.0, 46.0, 49.0, 52.0, 48.0, 46.0, 49.0, 58.0, 53.0, 48.0, 48.0, 48.0]
				 flags:   PARAM
 addr:    0x002a62b0
}
				p_1_AutoboxModel_real_T_9[225]
				{
				 type:    AutoboxModel_ArrayDT0_9*
				 alias:   "P8"
				 value:   [48.0, 46.0, 48.0, 46.0, 48.0, 46.0, 48.0, 58.0, 48.0]
				 flags:   PARAM
 addr:    0x002a62b0
}


			endgroup -- block-group "dsethernetudp_rx"



		endgroup -- subsystem-group "ETHERNET_UDP_RX_BL2"
  
  
		group "ETHERNET_UDP_RX_BL3" -- subsystem-group

			p_0_AutoboxModel_uint32_T_13[605]
			{
			 type:    AutoboxModel_ArrayDT7_302*
			 alias:   "Data"
			 flags:   OUTPUT|READONLY
		 addr:    0x002a6274
		}
			p_0_AutoboxModel_int32_T_14[3]
			{
			 type:    int(32)*
			 alias:   "Message Size"
			 flags:   OUTPUT|READONLY
		 addr:    0x002a6278
		}
			p_0_AutoboxModel_boolean_T_18[9]
			{
			 type:    uint(8)*
			 alias:   "Status"
			 range:   < 0 ; 1 >
			 bitmask: 0x01
			 flags:   OUTPUT|READONLY
		 addr:    0x002a6288
		}


			group "dsethernetudp_rx" -- block-group
			{
			 block: "S-Function"
			}
				p_0_AutoboxModel_uint32_T_13[605]
				{
				 type:    AutoboxModel_ArrayDT7_302*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6274
}
				p_0_AutoboxModel_int32_T_14[3]
				{
				 type:    int(32)*
				 alias:   "Out2"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6278
}
				p_0_AutoboxModel_boolean_T_18[9]
				{
				 type:    uint(8)*
				 alias:   "Out3"
				 range:   < 0 ; 1 >
				 bitmask: 0x01
				 flags:   OUTPUT|READONLY
		 addr:    0x002a6288
		}

				p_1_AutoboxModel_real_T_9[312]
				{
				 type:    AutoboxModel_ArrayDT0_27*
				 alias:   "P1"
				 value:   [114.0, 116.0, 105.0, 95.0, 101.0, 116.0, 104.0, 101.0, 114.0, 110.0, 101.0, 116.0, 95.0, 105.0, 110.0, 116.0, 101.0, 114.0, 102.0, 97.0, 99.0, 101.0, 95.0, 110.0, 97.0, 109.0, 101.0]
				 flags:   PARAM
 addr:    0x002a62b0
}
				p_1_AutoboxModel_real_T_9[341]
				{
				 type:    flt(64,IEEE)*
				 alias:   "P2"
				 value:   1.0
				 flags:   PARAM
		 addr:    0x002a62b0
		}
				p_1_AutoboxModel_real_T_9[344]
				{
				 type:    flt(64,IEEE)*
				 alias:   "P3"
				 value:   1.0
				 flags:   PARAM
 addr:    0x002a62b0
}
				p_1_AutoboxModel_real_T_9[347]
				{
				 type:    flt(64,IEEE)*
				 alias:   "P4"
				 value:   1.0
				 flags:   PARAM
		 addr:    0x002a62b0
		}
				p_1_AutoboxModel_real_T_9[350]
				{
				 type:    flt(64,IEEE)*
				 alias:   "P5"
				 value:   3.0
				 flags:   PARAM
 addr:    0x002a62b0
}
				p_1_AutoboxModel_real_T_9[353]
				{
				 type:    flt(64,IEEE)*
				 alias:   "P6"
				 value:   1208.0
				 flags:   PARAM
 addr:    0x002a62b0
}
				p_1_AutoboxModel_real_T_9[356]
				{
				 type:    AutoboxModel_ArrayDT0_18*
				 alias:   "P7"
				 value:   [49.0, 57.0, 50.0, 46.0, 49.0, 54.0, 56.0, 46.0, 49.0, 52.0, 48.0, 46.0, 49.0, 58.0, 53.0, 48.0, 48.0, 51.0]
				 flags:   PARAM
		 addr:    0x002a62b0
		}
				p_1_AutoboxModel_real_T_9[376]
				{
				 type:    AutoboxModel_ArrayDT0_9*
				 alias:   "P8"
				 value:   [48.0, 46.0, 48.0, 46.0, 48.0, 46.0, 48.0, 58.0, 48.0]
				 flags:   PARAM
 addr:    0x002a62b0
}


			endgroup -- block-group "dsethernetudp_rx"



		endgroup -- subsystem-group "ETHERNET_UDP_RX_BL3"
  
  
		group "ETHERNET_UDP_SETUP_BL1" -- subsystem-group



  
  
			group "Background" -- subsystem-group

				-- Skipping output Outputport

			endgroup -- subsystem-group "Background"
  
  
			group "Common Hardware\nInterrupt Interface" -- subsystem-group


			endgroup -- subsystem-group "Common Hardware\nInterrupt Interface"
  
  
			group "Function-Call\nSubsystem" -- subsystem-group



				group "dsethernetudp_setup" -- block-group
				{
				 block: "S-Function"
				}


					p_1_AutoboxModel_real_T_9[12]
					{
					 type:    flt(64,IEEE)*
					 alias:   "P1"
					 value:   1.0
					 flags:   PARAM
 addr:    0x002a62b0
}
					p_1_AutoboxModel_real_T_9[15]
					{
					 type:    flt(64,IEEE)*
					 alias:   "P2"
					 value:   1.0
					 flags:   PARAM
 addr:    0x002a62b0
}
					p_1_AutoboxModel_real_T_9[18]
					{
					 type:    flt(64,IEEE)*
					 alias:   "P3"
					 value:   1.0
					 flags:   PARAM
 addr:    0x002a62b0
}
					p_1_AutoboxModel_real_T_9[21]
					{
					 type:    AutoboxModel_ArrayDT0_27*
					 alias:   "P4"
					 value:   [114.0, 116.0, 105.0, 95.0, 101.0, 116.0, 104.0, 101.0, 114.0, 110.0, 101.0, 116.0, 95.0, 105.0, 110.0, 116.0, 101.0, 114.0, 102.0, 97.0, 99.0, 101.0, 95.0, 110.0, 97.0, 109.0, 101.0]
					 flags:   PARAM
 addr:    0x002a62b0
}
					p_1_AutoboxModel_real_T_9[50]
					{
					 type:    AutoboxModel_ArrayDT0_13*
					 alias:   "P5"
					 value:   [49.0, 57.0, 50.0, 46.0, 49.0, 54.0, 56.0, 46.0, 49.0, 52.0, 48.0, 46.0, 49.0]
					 flags:   PARAM
 addr:    0x002a62b0
}
					p_1_AutoboxModel_real_T_9[65]
					{
					 type:    flt(64,IEEE)*
					 alias:   "P6"
					 value:   1.0
					 flags:   PARAM
 addr:    0x002a62b0
}
					p_1_AutoboxModel_real_T_9[68]
					{
					 type:    flt(64,IEEE)*
					 alias:   "P7"
					 value:   5000.0
					 flags:   PARAM
 addr:    0x002a62b0
}
					p_1_AutoboxModel_real_T_9[71]
					{
					 type:    AutoboxModel_ArrayDT0_7*
					 alias:   "P8"
					 value:   [48.0, 46.0, 48.0, 46.0, 48.0, 46.0, 48.0]
					 flags:   PARAM
		 addr:    0x002a62b0
		}
					p_1_AutoboxModel_real_T_9[80]
					{
					 type:    flt(64,IEEE)*
					 alias:   "P9"
					 value:   0.0
					 flags:   PARAM
		 addr:    0x002a62b0
		}
					p_1_AutoboxModel_real_T_9[83]
					{
					 type:    flt(64,IEEE)*
					 alias:   "P10"
					 value:   1.0
					 flags:   PARAM
		 addr:    0x002a62b0
		}
					p_1_AutoboxModel_real_T_9[86]
					{
					 type:    flt(64,IEEE)*
					 alias:   "P11"
					 value:   5001.0
					 flags:   PARAM
 addr:    0x002a62b0
}
					p_1_AutoboxModel_real_T_9[89]
					{
					 type:    AutoboxModel_ArrayDT0_7*
					 alias:   "P12"
					 value:   [48.0, 46.0, 48.0, 46.0, 48.0, 46.0, 48.0]
					 flags:   PARAM
		 addr:    0x002a62b0
		}
					p_1_AutoboxModel_real_T_9[98]
					{
					 type:    flt(64,IEEE)*
					 alias:   "P13"
					 value:   0.0
					 flags:   PARAM
		 addr:    0x002a62b0
		}
					p_1_AutoboxModel_real_T_9[101]
					{
					 type:    flt(64,IEEE)*
					 alias:   "P14"
					 value:   1.0
					 flags:   PARAM
		 addr:    0x002a62b0
		}
					p_1_AutoboxModel_real_T_9[104]
					{
					 type:    flt(64,IEEE)*
					 alias:   "P15"
					 value:   5003.0
					 flags:   PARAM
 addr:    0x002a62b0
}
					p_1_AutoboxModel_real_T_9[107]
					{
					 type:    AutoboxModel_ArrayDT0_7*
					 alias:   "P16"
					 value:   [48.0, 46.0, 48.0, 46.0, 48.0, 46.0, 48.0]
					 flags:   PARAM
 addr:    0x002a62b0
}
					p_1_AutoboxModel_real_T_9[116]
					{
					 type:    flt(64,IEEE)*
					 alias:   "P17"
					 value:   0.0
					 flags:   PARAM
		 addr:    0x002a62b0
		}
					p_1_AutoboxModel_real_T_9[119]
					{
					 type:    flt(64,IEEE)*
					 alias:   "P18"
					 value:   0.0
					 flags:   PARAM
 addr:    0x002a62b0
}
					p_1_AutoboxModel_real_T_9[122]
					{
					 type:    flt(64,IEEE)*
					 alias:   "P19"
					 value:   5003.0
					 flags:   PARAM
		 addr:    0x002a62b0
		}
					p_1_AutoboxModel_real_T_9[125]
					{
					 type:    AutoboxModel_ArrayDT0_15*
					 alias:   "P20"
					 value:   [88.0, 88.0, 88.0, 46.0, 88.0, 88.0, 88.0, 46.0, 88.0, 88.0, 88.0, 46.0, 88.0, 88.0, 88.0]
					 flags:   PARAM
 addr:    0x002a62b0
}
					p_1_AutoboxModel_real_T_9[142]
					{
					 type:    flt(64,IEEE)*
					 alias:   "P21"
					 value:   5003.0
					 flags:   PARAM
		 addr:    0x002a62b0
		}
					p_1_AutoboxModel_real_T_9[145]
					{
					 type:    flt(64,IEEE)*
					 alias:   "P22"
					 value:   3.232271361E+9
					 flags:   PARAM
 addr:    0x002a62b0
}
					p_1_AutoboxModel_real_T_9[148]
					{
					 type:    flt(64,IEEE)*
					 alias:   "P23"
					 value:   0.0
					 flags:   PARAM
 addr:    0x002a62b0
}
					p_1_AutoboxModel_real_T_9[151]
					{
					 type:    flt(64,IEEE)*
					 alias:   "P24"
					 value:   0.0
					 flags:   PARAM
		 addr:    0x002a62b0
		}
					p_1_AutoboxModel_real_T_9[154]
					{
					 type:    flt(64,IEEE)*
					 alias:   "P25"
					 value:   0.0
					 flags:   PARAM
 addr:    0x002a62b0
}
					p_1_AutoboxModel_real_T_9[157]
					{
					 type:    flt(64,IEEE)*
					 alias:   "P26"
					 value:   0.0
					 flags:   PARAM
 addr:    0x002a62b0
}


				endgroup -- block-group "dsethernetudp_setup"

				group "function" -- block-group
				{
				 block: "TriggerPort"
				}



				endgroup -- block-group "function"



			endgroup -- subsystem-group "Function-Call\nSubsystem"


		endgroup -- subsystem-group "ETHERNET_UDP_SETUP_BL1"
  
  
		group "measure_time_delay_control" -- subsystem-group

			p_0_AutoboxModel_boolean_T_18[54]
			{
			 type:    uint(8)*
			 alias:   "is_not_delayed"
			 range:   < 0 ; 1 >
			 bitmask: 0x01
			 flags:   OUTPUT|READONLY
		 addr:    0x002a6288
		}


			group "<timestamp_sec>" -- block-group
			{
			 block: "Inport"
			}
				-- Skipping output Out1


			endgroup -- block-group "<timestamp_sec>"

			group "Constant1" -- block-group
			{
			 block: "Constant"
			}
				-- Skipping output Out1
				p_1_AutoboxModel_real_T_9[468]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Value"
				 value:   1.0
				 flags:   PARAM
 addr:    0x002a62b0
}


			endgroup -- block-group "Constant1"

			group "maxdelay" -- block-group
			{
			 block: "Constant"
			}
				-- Skipping output Out1
				trcref0_maxdelay
				{
				 refgroup: "/Tunable Parameters"
				 refvar:   "maxdelay"
				 alias:    "maxdelay"
}
				trcref0_Value
				{
				 refgroup: "/Tunable Parameters"
				 refvar:   "maxdelay"
				 alias:    "Value"
				 flags:    DEPRECATED|HIDDEN
		}


			endgroup -- block-group "maxdelay"

			group "Discrete-Time\nIntegrator" -- block-group
			{
			 block: "DiscreteIntegrator"
			}
				p_0_AutoboxModel_real_T_12[11145]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
				 addr:    0x002a6270
				}
				p_2_AutoboxModel_real_T_0[13]
				{
				 type:    flt(64,IEEE)*
				 alias:   "DiscState"
				 flags: READONLY
 addr:    0x002a62bc
}
				p_1_AutoboxModel_real_T_9[470]
				{
				 type:    flt(64,IEEE)*
				 alias:   "gainval"
				 value:   0.01
				 flags:   PARAM
 addr:    0x002a62b0
}
				p_1_AutoboxModel_real_T_9[471]
				{
				 type:    flt(64,IEEE)*
				 alias:   "InitialCondition"
				 value:   0.0
				 flags:   PARAM
 addr:    0x002a62b0
}


			endgroup -- block-group "Discrete-Time\nIntegrator"

			group "Memory1" -- block-group
			{
			 block: "Memory"
			}
				p_0_AutoboxModel_real_T_12[11144]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_1_AutoboxModel_real_T_9[469]
				{
				 type:    flt(64,IEEE)*
				 alias:   "InitialCondition"
				 value:   0.0
				 flags:   PARAM
 addr:    0x002a62b0
}


			endgroup -- block-group "Memory1"

			group "Relational\nOperator1" -- block-group
			{
			 block: "RelationalOperator"
			}
				p_0_AutoboxModel_boolean_T_18[53]
				{
				 type:    uint(8)*
				 alias:   "Out1"
				 range:   < 0 ; 1 >
				 bitmask: 0x01
				 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


			endgroup -- block-group "Relational\nOperator1"

			group "Relational\nOperator2" -- block-group
			{
			 block: "RelationalOperator"
			}
				p_0_AutoboxModel_boolean_T_18[54]
				{
				 type:    uint(8)*
				 alias:   "Out1"
				 range:   < 0 ; 1 >
				 bitmask: 0x01
				 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


			endgroup -- block-group "Relational\nOperator2"



		endgroup -- subsystem-group "measure_time_delay_control"
  
  
		group "measure_time_delay_loca" -- subsystem-group

			p_0_AutoboxModel_boolean_T_18[58]
			{
			 type:    uint(8)*
			 alias:   "is_not_delayed"
			 range:   < 0 ; 1 >
			 bitmask: 0x01
			 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


			group "<timestamp_sec>" -- block-group
			{
			 block: "Inport"
			}
				-- Skipping output Out1


			endgroup -- block-group "<timestamp_sec>"

			group "Constant1" -- block-group
			{
			 block: "Constant"
			}
				-- Skipping output Out1
				p_1_AutoboxModel_real_T_9[476]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Value"
				 value:   1.0
				 flags:   PARAM
		 addr:    0x002a62b0
		}


			endgroup -- block-group "Constant1"

			group "maxdelay" -- block-group
			{
			 block: "Constant"
			}
				-- Skipping output Out1
				trcref0_maxdelay
				{
				 refgroup: "/Tunable Parameters"
				 refvar:   "maxdelay"
				 alias:    "maxdelay"
}
				trcref0_Value
				{
				 refgroup: "/Tunable Parameters"
				 refvar:   "maxdelay"
				 alias:    "Value"
				 flags:    DEPRECATED|HIDDEN
}


			endgroup -- block-group "maxdelay"

			group "Discrete-Time\nIntegrator" -- block-group
			{
			 block: "DiscreteIntegrator"
			}
				p_0_AutoboxModel_real_T_12[11149]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_2_AutoboxModel_real_T_0[15]
				{
				 type:    flt(64,IEEE)*
				 alias:   "DiscState"
				 flags: READONLY
 addr:    0x002a62bc
}
				p_1_AutoboxModel_real_T_9[478]
				{
				 type:    flt(64,IEEE)*
				 alias:   "gainval"
				 value:   0.01
				 flags:   PARAM
 addr:    0x002a62b0
}
				p_1_AutoboxModel_real_T_9[479]
				{
				 type:    flt(64,IEEE)*
				 alias:   "InitialCondition"
				 value:   0.0
				 flags:   PARAM
		 addr:    0x002a62b0
		}


			endgroup -- block-group "Discrete-Time\nIntegrator"

			group "Memory1" -- block-group
			{
			 block: "Memory"
			}
				p_0_AutoboxModel_real_T_12[11148]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_1_AutoboxModel_real_T_9[477]
				{
				 type:    flt(64,IEEE)*
				 alias:   "InitialCondition"
				 value:   0.0
				 flags:   PARAM
 addr:    0x002a62b0
}


			endgroup -- block-group "Memory1"

			group "Relational\nOperator1" -- block-group
			{
			 block: "RelationalOperator"
			}
				p_0_AutoboxModel_boolean_T_18[57]
				{
				 type:    uint(8)*
				 alias:   "Out1"
				 range:   < 0 ; 1 >
				 bitmask: 0x01
				 flags:   OUTPUT|READONLY
		 addr:    0x002a6288
		}


			endgroup -- block-group "Relational\nOperator1"

			group "Relational\nOperator2" -- block-group
			{
			 block: "RelationalOperator"
			}
				p_0_AutoboxModel_boolean_T_18[58]
				{
				 type:    uint(8)*
				 alias:   "Out1"
				 range:   < 0 ; 1 >
				 bitmask: 0x01
				 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


			endgroup -- block-group "Relational\nOperator2"



		endgroup -- subsystem-group "measure_time_delay_loca"
  
  
		group "measure_time_delay_traj" -- subsystem-group

			p_0_AutoboxModel_boolean_T_18[56]
			{
			 type:    uint(8)*
			 alias:   "is_not_delayed"
			 range:   < 0 ; 1 >
			 bitmask: 0x01
			 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


			group "<timestamp_sec>" -- block-group
			{
			 block: "Inport"
			}
				-- Skipping output Out1


			endgroup -- block-group "<timestamp_sec>"

			group "Constant1" -- block-group
			{
			 block: "Constant"
			}
				-- Skipping output Out1
				p_1_AutoboxModel_real_T_9[472]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Value"
				 value:   1.0
				 flags:   PARAM
 addr:    0x002a62b0
}


			endgroup -- block-group "Constant1"

			group "maxdelay" -- block-group
			{
			 block: "Constant"
			}
				-- Skipping output Out1
				trcref0_maxdelay
				{
				 refgroup: "/Tunable Parameters"
				 refvar:   "maxdelay"
				 alias:    "maxdelay"
}
				trcref0_Value
				{
				 refgroup: "/Tunable Parameters"
				 refvar:   "maxdelay"
				 alias:    "Value"
				 flags:    DEPRECATED|HIDDEN
}


			endgroup -- block-group "maxdelay"

			group "Discrete-Time\nIntegrator" -- block-group
			{
			 block: "DiscreteIntegrator"
			}
				p_0_AutoboxModel_real_T_12[11147]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_2_AutoboxModel_real_T_0[14]
				{
				 type:    flt(64,IEEE)*
				 alias:   "DiscState"
				 flags: READONLY
 addr:    0x002a62bc
}
				p_1_AutoboxModel_real_T_9[474]
				{
				 type:    flt(64,IEEE)*
				 alias:   "gainval"
				 value:   0.01
				 flags:   PARAM
		 addr:    0x002a62b0
		}
				p_1_AutoboxModel_real_T_9[475]
				{
				 type:    flt(64,IEEE)*
				 alias:   "InitialCondition"
				 value:   0.0
				 flags:   PARAM
 addr:    0x002a62b0
}


			endgroup -- block-group "Discrete-Time\nIntegrator"

			group "Memory1" -- block-group
			{
			 block: "Memory"
			}
				p_0_AutoboxModel_real_T_12[11146]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
				p_1_AutoboxModel_real_T_9[473]
				{
				 type:    flt(64,IEEE)*
				 alias:   "InitialCondition"
				 value:   0.0
				 flags:   PARAM
 addr:    0x002a62b0
}


			endgroup -- block-group "Memory1"

			group "Relational\nOperator1" -- block-group
			{
			 block: "RelationalOperator"
			}
				p_0_AutoboxModel_boolean_T_18[55]
				{
				 type:    uint(8)*
				 alias:   "Out1"
				 range:   < 0 ; 1 >
				 bitmask: 0x01
				 flags:   OUTPUT|READONLY
		 addr:    0x002a6288
		}


			endgroup -- block-group "Relational\nOperator1"

			group "Relational\nOperator2" -- block-group
			{
			 block: "RelationalOperator"
			}
				p_0_AutoboxModel_boolean_T_18[56]
				{
				 type:    uint(8)*
				 alias:   "Out1"
				 range:   < 0 ; 1 >
				 bitmask: 0x01
				 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


			endgroup -- block-group "Relational\nOperator2"



		endgroup -- subsystem-group "measure_time_delay_traj"


	endgroup -- subsystem-group "EthernetCommunication"
  
  
	group "InterfaceActivation" -- subsystem-group

		p_0_AutoboxModel_InterfaceCommands_11[0]
		{
		 type:    struct AutoboxModel_InterfaceCommands*
		 alias:   "InterfaceCommands"
		 flags:   OUTPUT|READONLY
 addr:    0x002a626c
}


		group "ActivateSteeringInterface" -- block-group
		{
		 block: "Inport"
		}
			-- Skipping output Out1


		endgroup -- block-group "ActivateSteeringInterface"

		group "ActivateAccelerationInterface" -- block-group
		{
		 block: "Inport"
		}
			-- Skipping output Out1


		endgroup -- block-group "ActivateAccelerationInterface"

		group "CustomerCan" -- block-group
		{
		 block: "Inport"
		}
			p_0_AutoboxModel_customer_can_bus_3[0]
			{
			 type:    struct AutoboxModel_customer_can_bus*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
		 addr:    0x002a624c
		}


		endgroup -- block-group "CustomerCan"

		group "Bus\nCreator" -- block-group
		{
		 block: "BusCreator"
		}
			p_0_AutoboxModel_InterfaceCommands_11[0]
			{
			 type:    struct AutoboxModel_InterfaceCommands*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
		 addr:    0x002a626c
		}


		endgroup -- block-group "Bus\nCreator"

		group "Bus\nCreator1" -- block-group
		{
		 block: "BusCreator"
		}
			-- Skipping output Out1


		endgroup -- block-group "Bus\nCreator1"

		group "Bus\nCreator2" -- block-group
		{
		 block: "BusCreator"
		}
			-- Skipping output Out1


		endgroup -- block-group "Bus\nCreator2"

		group "Bus\nSelector1" -- block-group
		{
		 block: "BusSelector"
		}
			-- Skipping output Out1
			-- Skipping output Out2


		endgroup -- block-group "Bus\nSelector1"

		group "Bus\nSelector2" -- block-group
		{
		 block: "BusSelector"
		}
			-- Skipping output Out1
			-- Skipping output Out2


		endgroup -- block-group "Bus\nSelector2"

		group "CustomerCan1" -- block-group
		{
		 block: "InportShadow"
		}



		endgroup -- block-group "CustomerCan1"

  
  
		group "Detect\nDecrease" -- subsystem-group

			p_0_AutoboxModel_boolean_T_18[35]
			{
			 type:    uint(8)*
			 alias:   "Y"
			 range:   < 0 ; 1 >
			 bitmask: 0x01
			 flags:   OUTPUT|READONLY
			 addr:    0x002a6288
			}

			p_1_AutoboxModel_boolean_T_7[3]
			{
			 type:    uint(8)*
			 alias:   "vinit"
			 range:   < 0 ; 1 >
			 bitmask: 0x01
			 value:   0
			 flags:   PARAM
 addr:    0x002a62a8
}

			group "U" -- block-group
			{
			 block: "Inport"
			}
				-- Skipping output Out1


			endgroup -- block-group "U"

			group "FixPt\nRelational\nOperator" -- block-group
			{
			 block: "RelationalOperator"
			}
				p_0_AutoboxModel_boolean_T_18[35]
				{
				 type:    uint(8)*
				 alias:   "Out1"
				 range:   < 0 ; 1 >
				 bitmask: 0x01
				 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


			endgroup -- block-group "FixPt\nRelational\nOperator"

			group "Delay Input1" -- block-group
			{
			 block: "UnitDelay"
			 desc:  "\nStore in Global RAM"
			}
				p_0_AutoboxModel_boolean_T_18[34]
				{
				 type:    uint(8)*
				 alias:   "Out1"
				 range:   < 0 ; 1 >
				 bitmask: 0x01
				 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}
				p_2_AutoboxModel_boolean_T_4[3]
				{
				 type:    uint(8)*
				 alias:   "DiscState"
				 flags: READONLY
		 addr:    0x002a62c8
		}
				trcref0_vinit
				{
				 refgroup: ".."
				 refvar:   "vinit"
				 alias:    "vinit"
}
				trcref0_InitialCondition
				{
				 refgroup: ".."
				 refvar:   "vinit"
				 alias:    "InitialCondition"
				 flags:    DEPRECATED|HIDDEN
}


			endgroup -- block-group "Delay Input1"


			p_0_AutoboxModel_boolean_T_18[34]
			{
			 type:    uint(8)*
			 alias:   "U(k-1)"
			 bitmask: 0x01
			 range:   < 0 ; 1 >
			 origin:  "AutoboxModel/InterfaceActivation/Detect\nDecrease/Delay Input1/Out1"
			 flags:   READONLY
 addr:    0x002a6288
}

		endgroup -- subsystem-group "Detect\nDecrease"
  
  
		group "Detect\nDecrease1" -- subsystem-group

			p_0_AutoboxModel_boolean_T_18[31]
			{
			 type:    uint(8)*
			 alias:   "Y"
			 range:   < 0 ; 1 >
			 bitmask: 0x01
			 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}

			p_1_AutoboxModel_boolean_T_7[1]
			{
			 type:    uint(8)*
			 alias:   "vinit"
			 range:   < 0 ; 1 >
			 bitmask: 0x01
			 value:   0
			 flags:   PARAM
 addr:    0x002a62a8
}

			group "U" -- block-group
			{
			 block: "Inport"
			}
				-- Skipping output Out1


			endgroup -- block-group "U"

			group "FixPt\nRelational\nOperator" -- block-group
			{
			 block: "RelationalOperator"
			}
				p_0_AutoboxModel_boolean_T_18[31]
				{
				 type:    uint(8)*
				 alias:   "Out1"
				 range:   < 0 ; 1 >
				 bitmask: 0x01
				 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


			endgroup -- block-group "FixPt\nRelational\nOperator"

			group "Delay Input1" -- block-group
			{
			 block: "UnitDelay"
			 desc:  "\nStore in Global RAM"
			}
				p_0_AutoboxModel_boolean_T_18[30]
				{
				 type:    uint(8)*
				 alias:   "Out1"
				 range:   < 0 ; 1 >
				 bitmask: 0x01
				 flags:   OUTPUT|READONLY
		 addr:    0x002a6288
		}
				p_2_AutoboxModel_boolean_T_4[1]
				{
				 type:    uint(8)*
				 alias:   "DiscState"
				 flags: READONLY
		 addr:    0x002a62c8
		}
				trcref0_vinit
				{
				 refgroup: ".."
				 refvar:   "vinit"
				 alias:    "vinit"
		}
				trcref0_InitialCondition
				{
				 refgroup: ".."
				 refvar:   "vinit"
				 alias:    "InitialCondition"
				 flags:    DEPRECATED|HIDDEN
		}


			endgroup -- block-group "Delay Input1"


			p_0_AutoboxModel_boolean_T_18[30]
			{
			 type:    uint(8)*
			 alias:   "U(k-1)"
			 bitmask: 0x01
			 range:   < 0 ; 1 >
			 origin:  "AutoboxModel/InterfaceActivation/Detect\nDecrease1/Delay Input1/Out1"
			 flags:   READONLY
 addr:    0x002a6288
}

		endgroup -- subsystem-group "Detect\nDecrease1"
  
  
		group "Detect\nIncrease" -- subsystem-group

			p_0_AutoboxModel_boolean_T_18[33]
			{
			 type:    uint(8)*
			 alias:   "Y"
			 range:   < 0 ; 1 >
			 bitmask: 0x01
			 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}

			p_1_AutoboxModel_boolean_T_7[2]
			{
			 type:    uint(8)*
			 alias:   "vinit"
			 range:   < 0 ; 1 >
			 bitmask: 0x01
			 value:   0
			 flags:   PARAM
			 addr:    0x002a62a8
			}

			group "U" -- block-group
			{
			 block: "Inport"
			}
				-- Skipping output Out1


			endgroup -- block-group "U"

			group "FixPt\nRelational\nOperator" -- block-group
			{
			 block: "RelationalOperator"
			}
				p_0_AutoboxModel_boolean_T_18[33]
				{
				 type:    uint(8)*
				 alias:   "Out1"
				 range:   < 0 ; 1 >
				 bitmask: 0x01
				 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


			endgroup -- block-group "FixPt\nRelational\nOperator"

			group "Delay Input1" -- block-group
			{
			 block: "UnitDelay"
			 desc:  "\nStore in Global RAM"
			}
				p_0_AutoboxModel_boolean_T_18[32]
				{
				 type:    uint(8)*
				 alias:   "Out1"
				 range:   < 0 ; 1 >
				 bitmask: 0x01
				 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}
				p_2_AutoboxModel_boolean_T_4[2]
				{
				 type:    uint(8)*
				 alias:   "DiscState"
				 flags: READONLY
		 addr:    0x002a62c8
		}
				trcref0_vinit
				{
				 refgroup: ".."
				 refvar:   "vinit"
				 alias:    "vinit"
}
				trcref0_InitialCondition
				{
				 refgroup: ".."
				 refvar:   "vinit"
				 alias:    "InitialCondition"
				 flags:    DEPRECATED|HIDDEN
}


			endgroup -- block-group "Delay Input1"


			p_0_AutoboxModel_boolean_T_18[32]
			{
			 type:    uint(8)*
			 alias:   "U(k-1)"
			 bitmask: 0x01
			 range:   < 0 ; 1 >
			 origin:  "AutoboxModel/InterfaceActivation/Detect\nIncrease/Delay Input1/Out1"
			 flags:   READONLY
 addr:    0x002a6288
}

		endgroup -- subsystem-group "Detect\nIncrease"
  
  
		group "Detect\nIncrease1" -- subsystem-group

			p_0_AutoboxModel_boolean_T_18[29]
			{
			 type:    uint(8)*
			 alias:   "Y"
			 range:   < 0 ; 1 >
			 bitmask: 0x01
			 flags:   OUTPUT|READONLY
		 addr:    0x002a6288
		}

			p_1_AutoboxModel_boolean_T_7[0]
			{
			 type:    uint(8)*
			 alias:   "vinit"
			 range:   < 0 ; 1 >
			 bitmask: 0x01
			 value:   0
			 flags:   PARAM
		 addr:    0x002a62a8
		}

			group "U" -- block-group
			{
			 block: "Inport"
			}
				-- Skipping output Out1


			endgroup -- block-group "U"

			group "FixPt\nRelational\nOperator" -- block-group
			{
			 block: "RelationalOperator"
			}
				p_0_AutoboxModel_boolean_T_18[29]
				{
				 type:    uint(8)*
				 alias:   "Out1"
				 range:   < 0 ; 1 >
				 bitmask: 0x01
				 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}


			endgroup -- block-group "FixPt\nRelational\nOperator"

			group "Delay Input1" -- block-group
			{
			 block: "UnitDelay"
			 desc:  "\nStore in Global RAM"
			}
				p_0_AutoboxModel_boolean_T_18[28]
				{
				 type:    uint(8)*
				 alias:   "Out1"
				 range:   < 0 ; 1 >
				 bitmask: 0x01
				 flags:   OUTPUT|READONLY
 addr:    0x002a6288
}
				p_2_AutoboxModel_boolean_T_4[0]
				{
				 type:    uint(8)*
				 alias:   "DiscState"
				 flags: READONLY
		 addr:    0x002a62c8
		}
				trcref0_vinit
				{
				 refgroup: ".."
				 refvar:   "vinit"
				 alias:    "vinit"
}
				trcref0_InitialCondition
				{
				 refgroup: ".."
				 refvar:   "vinit"
				 alias:    "InitialCondition"
				 flags:    DEPRECATED|HIDDEN
}


			endgroup -- block-group "Delay Input1"


			p_0_AutoboxModel_boolean_T_18[28]
			{
			 type:    uint(8)*
			 alias:   "U(k-1)"
			 bitmask: 0x01
			 range:   < 0 ; 1 >
			 origin:  "AutoboxModel/InterfaceActivation/Detect\nIncrease1/Delay Input1/Out1"
			 flags:   READONLY
		 addr:    0x002a6288
		}

		endgroup -- subsystem-group "Detect\nIncrease1"
  
  
		group "AccelerationInterfaceStateMachine" -- subsystem-group

			-- Skipping output CancelRequestAI
			-- Skipping output ActivationRequestAI
			-- Skipping output ClearanceAI
			p_0_AutoboxModel_uint8_T_17[3648]
			{
			 type:    uint(8)*
			 alias:   "AISMStatus"
			 flags:   OUTPUT|READONLY
 addr:    0x002a6284
}




		endgroup -- subsystem-group "AccelerationInterfaceStateMachine"
  
  
		group "SteeringInterfaceStateMachine" -- subsystem-group

			-- Skipping output CancelRequestSI
			-- Skipping output ActivationRequestSI
			-- Skipping output ClearanceSI
			p_0_AutoboxModel_uint8_T_17[3647]
			{
			 type:    uint(8)*
			 alias:   "SISMStatus"
			 flags:   OUTPUT|READONLY
 addr:    0x002a6284
}




		endgroup -- subsystem-group "SteeringInterfaceStateMachine"

		-- Skipping label "AccelerationInterfaceCommands"

		-- Skipping label "SteeringInterfaceCommands"


	endgroup -- subsystem-group "InterfaceActivation"
  
  
	group "RTI Data" -- subsystem-group


	endgroup -- subsystem-group "RTI Data"
  
  
	group "Scopes" -- subsystem-group



		group "Localization" -- block-group
		{
		 block: "Inport"
		}
			p_0_AutoboxModel_LocalizationToAutobox_2[0]
			{
			 type:    struct AutoboxModel_LocalizationToAutobox*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
 addr:    0x002a6248
}


		endgroup -- block-group "Localization"

		group "Trajectory" -- block-group
		{
		 block: "Inport"
		}
			p_0_AutoboxModel_ControlTrajectory_0[0]
			{
			 type:    struct AutoboxModel_ControlTrajectory*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
		 addr:    0x002a6240
		}


		endgroup -- block-group "Trajectory"

		group "ref" -- block-group
		{
		 block: "Inport"
		}
			p_0_AutoboxModel_TrajectoryPoint_4[0]
			{
			 type:    struct AutoboxModel_TrajectoryPoint*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
		 addr:    0x002a6250
		}


		endgroup -- block-group "ref"

		group "u" -- block-group
		{
		 block: "Inport"
		}
			-- Skipping output


		endgroup -- block-group "u"

		group "debug referene point" -- block-group
		{
		 block: "Inport"
		}
			-- Skipping output


		endgroup -- block-group "debug referene point"

		group "tracking error" -- block-group
		{
		 block: "Inport"
		}
			p_0_AutoboxModel_TrackingError_5[0]
			{
			 type:    struct AutoboxModel_TrackingError*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
 addr:    0x002a6254
}


		endgroup -- block-group "tracking error"

		group "Bus\nSelector" -- block-group
		{
		 block: "BusSelector"
		}
			-- Skipping output Out1


		endgroup -- block-group "Bus\nSelector"

		group "Bus\nSelector1" -- block-group
		{
		 block: "BusSelector"
		}
			p_0_AutoboxModel_boolean_T_18[11]
			{
			 type:    uint(8)*
			 alias:   "Out1"
			 range:   < 0 ; 1 >
			 bitmask: 0x01
			 flags:   OUTPUT|READONLY
		 addr:    0x002a6288
		}
			p_0_AutoboxModel_real_T_12[11069]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out2"
			 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}
			p_0_AutoboxModel_real_T_12[11082]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out3"
			 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


		endgroup -- block-group "Bus\nSelector1"

		group "Bus\nSelector2" -- block-group
		{
		 block: "BusSelector"
		}
			-- Skipping output Out1
			-- Skipping output Out2
			-- Skipping output Out3
			-- Skipping output Out4
			-- Skipping output Out5
			-- Skipping output Out6
			-- Skipping output Out7


		endgroup -- block-group "Bus\nSelector2"

		group "Bus\nSelector3" -- block-group
		{
		 block: "BusSelector"
		}
			-- Skipping output Out1


		endgroup -- block-group "Bus\nSelector3"

		group "Bus\nSelector4" -- block-group
		{
		 block: "BusSelector"
		}
			-- Skipping output Out1
			-- Skipping output Out2
			-- Skipping output Out3
			-- Skipping output Out4
			-- Skipping output Out5


		endgroup -- block-group "Bus\nSelector4"

		group "Bus\nSelector5" -- block-group
		{
		 block: "BusSelector"
		}
			-- Skipping output Out1
			-- Skipping output Out2
			-- Skipping output Out3
			-- Skipping output Out4


		endgroup -- block-group "Bus\nSelector5"

		group "Demux" -- block-group
		{
		 block: "Demux"
		}
			p_0_AutoboxModel_real_T_12[11161]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}
			p_0_AutoboxModel_real_T_12[11162]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out2"
			 flags:   OUTPUT|READONLY
			 addr:    0x002a6270
			}
			p_0_AutoboxModel_real_T_12[11163]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out3"
			 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}
			p_0_AutoboxModel_real_T_12[11164]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out4"
			 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
			p_0_AutoboxModel_real_T_12[11165]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out5"
			 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
			p_0_AutoboxModel_real_T_12[11166]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out6"
			 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
			p_0_AutoboxModel_real_T_12[11167]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out7"
			 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}
			p_0_AutoboxModel_real_T_12[11168]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out8"
			 flags:   OUTPUT|READONLY
			 addr:    0x002a6270
			}


		endgroup -- block-group "Demux"

		group "Math\nFunction" -- block-group
		{
		 block: "Math"
		}
			p_0_AutoboxModel_real_T_12[11040]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


		endgroup -- block-group "Math\nFunction"

		group "Math\nFunction1" -- block-group
		{
		 block: "Math"
		}
			p_0_AutoboxModel_real_T_12[11041]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
			 addr:    0x002a6270
			}


		endgroup -- block-group "Math\nFunction1"

		group "Mux1" -- block-group
		{
		 block: "Mux"
		}
			-- Skipping output


		endgroup -- block-group "Mux1"

		group "Mux2" -- block-group
		{
		 block: "Mux"
		}
			-- Skipping output


		endgroup -- block-group "Mux2"

		group "Mux3" -- block-group
		{
		 block: "Mux"
		}
			-- Skipping output


		endgroup -- block-group "Mux3"

		group "Mux4" -- block-group
		{
		 block: "Mux"
		}
			-- Skipping output


		endgroup -- block-group "Mux4"

		group "Product" -- block-group
		{
		 block: "Product"
		}
			p_0_AutoboxModel_real_T_12[11061]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


		endgroup -- block-group "Product"

		group "Product1" -- block-group
		{
		 block: "Product"
		}
			p_0_AutoboxModel_real_T_12[11062]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}


		endgroup -- block-group "Product1"

		group "Product2" -- block-group
		{
		 block: "Product"
		}
			p_0_AutoboxModel_real_T_12[11063]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
		 addr:    0x002a6270
		}


		endgroup -- block-group "Product2"

		group "Product3" -- block-group
		{
		 block: "Product"
		}
			p_0_AutoboxModel_real_T_12[11064]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


		endgroup -- block-group "Product3"

		group "Product4" -- block-group
		{
		 block: "Product"
		}
			p_0_AutoboxModel_real_T_12[11070]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


		endgroup -- block-group "Product4"

		group "Product5" -- block-group
		{
		 block: "Product"
		}
			p_0_AutoboxModel_real_T_12[11083]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
			 addr:    0x002a6270
			}


		endgroup -- block-group "Product5"

		group "Add1" -- block-group
		{
		 block: "Sum"
		}
			p_0_AutoboxModel_real_T_12[11042]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


		endgroup -- block-group "Add1"

		group "Scope" -- block-group
		{
		 block: "Scope"
		}
			p_0_AutoboxModel_real_T_12[11161]
			{
			 type:    flt(64,IEEE)*
			 alias:   "In1"
			 flags:   READONLY
 addr:    0x002a6270
}
			p_0_AutoboxModel_real_T_12[11162]
			{
			 type:    flt(64,IEEE)*
			 alias:   "In2"
			 flags:   READONLY
		 addr:    0x002a6270
		}
			p_0_AutoboxModel_real_T_12[11163]
			{
			 type:    flt(64,IEEE)*
			 alias:   "In3"
			 flags:   READONLY
 addr:    0x002a6270
}



		endgroup -- block-group "Scope"

		group "Scope1" -- block-group
		{
		 block: "Scope"
		}
			p_0_AutoboxModel_real_T_12[11061]
			{
			 type:    flt(64,IEEE)*
			 alias:   "In1"
			 flags:   READONLY
 addr:    0x002a6270
}
			p_0_AutoboxModel_real_T_12[11062]
			{
			 type:    flt(64,IEEE)*
			 alias:   "In2"
			 flags:   READONLY
		 addr:    0x002a6270
		}
			p_0_AutoboxModel_real_T_12[11063]
			{
			 type:    flt(64,IEEE)*
			 alias:   "In3"
			 flags:   READONLY
 addr:    0x002a6270
}
			p_0_AutoboxModel_real_T_12[11064]
			{
			 type:    flt(64,IEEE)*
			 alias:   "In4"
			 flags:   READONLY
		 addr:    0x002a6270
		}



		endgroup -- block-group "Scope1"

		group "Sqrt" -- block-group
		{
		 block: "Sqrt"
		}
			p_0_AutoboxModel_real_T_12[11043]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
 addr:    0x002a6270
}


		endgroup -- block-group "Sqrt"

		group "ref vs loca" -- block-group
		{
		 block: "Scope"
		}
			-- Skipping input



		endgroup -- block-group "ref vs loca"

		group "refscope" -- block-group
		{
		 block: "Scope"
		}
			p_0_AutoboxModel_real_T_12[11035]
			{
			 type:    flt(64,IEEE)*
			 alias:   "In1"
			 flags:   READONLY
 addr:    0x002a6270
}
			p_0_AutoboxModel_real_T_12[11037]
			{
			 type:    flt(64,IEEE)*
			 alias:   "In2"
			 flags:   READONLY
 addr:    0x002a6270
}
			p_0_AutoboxModel_real_T_12[11044]
			{
			 type:    flt(64,IEEE)*
			 alias:   "In3"
			 flags:   READONLY
 addr:    0x002a6270
}
			p_0_AutoboxModel_real_T_12[11046]
			{
			 type:    flt(64,IEEE)*
			 alias:   "In4"
			 flags:   READONLY
 addr:    0x002a6270
}
			p_0_AutoboxModel_real_T_12[11039]
			{
			 type:    flt(64,IEEE)*
			 alias:   "In5"
			 flags:   READONLY
 addr:    0x002a6270
}
			p_0_AutoboxModel_real_T_12[11047]
			{
			 type:    flt(64,IEEE)*
			 alias:   "In6"
			 flags:   READONLY
 addr:    0x002a6270
}



		endgroup -- block-group "refscope"

		group "timestamps" -- block-group
		{
		 block: "Scope"
		}
			p_0_AutoboxModel_real_T_12[11048]
			{
			 type:    flt(64,IEEE)*
			 alias:   "In1"
			 flags:   READONLY
 addr:    0x002a6270
}
			p_0_AutoboxModel_real_T_12[11049]
			{
			 type:    flt(64,IEEE)*
			 alias:   "In2"
			 flags:   READONLY
		 addr:    0x002a6270
		}



		endgroup -- block-group "timestamps"

		group "uscope" -- block-group
		{
		 block: "Scope"
		}
			p_0_AutoboxModel_boolean_T_18[11]
			{
			 type:    uint(8)*
			 alias:   "In1"
			 range:   < 0 ; 1 >
			 bitmask: 0x01
			 flags:   READONLY
		 addr:    0x002a6288
		}
			p_0_AutoboxModel_real_T_12[11070]
			{
			 type:    flt(64,IEEE)*
			 alias:   "In2"
			 flags:   READONLY
		 addr:    0x002a6270
		}
			p_0_AutoboxModel_real_T_12[11083]
			{
			 type:    flt(64,IEEE)*
			 alias:   "In3"
			 flags:   READONLY
 addr:    0x002a6270
}



		endgroup -- block-group "uscope"


		p_0_AutoboxModel_real_T_12[11083]
		{
		 type:    flt(64,IEEE)*
		 alias:   "a"
		 origin:  "AutoboxModel/Scopes/Product5/Out1"
		 flags:   READONLY
		 addr:    0x002a6270
		}
		p_0_AutoboxModel_real_T_12[11082]
		{
		 type:    flt(64,IEEE)*
		 alias:   "<acceleration>"
		 origin:  "AutoboxModel/Scopes/Bus\nSelector1/Out3"
		 flags:   READONLY
		 addr:    0x002a6270
		}
		p_0_AutoboxModel_boolean_T_18[11]
		{
		 type:    uint(8)*
		 alias:   "<controller_active>"
		 bitmask: 0x01
		 range:   < 0 ; 1 >
		 origin:  "AutoboxModel/Scopes/Bus\nSelector1/Out1"
		 flags:   READONLY
		 addr:    0x002a6288
		}
		p_0_AutoboxModel_real_T_12[11069]
		{
		 type:    flt(64,IEEE)*
		 alias:   "<steering_angle>"
		 origin:  "AutoboxModel/Scopes/Bus\nSelector1/Out2"
		 flags:   READONLY
 addr:    0x002a6270
}
		p_0_AutoboxModel_real_T_12[11070]
		{
		 type:    flt(64,IEEE)*
		 alias:   "delta"
		 origin:  "AutoboxModel/Scopes/Product4/Out1"
		 flags:   READONLY
 addr:    0x002a6270
}
		p_0_AutoboxModel_real_T_12[11061]
		{
		 type:    flt(64,IEEE)*
		 alias:   "e_n"
		 origin:  "AutoboxModel/Scopes/Product/Out1"
		 flags:   READONLY
		 addr:    0x002a6270
		}
		p_0_AutoboxModel_real_T_12[11062]
		{
		 type:    flt(64,IEEE)*
		 alias:   "e_psi"
		 origin:  "AutoboxModel/Scopes/Product1/Out1"
		 flags:   READONLY
 addr:    0x002a6270
}
		p_0_AutoboxModel_real_T_12[11064]
		{
		 type:    flt(64,IEEE)*
		 alias:   "e_t"
		 origin:  "AutoboxModel/Scopes/Product3/Out1"
		 flags:   READONLY
		 addr:    0x002a6270
		}
		p_0_AutoboxModel_real_T_12[11063]
		{
		 type:    flt(64,IEEE)*
		 alias:   "e_v"
		 origin:  "AutoboxModel/Scopes/Product2/Out1"
		 flags:   READONLY
 addr:    0x002a6270
}

	endgroup -- subsystem-group "Scopes"



endgroup -- "Model Root"
-- ******** Tunable Parameters ************************************************

group "Tunable Parameters"

	p_1_AutoboxModel_ControlTrajectory_0[0]
	{
	 type:    struct AutoboxModel_ControlTrajectory*
	 alias:   "default_trajectory_bus"
	 value:   {0U,{},{},{},{},{},{},{},{},{},{},{},0.0}
	 flags:   PARAM
	 addr:    0x002a628c
	}
	p_1_AutoboxModel_vehicle_data_can_bus_1[0]
	{
	 type:    struct AutoboxModel_vehicle_data_can_bus*
	 alias:   "default_vehicle_state_bus"
	 value:   {{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0},{0,0,0,0,0,0,0},{0,0,0,0,0,0,0},{0,0,0,0,0,0,0},{0,0,0,0},{0,0,0,0,0},{0,0,0,0},{0,0,0,0,0,0},{0,0,0,0,0,0},{0,0,0,0,0,0},{0,0,0,0,0,0,0,0},{0,0,0,0,0,0},{0,0,0,0,0,0},{0,0,0,0,0,0},{0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0},{0,0,0},{0U,0U,0.0,0.0,0.0,0.0,0},{0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0},{0,0,0,0},{0,0,0,0,0,0,0},{0,0,0,0,0,0,0},{0,0,0,0,0,0,0},{0,0,0,0,0,0,0},{0,0,0,0,0,0,0},{0,0,0,0,0,0,0},{0U,0U,0.0,0,0U,0,0.0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0},{0,0,0,0,0,0},{0,0,0,0,0,0},{0,0,0,0,0,0},{0,0,0,0,0,0},{0,0,0,0}}
	 flags:   PARAM
 addr:    0x002a6290
}
	p_1_AutoboxModel_LocalizationToAutobox_2[0]
	{
	 type:    struct AutoboxModel_LocalizationToAutobox*
	 alias:   "default_localization_bus"
	 value:   {{{0.0,0.0,0.0},{0.0,0.0,0.0,0.0},{0.0,0.0,0.0},{0.0,0.0,0.0},{0.0,0.0,0.0},0.0,{0.0,0.0,0.0},{0.0,0.0,0.0},{0.0,0.0,0.0}},0.0,{{0.0,0.0,0.0},{0.0,0.0,0.0},{0.0,0.0,0.0},{0.0,0.0,0.0},{0.0,0.0,0.0}}}
	 flags:   PARAM
 addr:    0x002a6294
}
	p_1_AutoboxModel_customer_can_bus_3[0]
	{
	 type:    struct AutoboxModel_customer_can_bus*
	 alias:   "default_customer_can_bus"
	 value:   {{0.0,0U,0,0U,0,0,0,0U,0,0.0},{0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0},{0U,0,0,0,0,0U,0U,0U,0U,0U,0,0,0,0U,0,0,0U,0U,0U,0U},{0,0,0,0,0,0},{0,0,0,0,0,0},{0,0,0,0,0,0},{0,0,0.0,0U,0,0U,0U,0U,0.0,0,0.0,0},{0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0U,0.0,0,0.0,0.0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}}
	 flags:   PARAM
	 addr:    0x002a6298
	}
	p_1_AutoboxModel_ControllerParams_4[0]
	{
	 type:    struct AutoboxModel_ControllerParams*
	 alias:   "controller_params"
	 value:   {2.0,0.9,0.7,0.4,5000.0,2000.0,1.393,1.393}
	 flags:   PARAM
 addr:    0x002a629c
}
	p_1_AutoboxModel_ControlCommandToAutobox_5[0]
	{
	 type:    struct AutoboxModel_ControlCommandToAutobox*
	 alias:   "default_control_command_apollo_bus"
	 value:   {0.0,0.0,0.0,0.0,0.0,0.0,0.0}
	 flags:   PARAM
 addr:    0x002a62a0
}
	p_1_AutoboxModel_real_T_6[0]
	{
	 type:    flt(64,IEEE)*
	 alias:   "controller_max_time_diff"
	 value:   100.0
	 flags:   PARAM
	 addr:    0x002a62a4
	}
	p_1_AutoboxModel_real_T_6[1]
	{
	 type:    flt(64,IEEE)*
	 alias:   "max_acceleration_comfort"
	 value:   2.0
	 flags:   PARAM
 addr:    0x002a62a4
}
	p_1_AutoboxModel_real_T_6[2]
	{
	 type:    flt(64,IEEE)*
	 alias:   "max_deceleration_comfort"
	 value:   -4.5
	 flags:   PARAM
 addr:    0x002a62a4
}
	p_1_AutoboxModel_real_T_6[3]
	{
	 type:    flt(64,IEEE)*
	 alias:   "max_loca_traj_diff"
	 value:   1.0
	 flags:   PARAM
 addr:    0x002a62a4
}
	p_1_AutoboxModel_real_T_6[4]
	{
	 type:    flt(64,IEEE)*
	 alias:   "max_long_jerk_comfort"
	 value:   100.0
	 flags:   PARAM
 addr:    0x002a62a4
}
	p_1_AutoboxModel_real_T_6[5]
	{
	 type:    flt(64,IEEE)*
	 alias:   "maxdelay"
	 value:   2.0
	 flags:   PARAM
	 addr:    0x002a62a4
	}
	p_1_AutoboxModel_real_T_6[6]
	{
	 type:    flt(64,IEEE)*
	 alias:   "min_long_jerk_comfort"
	 value:   -225.0
	 flags:   PARAM
 addr:    0x002a62a4
}
	p_1_AutoboxModel_real_T_6[7]
	{
	 type:    flt(64,IEEE)*
	 alias:   "steering_angle_range_rad_to_steering_wheel_angle_range_deg_gain"
	 value:   852.72162733730158
	 flags:   PARAM
	 addr:    0x002a62a4
	}
	p_1_AutoboxModel_real_T_6[8]
	{
	 type:    flt(64,IEEE)*
	 alias:   "switch_steering_feedback"
	 value:   1.0
	 flags:   PARAM
	 addr:    0x002a62a4
	}
	p_1_AutoboxModel_real_T_6[9]
	{
	 type:    flt(64,IEEE)*
	 alias:   "switch_velocity_feedback"
	 value:   1.0
	 flags:   PARAM
	 addr:    0x002a62a4
	}
	p_1_AutoboxModel_real_T_6[10]
	{
	 type:    flt(64,IEEE)*
	 alias:   "trajectory_timeshift_speed_threshold"
	 value:   0.5
	 flags:   PARAM
 addr:    0x002a62a4
}

endgroup

-- ******** State Machine Data ************************************************

group "State Machine Data"


endgroup


-- ******** Labels ************************************************************

group "Labels"

	p_0_AutoboxModel_uint8_T_17[3631]
	{
	 type:    uint(8)*
	 alias:   "AIState"
	 origin:  "AutoboxModel/CanCommunication/CustomerCAN/GatewayStatesMessage/Gateway_States/AIState"
	 flags:   READONLY
	 addr:    0x002a6284
	}
	-- Skipping label "AccelerationInterfaceCommands"

	p_0_AutoboxModel_boolean_T_18[22]
	{
	 type:    uint(8)*
	 alias:   "AngleDeviationLimitationSI"
	 bitmask: 0x01
	 range:   < 0 ; 1 >
	 origin:  "AutoboxModel/CanCommunication/CustomerCAN/GatewayStatesMessage/Gateway_States/AngleDeviationLimitationSI"
	 flags:   READONLY
 addr:    0x002a6288
}
	p_0_AutoboxModel_boolean_T_18[21]
	{
	 type:    uint(8)*
	 alias:   "AngleGradientLimitationSI"
	 bitmask: 0x01
	 range:   < 0 ; 1 >
	 origin:  "AutoboxModel/CanCommunication/CustomerCAN/GatewayStatesMessage/Gateway_States/AngleGradientLimitationSI"
	 flags:   READONLY
 addr:    0x002a6288
}
	p_0_AutoboxModel_boolean_T_18[20]
	{
	 type:    uint(8)*
	 alias:   "AngleLimitationSI"
	 bitmask: 0x01
	 range:   < 0 ; 1 >
	 origin:  "AutoboxModel/CanCommunication/CustomerCAN/GatewayStatesMessage/Gateway_States/AngleLimitationSI"
	 flags:   READONLY
 addr:    0x002a6288
}
	p_0_AutoboxModel_boolean_T_18[23]
	{
	 type:    uint(8)*
	 alias:   "AngleLimitationStatus"
	 bitmask: 0x01
	 range:   < 0 ; 1 >
	 origin:  "AutoboxModel/CanCommunication/CustomerCAN/GatewayStatesMessage/Gateway_States/AngleLimitationStatus"
	 flags:   READONLY
 addr:    0x002a6288
}
	p_0_AutoboxModel_boolean_T_18[27]
	{
	 type:    uint(8)*
	 alias:   "DriverBraking"
	 bitmask: 0x01
	 range:   < 0 ; 1 >
	 origin:  "AutoboxModel/CanCommunication/CustomerCAN/VehicleDataMessage/Vehicle_Data/DriverBraking"
	 flags:   READONLY
	 addr:    0x002a6288
	}
	p_0_AutoboxModel_uint8_T_17[3632]
	{
	 type:    uint(8)*
	 alias:   "EBIState"
	 origin:  "AutoboxModel/CanCommunication/CustomerCAN/GatewayStatesMessage/Gateway_States/EBIState"
	 flags:   READONLY
	 addr:    0x002a6284
	}
	p_0_AutoboxModel_uint8_T_17[3633]
	{
	 type:    uint(8)*
	 alias:   "GIState"
	 origin:  "AutoboxModel/CanCommunication/CustomerCAN/GatewayStatesMessage/Gateway_States/GIState"
	 flags:   READONLY
 addr:    0x002a6284
}
	p_0_AutoboxModel_uint8_T_17[3630]
	{
	 type:    uint(8)*
	 alias:   "GWState"
	 origin:  "AutoboxModel/CanCommunication/CustomerCAN/GatewayStatesMessage/Gateway_States/GWState"
	 flags:   READONLY
 addr:    0x002a6284
}
	p_0_AutoboxModel_boolean_T_18[17]
	{
	 type:    uint(8)*
	 alias:   "GatewayClearanceAI"
	 bitmask: 0x01
	 range:   < 0 ; 1 >
	 origin:  "AutoboxModel/CanCommunication/CustomerCAN/GatewayStatesMessage/Gateway_States/GatewayClearanceAI"
	 flags:   READONLY
 addr:    0x002a6288
}
	p_0_AutoboxModel_boolean_T_18[19]
	{
	 type:    uint(8)*
	 alias:   "GatewayClearanceEBI"
	 bitmask: 0x01
	 range:   < 0 ; 1 >
	 origin:  "AutoboxModel/CanCommunication/CustomerCAN/GatewayStatesMessage/Gateway_States/GatewayClearanceEBI"
	 flags:   READONLY
 addr:    0x002a6288
}
	p_0_AutoboxModel_boolean_T_18[18]
	{
	 type:    uint(8)*
	 alias:   "GatewayClearanceSI"
	 bitmask: 0x01
	 range:   < 0 ; 1 >
	 origin:  "AutoboxModel/CanCommunication/CustomerCAN/GatewayStatesMessage/Gateway_States/GatewayClearanceSI"
	 flags:   READONLY
 addr:    0x002a6288
}
	p_0_AutoboxModel_uint8_T_17[3639]
	{
	 type:    uint(8)*
	 alias:   "GearLeverPos"
	 origin:  "AutoboxModel/CanCommunication/CustomerCAN/VehicleDataMessage/Vehicle_Data/GearLeverPos"
	 flags:   READONLY
 addr:    0x002a6284
}
	p_0_AutoboxModel_real_T_12[11023]
	{
	 type:    flt(64,IEEE)*
	 alias:   "LateralAcceleration"
	 origin:  "AutoboxModel/CanCommunication/VehicleCAN/MotionMessage/Motion/LateralAcceleration"
	 flags:   READONLY
 addr:    0x002a6270
}
	p_0_AutoboxModel_uint8_T_17[3637]
	{
	 type:    uint(8)*
	 alias:   "LimitationsReceivedSI"
	 origin:  "AutoboxModel/CanCommunication/CustomerCAN/GatewayStatesMessage/Gateway_States/LimitationsReceivedSI"
	 flags:   READONLY
 addr:    0x002a6284
}
	p_0_AutoboxModel_real_T_12[11022]
	{
	 type:    flt(64,IEEE)*
	 alias:   "LongitudinalAcceleration"
	 origin:  "AutoboxModel/CanCommunication/VehicleCAN/MotionMessage/Motion/LongitudinalAcceleration"
	 flags:   READONLY
 addr:    0x002a6270
}
	p_0_AutoboxModel_Motion_7[0]
	{
	 type:    struct AutoboxModel_Motion*
	 alias:   "Motion"
	 origin:  "AutoboxModel/CanCommunication/VehicleCAN/MotionMessage/Bus\nCreator/Out1"
	 flags:   READONLY
 addr:    0x002a625c
}
	p_0_AutoboxModel_boolean_T_18[24]
	{
	 type:    uint(8)*
	 alias:   "MsgTimeoutDisplay"
	 bitmask: 0x01
	 range:   < 0 ; 1 >
	 origin:  "AutoboxModel/CanCommunication/CustomerCAN/GatewayStatesMessage/Gateway_States/MsgTimeoutDisplay"
	 flags:   READONLY
 addr:    0x002a6288
}
	p_0_AutoboxModel_boolean_T_18[25]
	{
	 type:    uint(8)*
	 alias:   "MsgTimeoutPwrMgnt"
	 bitmask: 0x01
	 range:   < 0 ; 1 >
	 origin:  "AutoboxModel/CanCommunication/CustomerCAN/GatewayStatesMessage/Gateway_States/MsgTimeoutPwrMgnt"
	 flags:   READONLY
 addr:    0x002a6288
}
	p_0_AutoboxModel_uint8_T_17[3636]
	{
	 type:    uint(8)*
	 alias:   "PDIState"
	 origin:  "AutoboxModel/CanCommunication/CustomerCAN/GatewayStatesMessage/Gateway_States/PDIState"
	 flags:   READONLY
	 addr:    0x002a6284
	}
	p_0_AutoboxModel_uint8_T_17[3634]
	{
	 type:    uint(8)*
	 alias:   "SIState"
	 origin:  "AutoboxModel/CanCommunication/CustomerCAN/GatewayStatesMessage/Gateway_States/SIState"
	 flags:   READONLY
	 addr:    0x002a6284
	}
	p_0_AutoboxModel_Steering_9[0]
	{
	 type:    struct AutoboxModel_Steering*
	 alias:   "Steering"
	 origin:  "AutoboxModel/CanCommunication/VehicleCAN/SteeringMessage/Bus\nCreator/Out1"
	 flags:   READONLY
	 addr:    0x002a6264
	}
	p_0_AutoboxModel_real_T_12[11088]
	{
	 type:    flt(64,IEEE)*
	 alias:   "SteeringAngle"
	 origin:  "AutoboxModel/CanCommunication/CustomerCAN/VehicleDataMessage/Vehicle_Data/SteeringAngle"
	 flags:   READONLY
 addr:    0x002a6270
}
	p_0_AutoboxModel_boolean_T_18[26]
	{
	 type:    uint(8)*
	 alias:   "SteeringAngleSign"
	 bitmask: 0x01
	 range:   < 0 ; 1 >
	 origin:  "AutoboxModel/CanCommunication/CustomerCAN/VehicleDataMessage/Vehicle_Data/SteeringAngleSign"
	 flags:   READONLY
 addr:    0x002a6288
}
	-- Skipping label "SteeringInterfaceCommands"

	p_0_AutoboxModel_real_T_12[11029]
	{
	 type:    flt(64,IEEE)*
	 alias:   "SteeringWheelAngle"
	 origin:  "AutoboxModel/CanCommunication/VehicleCAN/SteeringMessage/Steering/SteeringWheelAngle"
	 flags:   READONLY
	 addr:    0x002a6270
	}
	p_0_AutoboxModel_boolean_T_18[6]
	{
	 type:    uint(8)*
	 alias:   "SteeringWheelAngleSign"
	 bitmask: 0x01
	 range:   < 0 ; 1 >
	 origin:  "AutoboxModel/CanCommunication/VehicleCAN/SteeringMessage/Steering/SteeringWheelAngleSign"
	 flags:   READONLY
 addr:    0x002a6288
}
	p_0_AutoboxModel_uint16_T_15[2]
	{
	 type:    uint(16)*
	 alias:   "SteeringWheelSpeed"
	 origin:  "AutoboxModel/CanCommunication/VehicleCAN/SteeringMessage/Steering/SteeringWheelSpeed"
	 flags:   READONLY
 addr:    0x002a627c
}
	p_0_AutoboxModel_boolean_T_18[7]
	{
	 type:    uint(8)*
	 alias:   "SteeringWheelSpeedSign"
	 bitmask: 0x01
	 range:   < 0 ; 1 >
	 origin:  "AutoboxModel/CanCommunication/VehicleCAN/SteeringMessage/Steering/SteeringWheelSpeedSign"
	 flags:   READONLY
 addr:    0x002a6288
}
	p_0_AutoboxModel_real_T_12[11028]
	{
	 type:    flt(64,IEEE)*
	 alias:   "SteeringWheelTorque"
	 origin:  "AutoboxModel/CanCommunication/VehicleCAN/SteeringMessage/Steering/SteeringWheelTorque"
	 flags:   READONLY
 addr:    0x002a6270
}
	p_0_AutoboxModel_boolean_T_18[8]
	{
	 type:    uint(8)*
	 alias:   "SteeringWheelTorqueSign"
	 bitmask: 0x01
	 range:   < 0 ; 1 >
	 origin:  "AutoboxModel/CanCommunication/VehicleCAN/SteeringMessage/Steering/SteeringWheelTorqueSign"
	 flags:   READONLY
	 addr:    0x002a6288
	}
	p_0_AutoboxModel_uint8_T_17[3638]
	{
	 type:    uint(8)*
	 alias:   "THIState"
	 origin:  "AutoboxModel/CanCommunication/CustomerCAN/GatewayStatesMessage/Gateway_States/THIState"
	 flags:   READONLY
 addr:    0x002a6284
}
	p_0_AutoboxModel_real_T_12[11089]
	{
	 type:    flt(64,IEEE)*
	 alias:   "ThrottleSetpoint"
	 origin:  "AutoboxModel/CanCommunication/CustomerCAN/VehicleDataMessage/Vehicle_Data/ThrottleSetpoint"
	 flags:   READONLY
 addr:    0x002a6270
}
	p_0_AutoboxModel_uint8_T_17[3635]
	{
	 type:    uint(8)*
	 alias:   "VIState"
	 origin:  "AutoboxModel/CanCommunication/CustomerCAN/GatewayStatesMessage/Gateway_States/VIState"
	 flags:   READONLY
 addr:    0x002a6284
}
	p_0_AutoboxModel_real_T_12[11021]
	{
	 type:    flt(64,IEEE)*
	 alias:   "YawRate"
	 origin:  "AutoboxModel/CanCommunication/VehicleCAN/MotionMessage/Motion/YawRate"
	 flags:   READONLY
 addr:    0x002a6270
}
	p_0_AutoboxModel_boolean_T_18[5]
	{
	 type:    uint(8)*
	 alias:   "YawRateSign"
	 bitmask: 0x01
	 range:   < 0 ; 1 >
	 origin:  "AutoboxModel/CanCommunication/VehicleCAN/MotionMessage/Motion/YawRateSign"
	 flags:   READONLY
 addr:    0x002a6288
}
	p_0_AutoboxModel_real_T_12[11083]
	{
	 type:    flt(64,IEEE)*
	 alias:   "a"
	 origin:  "AutoboxModel/Scopes/Product5/Out1"
	 flags:   READONLY
 addr:    0x002a6270
}
	p_0_AutoboxModel_real_T_12[11056]
	{
	 type:    flt(64,IEEE)*
	 alias:   "acceleration"
	 origin:  "AutoboxModel/EthernetCommunication/AssembleControlBus/S-Function4/Out7"
	 flags:   READONLY
 addr:    0x002a6270
}
	p_0_AutoboxModel_real_T_12[11053]
	{
	 type:    flt(64,IEEE)*
	 alias:   "brake"
	 origin:  "AutoboxModel/EthernetCommunication/AssembleControlBus/S-Function4/Out4"
	 flags:   READONLY
 addr:    0x002a6270
}
	p_0_AutoboxModel_real_T_12[11070]
	{
	 type:    flt(64,IEEE)*
	 alias:   "delta"
	 origin:  "AutoboxModel/Scopes/Product4/Out1"
	 flags:   READONLY
 addr:    0x002a6270
}
	p_0_AutoboxModel_real_T_12[11061]
	{
	 type:    flt(64,IEEE)*
	 alias:   "e_n"
	 origin:  "AutoboxModel/Scopes/Product/Out1"
	 flags:   READONLY
 addr:    0x002a6270
}
	p_0_AutoboxModel_real_T_12[11062]
	{
	 type:    flt(64,IEEE)*
	 alias:   "e_psi"
	 origin:  "AutoboxModel/Scopes/Product1/Out1"
	 flags:   READONLY
	 addr:    0x002a6270
	}
	p_0_AutoboxModel_real_T_12[11064]
	{
	 type:    flt(64,IEEE)*
	 alias:   "e_t"
	 origin:  "AutoboxModel/Scopes/Product3/Out1"
	 flags:   READONLY
 addr:    0x002a6270
}
	p_0_AutoboxModel_real_T_12[11063]
	{
	 type:    flt(64,IEEE)*
	 alias:   "e_v"
	 origin:  "AutoboxModel/Scopes/Product2/Out1"
	 flags:   READONLY
 addr:    0x002a6270
}
	p_0_AutoboxModel_real_T_12[11050]
	{
	 type:    flt(64,IEEE)*
	 alias:   "sequence_num"
	 origin:  "AutoboxModel/EthernetCommunication/AssembleControlBus/S-Function4/Out1"
	 flags:   READONLY
 addr:    0x002a6270
}
	p_0_AutoboxModel_real_T_12[11106]
	{
	 type:    flt(64,IEEE)*
	 alias:   "signed steering angle"
	 origin:  "AutoboxModel/CanCommunication/CustomerCAN/SteeringInterface/limit steering angle/current_steering_wheel_angle/Out1"
	 flags:   READONLY
 addr:    0x002a6270
}
	p_0_AutoboxModel_real_T_12[11178]
	{
	 type:    flt(64,IEEE)*
	 alias:   "steering_WHEEL_angle"
	 origin:  "AutoboxModel/AutoboxControl/extract_vehicle_data/Switch2/Out1"
	 flags:   READONLY
	 addr:    0x002a6270
	}
	p_0_AutoboxModel_real_T_12[11054]
	{
	 type:    flt(64,IEEE)*
	 alias:   "steering_rate"
	 origin:  "AutoboxModel/EthernetCommunication/AssembleControlBus/S-Function4/Out5"
	 flags:   READONLY
	 addr:    0x002a6270
	}
	p_0_AutoboxModel_real_T_12[11055]
	{
	 type:    flt(64,IEEE)*
	 alias:   "steering_target"
	 origin:  "AutoboxModel/EthernetCommunication/AssembleControlBus/S-Function4/Out6"
	 flags:   READONLY
 addr:    0x002a6270
}
	p_0_AutoboxModel_real_T_12[11052]
	{
	 type:    flt(64,IEEE)*
	 alias:   "throttle"
	 origin:  "AutoboxModel/EthernetCommunication/AssembleControlBus/S-Function4/Out3"
	 flags:   READONLY
 addr:    0x002a6270
}
	p_0_AutoboxModel_real_T_12[11051]
	{
	 type:    flt(64,IEEE)*
	 alias:   "timestamp_sec"
	 origin:  "AutoboxModel/EthernetCommunication/AssembleControlBus/S-Function4/Out2"
	 flags:   READONLY
	 addr:    0x002a6270
	}

endgroup

-- ******** RTT Dynamic Variables *********************************************

group "RTT Dynamic Variables"

endgroup

-- ******** User variables from model_usr.trc *********************************

-- RTI_USR_TRC_BEGIN

-- No user file AutoboxModel_usr.trc found.

-- RTI_USR_TRC_END

-- ******** EESPort States Variables ******************************************
group "XIL API"
{ 
  
}

  group "EESPort"
  {  
    
  }

    p_xilapi_eesport_activeerrorset_uint32_T
    {
      type:    uint(32)*
      alias:   "Active ErrorSet"
      desc:    "Index of active ErrorSet or 0 if no ErrorSet is active."
      flags:   OUTPUT|READONLY
      range:   < 0 ; 4294967295 >
 addr:    0x006cae04
}

    p_xilapi_eesport_erroractivated_uint32_T
    {
      type:    uint(32)*
      alias:   "Error Activated"
      desc:    "0 - no error is activated on hardware, 1 - at least one error is activated on hardware."  
      flags:   OUTPUT|READONLY
      range:   < 0 ; 1 >
 addr:    0x006cae08
}

    p_xilapi_eesport_errorswitching_uint32_T
    {
      type:    uint(32)*
      alias:   "Error Switching"
      desc:    "0 - no switching operation running on hardware, 1 -  switching operation running on hardware."
      flags:   OUTPUT|READONLY
      range:   < 0 ; 1 >
 addr:    0x006cae0c
}

    xilapi_eesport_flags_uint32_T
    {
      type:    uint(32)
      alias:   "Flags"
      flags:   OUTPUT|READONLY
      range:   < 0 ; 4294967295 >
 addr:    0x006cae10
}

    xilapi_eesport_trigger_uint32_T
    {
      type:    uint(32)
      alias:   "Trigger"
      flags:   OUTPUT|READONLY
      range:   < 0 ; 4294967295 >
			 addr:    0x006cae14
			}

    endgroup -- "EESPort"

endgroup -- "XILAPI"



-- ******** [EOF] *************************************************************

